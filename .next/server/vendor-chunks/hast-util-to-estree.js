"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/hast-util-to-estree";
exports.ids = ["vendor-chunks/hast-util-to-estree"];
exports.modules = {

/***/ "(ssr)/./node_modules/hast-util-to-estree/lib/handlers/comment.js":
/*!******************************************************************!*\
  !*** ./node_modules/hast-util-to-estree/lib/handlers/comment.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   comment: () => (/* binding */ comment)\n/* harmony export */ });\n/**\n * @import {\n *   JSXEmptyExpression as JsxEmptyExpression,\n *   JSXExpressionContainer as JsxExpressionContainer,\n * } from 'estree-jsx'\n * @import {Comment} from 'estree'\n * @import {State} from 'hast-util-to-estree'\n * @import {Comment as HastComment} from 'hast'\n */ // Make VS Code show references to the above types.\n\"\";\n/**\n * Turn a hast comment into an estree node.\n *\n * @param {HastComment} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer}\n *   estree expression.\n */ function comment(node, state) {\n    /** @type {Comment} */ const result = {\n        type: \"Block\",\n        value: node.value\n    };\n    state.inherit(node, result);\n    state.comments.push(result);\n    /** @type {JsxEmptyExpression} */ const expression = {\n        type: \"JSXEmptyExpression\",\n        // @ts-expect-error: `comments` is custom.\n        comments: [\n            Object.assign({}, result, {\n                leading: false,\n                trailing: true\n            })\n        ]\n    };\n    state.patch(node, expression);\n    /** @type {JsxExpressionContainer} */ const container = {\n        type: \"JSXExpressionContainer\",\n        expression\n    };\n    state.patch(node, container);\n    return container;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvY29tbWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7O0NBUUMsR0FFRCxtREFBbUQ7QUFDbkQ7QUFFQTs7Ozs7Ozs7O0NBU0MsR0FDTSxTQUFTQSxRQUFRQyxJQUFJLEVBQUVDLEtBQUs7SUFDakMsb0JBQW9CLEdBQ3BCLE1BQU1DLFNBQVM7UUFBQ0MsTUFBTTtRQUFTQyxPQUFPSixLQUFLSSxLQUFLO0lBQUE7SUFDaERILE1BQU1JLE9BQU8sQ0FBQ0wsTUFBTUU7SUFDcEJELE1BQU1LLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDTDtJQUVwQiwrQkFBK0IsR0FDL0IsTUFBTU0sYUFBYTtRQUNqQkwsTUFBTTtRQUNOLDBDQUEwQztRQUMxQ0csVUFBVTtZQUFDRyxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHUixRQUFRO2dCQUFDUyxTQUFTO2dCQUFPQyxVQUFVO1lBQUk7U0FBRztJQUN6RTtJQUNBWCxNQUFNWSxLQUFLLENBQUNiLE1BQU1RO0lBRWxCLG1DQUFtQyxHQUNuQyxNQUFNTSxZQUFZO1FBQUNYLE1BQU07UUFBMEJLO0lBQVU7SUFDN0RQLE1BQU1ZLEtBQUssQ0FBQ2IsTUFBTWM7SUFDbEIsT0FBT0E7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9oYXN0LXV0aWwtdG8tZXN0cmVlL2xpYi9oYW5kbGVycy9jb21tZW50LmpzPzE5NzgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW1wb3J0IHtcbiAqICAgSlNYRW1wdHlFeHByZXNzaW9uIGFzIEpzeEVtcHR5RXhwcmVzc2lvbixcbiAqICAgSlNYRXhwcmVzc2lvbkNvbnRhaW5lciBhcyBKc3hFeHByZXNzaW9uQ29udGFpbmVyLFxuICogfSBmcm9tICdlc3RyZWUtanN4J1xuICogQGltcG9ydCB7Q29tbWVudH0gZnJvbSAnZXN0cmVlJ1xuICogQGltcG9ydCB7U3RhdGV9IGZyb20gJ2hhc3QtdXRpbC10by1lc3RyZWUnXG4gKiBAaW1wb3J0IHtDb21tZW50IGFzIEhhc3RDb21tZW50fSBmcm9tICdoYXN0J1xuICovXG5cbi8vIE1ha2UgVlMgQ29kZSBzaG93IHJlZmVyZW5jZXMgdG8gdGhlIGFib3ZlIHR5cGVzLlxuJydcblxuLyoqXG4gKiBUdXJuIGEgaGFzdCBjb21tZW50IGludG8gYW4gZXN0cmVlIG5vZGUuXG4gKlxuICogQHBhcmFtIHtIYXN0Q29tbWVudH0gbm9kZVxuICogICBoYXN0IG5vZGUgdG8gdHJhbnNmb3JtLlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kIGFib3V0IHRoZSBjdXJyZW50IHN0YXRlLlxuICogQHJldHVybnMge0pzeEV4cHJlc3Npb25Db250YWluZXJ9XG4gKiAgIGVzdHJlZSBleHByZXNzaW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tbWVudChub2RlLCBzdGF0ZSkge1xuICAvKiogQHR5cGUge0NvbW1lbnR9ICovXG4gIGNvbnN0IHJlc3VsdCA9IHt0eXBlOiAnQmxvY2snLCB2YWx1ZTogbm9kZS52YWx1ZX1cbiAgc3RhdGUuaW5oZXJpdChub2RlLCByZXN1bHQpXG4gIHN0YXRlLmNvbW1lbnRzLnB1c2gocmVzdWx0KVxuXG4gIC8qKiBAdHlwZSB7SnN4RW1wdHlFeHByZXNzaW9ufSAqL1xuICBjb25zdCBleHByZXNzaW9uID0ge1xuICAgIHR5cGU6ICdKU1hFbXB0eUV4cHJlc3Npb24nLFxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3I6IGBjb21tZW50c2AgaXMgY3VzdG9tLlxuICAgIGNvbW1lbnRzOiBbT2JqZWN0LmFzc2lnbih7fSwgcmVzdWx0LCB7bGVhZGluZzogZmFsc2UsIHRyYWlsaW5nOiB0cnVlfSldXG4gIH1cbiAgc3RhdGUucGF0Y2gobm9kZSwgZXhwcmVzc2lvbilcblxuICAvKiogQHR5cGUge0pzeEV4cHJlc3Npb25Db250YWluZXJ9ICovXG4gIGNvbnN0IGNvbnRhaW5lciA9IHt0eXBlOiAnSlNYRXhwcmVzc2lvbkNvbnRhaW5lcicsIGV4cHJlc3Npb259XG4gIHN0YXRlLnBhdGNoKG5vZGUsIGNvbnRhaW5lcilcbiAgcmV0dXJuIGNvbnRhaW5lclxufVxuIl0sIm5hbWVzIjpbImNvbW1lbnQiLCJub2RlIiwic3RhdGUiLCJyZXN1bHQiLCJ0eXBlIiwidmFsdWUiLCJpbmhlcml0IiwiY29tbWVudHMiLCJwdXNoIiwiZXhwcmVzc2lvbiIsIk9iamVjdCIsImFzc2lnbiIsImxlYWRpbmciLCJ0cmFpbGluZyIsInBhdGNoIiwiY29udGFpbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-to-estree/lib/handlers/comment.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-to-estree/lib/handlers/element.js":
/*!******************************************************************!*\
  !*** ./node_modules/hast-util-to-estree/lib/handlers/element.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   element: () => (/* binding */ element)\n/* harmony export */ });\n/* harmony import */ var comma_separated_tokens__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! comma-separated-tokens */ \"(ssr)/./node_modules/comma-separated-tokens/index.js\");\n/* harmony import */ var estree_util_is_identifier_name__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! estree-util-is-identifier-name */ \"(ssr)/./node_modules/estree-util-is-identifier-name/lib/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/property-information/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/property-information/lib/find.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/property-information/lib/hast-to-react.js\");\n/* harmony import */ var space_separated_tokens__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! space-separated-tokens */ \"(ssr)/./node_modules/space-separated-tokens/index.js\");\n/* harmony import */ var style_to_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! style-to-js */ \"(ssr)/./node_modules/style-to-js/cjs/index.js\");\n/**\n * @import {\n *   JSXAttribute as JsxAttribute,\n *   JSXElement as JsxElement,\n *   JSXSpreadAttribute as JsxSpreadAttribute,\n * } from 'estree-jsx'\n * @import {Property} from 'estree'\n * @import {State} from 'hast-util-to-estree'\n * @import {Element as HastElement} from 'hast'\n */ \n\n\n\n\nconst own = {}.hasOwnProperty;\nconst cap = /[A-Z]/g;\nconst tableCellElement = new Set([\n    \"td\",\n    \"th\"\n]);\n/**\n * Turn a hast element into an estree node.\n *\n * @param {HastElement} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxElement}\n *   estree expression.\n */ // eslint-disable-next-line complexity\nfunction element(node, state) {\n    const parentSchema = state.schema;\n    let schema = parentSchema;\n    const properties = node.properties || {};\n    if (parentSchema.space === \"html\" && node.tagName.toLowerCase() === \"svg\") {\n        schema = property_information__WEBPACK_IMPORTED_MODULE_1__.svg;\n        state.schema = schema;\n    }\n    const children = state.all(node);\n    /** @type {Array<JsxAttribute | JsxSpreadAttribute>} */ const attributes = [];\n    /** @type {string} */ let property;\n    /** @type {string | undefined} */ let alignValue;\n    /** @type {Array<Property> | undefined} */ let styleProperties;\n    for(property in properties){\n        if (own.call(properties, property)) {\n            let value = properties[property];\n            const info = (0,property_information__WEBPACK_IMPORTED_MODULE_2__.find)(schema, property);\n            /** @type {JsxAttribute['value']} */ let attributeValue;\n            // Ignore nullish and `NaN` values.\n            // Ignore `false` and falsey known booleans.\n            if (value === null || value === undefined || value === false || typeof value === \"number\" && Number.isNaN(value) || !value && info.boolean) {\n                continue;\n            }\n            property = state.elementAttributeNameCase === \"react\" && info.space ? property_information__WEBPACK_IMPORTED_MODULE_3__.hastToReact[info.property] || info.property : info.attribute;\n            if (Array.isArray(value)) {\n                // Accept `array`.\n                // Most properties are space-separated.\n                value = info.commaSeparated ? (0,comma_separated_tokens__WEBPACK_IMPORTED_MODULE_4__.stringify)(value) : (0,space_separated_tokens__WEBPACK_IMPORTED_MODULE_5__.stringify)(value);\n            }\n            if (property === \"style\") {\n                let styleObject = typeof value === \"object\" ? value : parseStyle(String(value), node.tagName);\n                if (state.stylePropertyNameCase === \"css\") {\n                    styleObject = transformStylesToCssCasing(styleObject);\n                }\n                /** @type {Array<Property>} */ const cssProperties = [];\n                /** @type {string} */ let cssProperty;\n                for(cssProperty in styleObject){\n                    // eslint-disable-next-line max-depth\n                    if (own.call(styleObject, cssProperty)) {\n                        cssProperties.push({\n                            type: \"Property\",\n                            method: false,\n                            shorthand: false,\n                            computed: false,\n                            key: (0,estree_util_is_identifier_name__WEBPACK_IMPORTED_MODULE_6__.name)(cssProperty) ? {\n                                type: \"Identifier\",\n                                name: cssProperty\n                            } : {\n                                type: \"Literal\",\n                                value: cssProperty\n                            },\n                            value: {\n                                type: \"Literal\",\n                                value: String(styleObject[cssProperty])\n                            },\n                            kind: \"init\"\n                        });\n                    }\n                }\n                styleProperties = cssProperties;\n                attributeValue = {\n                    type: \"JSXExpressionContainer\",\n                    expression: {\n                        type: \"ObjectExpression\",\n                        properties: cssProperties\n                    }\n                };\n            } else if (value === true) {\n                attributeValue = null;\n            } else if (state.tableCellAlignToStyle && tableCellElement.has(node.tagName) && property === \"align\") {\n                alignValue = String(value);\n                continue;\n            } else {\n                attributeValue = {\n                    type: \"Literal\",\n                    value: String(value)\n                };\n            }\n            if ((0,estree_util_is_identifier_name__WEBPACK_IMPORTED_MODULE_6__.name)(property, {\n                jsx: true\n            })) {\n                attributes.push({\n                    type: \"JSXAttribute\",\n                    name: {\n                        type: \"JSXIdentifier\",\n                        name: property\n                    },\n                    value: attributeValue\n                });\n            } else {\n                attributes.push({\n                    type: \"JSXSpreadAttribute\",\n                    argument: {\n                        type: \"ObjectExpression\",\n                        properties: [\n                            {\n                                type: \"Property\",\n                                method: false,\n                                shorthand: false,\n                                computed: false,\n                                key: {\n                                    type: \"Literal\",\n                                    value: String(property)\n                                },\n                                // @ts-expect-error No need to worry about `style` (which has a\n                                // `JSXExpressionContainer` value) because that’s a valid identifier.\n                                value: attributeValue || {\n                                    type: \"Literal\",\n                                    value: true\n                                },\n                                kind: \"init\"\n                            }\n                        ]\n                    }\n                });\n            }\n        }\n    }\n    if (alignValue !== undefined) {\n        if (!styleProperties) {\n            styleProperties = [];\n            attributes.push({\n                type: \"JSXAttribute\",\n                name: {\n                    type: \"JSXIdentifier\",\n                    name: \"style\"\n                },\n                value: {\n                    type: \"JSXExpressionContainer\",\n                    expression: {\n                        type: \"ObjectExpression\",\n                        properties: styleProperties\n                    }\n                }\n            });\n        }\n        const cssProperty = state.stylePropertyNameCase === \"css\" ? transformStyleToCssCasing(\"textAlign\") : \"textAlign\";\n        styleProperties.push({\n            type: \"Property\",\n            method: false,\n            shorthand: false,\n            computed: false,\n            key: (0,estree_util_is_identifier_name__WEBPACK_IMPORTED_MODULE_6__.name)(cssProperty) ? {\n                type: \"Identifier\",\n                name: cssProperty\n            } : {\n                type: \"Literal\",\n                value: cssProperty\n            },\n            value: {\n                type: \"Literal\",\n                value: alignValue\n            },\n            kind: \"init\"\n        });\n    }\n    // Restore parent schema.\n    state.schema = parentSchema;\n    /** @type {JsxElement} */ const result = {\n        type: \"JSXElement\",\n        openingElement: {\n            type: \"JSXOpeningElement\",\n            attributes,\n            name: state.createJsxElementName(node.tagName),\n            selfClosing: children.length === 0\n        },\n        closingElement: children.length > 0 ? {\n            type: \"JSXClosingElement\",\n            name: state.createJsxElementName(node.tagName)\n        } : null,\n        children\n    };\n    state.inherit(node, result);\n    return result;\n}\n/**\n * Parse CSS rules as a declaration.\n *\n * @param {string} value\n *   CSS text.\n * @param {string} tagName\n *   Element name.\n * @returns {Record<string, string>}\n *   Properties.\n */ function parseStyle(value, tagName) {\n    try {\n        return style_to_js__WEBPACK_IMPORTED_MODULE_0__(value, {\n            reactCompat: true\n        });\n    } catch (error) {\n        const cause = /** @type {Error} */ error;\n        const exception = new Error(\"Could not parse `style` attribute on `\" + tagName + \"`\", {\n            cause\n        });\n        throw exception;\n    }\n}\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Record<string, string>} domCasing\n * @returns {Record<string, string>}\n */ function transformStylesToCssCasing(domCasing) {\n    /** @type {Record<string, string>} */ const cssCasing = {};\n    /** @type {string} */ let from;\n    for(from in domCasing){\n        if (own.call(domCasing, from)) {\n            cssCasing[transformStyleToCssCasing(from)] = domCasing[from];\n        }\n    }\n    return cssCasing;\n}\n/**\n * Transform a DOM casing style property to a CSS casing style property.\n *\n * @param {string} from\n * @returns {string}\n */ function transformStyleToCssCasing(from) {\n    let to = from.replace(cap, toDash);\n    // Handle `ms-xxx` -> `-ms-xxx`.\n    if (to.slice(0, 3) === \"ms-\") to = \"-\" + to;\n    return to;\n}\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */ function toDash($0) {\n    return \"-\" + $0.toLowerCase();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-to-estree/lib/handlers/element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-to-estree/lib/handlers/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/hast-util-to-estree/lib/handlers/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handlers: () => (/* binding */ handlers)\n/* harmony export */ });\n/* harmony import */ var _comment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./comment.js */ \"(ssr)/./node_modules/hast-util-to-estree/lib/handlers/comment.js\");\n/* harmony import */ var _element_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./element.js */ \"(ssr)/./node_modules/hast-util-to-estree/lib/handlers/element.js\");\n/* harmony import */ var _mdx_expression_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mdx-expression.js */ \"(ssr)/./node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js\");\n/* harmony import */ var _mdx_jsx_element_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mdx-jsx-element.js */ \"(ssr)/./node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js\");\n/* harmony import */ var _mdxjs_esm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mdxjs-esm.js */ \"(ssr)/./node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js\");\n/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./root.js */ \"(ssr)/./node_modules/hast-util-to-estree/lib/handlers/root.js\");\n/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./text.js */ \"(ssr)/./node_modules/hast-util-to-estree/lib/handlers/text.js\");\n\n\n\n\n\n\n\nconst handlers = {\n    comment: _comment_js__WEBPACK_IMPORTED_MODULE_0__.comment,\n    doctype: ignore,\n    element: _element_js__WEBPACK_IMPORTED_MODULE_1__.element,\n    mdxFlowExpression: _mdx_expression_js__WEBPACK_IMPORTED_MODULE_2__.mdxExpression,\n    mdxJsxFlowElement: _mdx_jsx_element_js__WEBPACK_IMPORTED_MODULE_3__.mdxJsxElement,\n    mdxJsxTextElement: _mdx_jsx_element_js__WEBPACK_IMPORTED_MODULE_3__.mdxJsxElement,\n    mdxTextExpression: _mdx_expression_js__WEBPACK_IMPORTED_MODULE_2__.mdxExpression,\n    mdxjsEsm: _mdxjs_esm_js__WEBPACK_IMPORTED_MODULE_4__.mdxjsEsm,\n    root: _root_js__WEBPACK_IMPORTED_MODULE_5__.root,\n    text: _text_js__WEBPACK_IMPORTED_MODULE_6__.text\n};\n/**\n * Handle a node that is ignored.\n *\n * @returns {undefined}\n *   Nothing.\n */ function ignore() {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBb0M7QUFDQTtBQUNhO0FBQ0M7QUFDWDtBQUNUO0FBQ0E7QUFFdkIsTUFBTU8sV0FBVztJQUN0QlAsT0FBT0Esa0RBQUFBO0lBQ1BRLFNBQVNDO0lBQ1RSLE9BQU9BLGtEQUFBQTtJQUNQUyxtQkFBbUJSLDZEQUFhQTtJQUNoQ1MsbUJBQW1CUiw4REFBYUE7SUFDaENTLG1CQUFtQlQsOERBQWFBO0lBQ2hDVSxtQkFBbUJYLDZEQUFhQTtJQUNoQ0UsUUFBUUEscURBQUFBO0lBQ1JDLElBQUlBLDRDQUFBQTtJQUNKQyxJQUFJQSw0Q0FBQUE7QUFDTixFQUFDO0FBRUQ7Ozs7O0NBS0MsR0FDRCxTQUFTRyxVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL2hhc3QtdXRpbC10by1lc3RyZWUvbGliL2hhbmRsZXJzL2luZGV4LmpzPzM4OTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjb21tZW50fSBmcm9tICcuL2NvbW1lbnQuanMnXG5pbXBvcnQge2VsZW1lbnR9IGZyb20gJy4vZWxlbWVudC5qcydcbmltcG9ydCB7bWR4RXhwcmVzc2lvbn0gZnJvbSAnLi9tZHgtZXhwcmVzc2lvbi5qcydcbmltcG9ydCB7bWR4SnN4RWxlbWVudH0gZnJvbSAnLi9tZHgtanN4LWVsZW1lbnQuanMnXG5pbXBvcnQge21keGpzRXNtfSBmcm9tICcuL21keGpzLWVzbS5qcydcbmltcG9ydCB7cm9vdH0gZnJvbSAnLi9yb290LmpzJ1xuaW1wb3J0IHt0ZXh0fSBmcm9tICcuL3RleHQuanMnXG5cbmV4cG9ydCBjb25zdCBoYW5kbGVycyA9IHtcbiAgY29tbWVudCxcbiAgZG9jdHlwZTogaWdub3JlLFxuICBlbGVtZW50LFxuICBtZHhGbG93RXhwcmVzc2lvbjogbWR4RXhwcmVzc2lvbixcbiAgbWR4SnN4Rmxvd0VsZW1lbnQ6IG1keEpzeEVsZW1lbnQsXG4gIG1keEpzeFRleHRFbGVtZW50OiBtZHhKc3hFbGVtZW50LFxuICBtZHhUZXh0RXhwcmVzc2lvbjogbWR4RXhwcmVzc2lvbixcbiAgbWR4anNFc20sXG4gIHJvb3QsXG4gIHRleHRcbn1cblxuLyoqXG4gKiBIYW5kbGUgYSBub2RlIHRoYXQgaXMgaWdub3JlZC5cbiAqXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICogICBOb3RoaW5nLlxuICovXG5mdW5jdGlvbiBpZ25vcmUoKSB7fVxuIl0sIm5hbWVzIjpbImNvbW1lbnQiLCJlbGVtZW50IiwibWR4RXhwcmVzc2lvbiIsIm1keEpzeEVsZW1lbnQiLCJtZHhqc0VzbSIsInJvb3QiLCJ0ZXh0IiwiaGFuZGxlcnMiLCJkb2N0eXBlIiwiaWdub3JlIiwibWR4Rmxvd0V4cHJlc3Npb24iLCJtZHhKc3hGbG93RWxlbWVudCIsIm1keEpzeFRleHRFbGVtZW50IiwibWR4VGV4dEV4cHJlc3Npb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-to-estree/lib/handlers/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js":
/*!*************************************************************************!*\
  !*** ./node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mdxExpression: () => (/* binding */ mdxExpression)\n/* harmony export */ });\n/* harmony import */ var estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! estree-util-attach-comments */ \"(ssr)/./node_modules/estree-util-attach-comments/lib/index.js\");\n/**\n * @import {\n *   JSXEmptyExpression as JsxEmptyExpression,\n *   JSXExpressionContainer as JsxExpressionContainer\n * } from 'estree-jsx'\n * @import {Expression} from 'estree'\n * @import {\n *   MdxFlowExpressionHast as MdxFlowExpression,\n *   MdxTextExpressionHast as MdxTextExpression\n * } from 'mdast-util-mdx-expression'\n * @import {State} from 'hast-util-to-estree'\n */ \n/**\n * Turn an MDX expression node into an estree node.\n *\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer}\n *   estree expression.\n */ function mdxExpression(node, state) {\n    const estree = node.data && node.data.estree;\n    const comments = estree && estree.comments || [];\n    /** @type {Expression | JsxEmptyExpression | undefined} */ let expression;\n    if (estree) {\n        state.comments.push(...comments);\n        (0,estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_0__.attachComments)(estree, estree.comments);\n        expression = estree.body[0] && estree.body[0].type === \"ExpressionStatement\" && estree.body[0].expression || undefined;\n    }\n    if (!expression) {\n        expression = {\n            type: \"JSXEmptyExpression\"\n        };\n        state.patch(node, expression);\n    }\n    /** @type {JsxExpressionContainer} */ const result = {\n        type: \"JSXExpressionContainer\",\n        expression\n    };\n    state.inherit(node, result);\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4LWV4cHJlc3Npb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Q0FXQyxHQUV5RDtBQUUxRDs7Ozs7Ozs7O0NBU0MsR0FDTSxTQUFTQyxjQUFjQyxJQUFJLEVBQUVDLEtBQUs7SUFDdkMsTUFBTUMsU0FBU0YsS0FBS0csSUFBSSxJQUFJSCxLQUFLRyxJQUFJLENBQUNELE1BQU07SUFDNUMsTUFBTUUsV0FBVyxVQUFXRixPQUFPRSxRQUFRLElBQUssRUFBRTtJQUNsRCx3REFBd0QsR0FDeEQsSUFBSUM7SUFFSixJQUFJSCxRQUFRO1FBQ1ZELE1BQU1HLFFBQVEsQ0FBQ0UsSUFBSSxJQUFJRjtRQUN2Qk4sMkVBQWNBLENBQUNJLFFBQVFBLE9BQU9FLFFBQVE7UUFDdENDLGFBQ0UsT0FBUUUsSUFBSSxDQUFDLEVBQUUsSUFDYkwsT0FBT0ssSUFBSSxDQUFDLEVBQUUsQ0FBQ0MsSUFBSSxLQUFLLHlCQUN4Qk4sT0FBT0ssSUFBSSxDQUFDLEVBQUUsQ0FBQ0YsVUFBVSxJQUMzQkk7SUFDSjtJQUVBLElBQUksQ0FBQ0osWUFBWTtRQUNmQSxhQUFhO1lBQUNHLE1BQU07UUFBb0I7UUFDeENQLE1BQU1TLEtBQUssQ0FBQ1YsTUFBTUs7SUFDcEI7SUFFQSxtQ0FBbUMsR0FDbkMsTUFBTU0sU0FBUztRQUFDSCxNQUFNO1FBQTBCSDtJQUFVO0lBQzFESixNQUFNVyxPQUFPLENBQUNaLE1BQU1XO0lBQ3BCLE9BQU9BO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4LWV4cHJlc3Npb24uanM/ZmVkZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge1xuICogICBKU1hFbXB0eUV4cHJlc3Npb24gYXMgSnN4RW1wdHlFeHByZXNzaW9uLFxuICogICBKU1hFeHByZXNzaW9uQ29udGFpbmVyIGFzIEpzeEV4cHJlc3Npb25Db250YWluZXJcbiAqIH0gZnJvbSAnZXN0cmVlLWpzeCdcbiAqIEBpbXBvcnQge0V4cHJlc3Npb259IGZyb20gJ2VzdHJlZSdcbiAqIEBpbXBvcnQge1xuICogICBNZHhGbG93RXhwcmVzc2lvbkhhc3QgYXMgTWR4Rmxvd0V4cHJlc3Npb24sXG4gKiAgIE1keFRleHRFeHByZXNzaW9uSGFzdCBhcyBNZHhUZXh0RXhwcmVzc2lvblxuICogfSBmcm9tICdtZGFzdC11dGlsLW1keC1leHByZXNzaW9uJ1xuICogQGltcG9ydCB7U3RhdGV9IGZyb20gJ2hhc3QtdXRpbC10by1lc3RyZWUnXG4gKi9cblxuaW1wb3J0IHthdHRhY2hDb21tZW50c30gZnJvbSAnZXN0cmVlLXV0aWwtYXR0YWNoLWNvbW1lbnRzJ1xuXG4vKipcbiAqIFR1cm4gYW4gTURYIGV4cHJlc3Npb24gbm9kZSBpbnRvIGFuIGVzdHJlZSBub2RlLlxuICpcbiAqIEBwYXJhbSB7TWR4Rmxvd0V4cHJlc3Npb24gfCBNZHhUZXh0RXhwcmVzc2lvbn0gbm9kZVxuICogICBoYXN0IG5vZGUgdG8gdHJhbnNmb3JtLlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kIGFib3V0IHRoZSBjdXJyZW50IHN0YXRlLlxuICogQHJldHVybnMge0pzeEV4cHJlc3Npb25Db250YWluZXJ9XG4gKiAgIGVzdHJlZSBleHByZXNzaW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWR4RXhwcmVzc2lvbihub2RlLCBzdGF0ZSkge1xuICBjb25zdCBlc3RyZWUgPSBub2RlLmRhdGEgJiYgbm9kZS5kYXRhLmVzdHJlZVxuICBjb25zdCBjb21tZW50cyA9IChlc3RyZWUgJiYgZXN0cmVlLmNvbW1lbnRzKSB8fCBbXVxuICAvKiogQHR5cGUge0V4cHJlc3Npb24gfCBKc3hFbXB0eUV4cHJlc3Npb24gfCB1bmRlZmluZWR9ICovXG4gIGxldCBleHByZXNzaW9uXG5cbiAgaWYgKGVzdHJlZSkge1xuICAgIHN0YXRlLmNvbW1lbnRzLnB1c2goLi4uY29tbWVudHMpXG4gICAgYXR0YWNoQ29tbWVudHMoZXN0cmVlLCBlc3RyZWUuY29tbWVudHMpXG4gICAgZXhwcmVzc2lvbiA9XG4gICAgICAoZXN0cmVlLmJvZHlbMF0gJiZcbiAgICAgICAgZXN0cmVlLmJvZHlbMF0udHlwZSA9PT0gJ0V4cHJlc3Npb25TdGF0ZW1lbnQnICYmXG4gICAgICAgIGVzdHJlZS5ib2R5WzBdLmV4cHJlc3Npb24pIHx8XG4gICAgICB1bmRlZmluZWRcbiAgfVxuXG4gIGlmICghZXhwcmVzc2lvbikge1xuICAgIGV4cHJlc3Npb24gPSB7dHlwZTogJ0pTWEVtcHR5RXhwcmVzc2lvbid9XG4gICAgc3RhdGUucGF0Y2gobm9kZSwgZXhwcmVzc2lvbilcbiAgfVxuXG4gIC8qKiBAdHlwZSB7SnN4RXhwcmVzc2lvbkNvbnRhaW5lcn0gKi9cbiAgY29uc3QgcmVzdWx0ID0ge3R5cGU6ICdKU1hFeHByZXNzaW9uQ29udGFpbmVyJywgZXhwcmVzc2lvbn1cbiAgc3RhdGUuaW5oZXJpdChub2RlLCByZXN1bHQpXG4gIHJldHVybiByZXN1bHRcbn1cbiJdLCJuYW1lcyI6WyJhdHRhY2hDb21tZW50cyIsIm1keEV4cHJlc3Npb24iLCJub2RlIiwic3RhdGUiLCJlc3RyZWUiLCJkYXRhIiwiY29tbWVudHMiLCJleHByZXNzaW9uIiwicHVzaCIsImJvZHkiLCJ0eXBlIiwidW5kZWZpbmVkIiwicGF0Y2giLCJyZXN1bHQiLCJpbmhlcml0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-to-estree/lib/handlers/mdx-expression.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js":
/*!**************************************************************************!*\
  !*** ./node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mdxJsxElement: () => (/* binding */ mdxJsxElement)\n/* harmony export */ });\n/* harmony import */ var estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! estree-util-attach-comments */ \"(ssr)/./node_modules/estree-util-attach-comments/lib/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/property-information/index.js\");\n/**\n * @import {\n *   JSXAttribute as JsxAttribute,\n *   JSXElement as JsxElement,\n *   JSXFragment as JsxFragment,\n *   JSXSpreadAttribute as JsxSpreadAttribute\n * } from 'estree-jsx'\n * @import {Expression} from 'estree'\n * @import {State} from 'hast-util-to-estree'\n * @import {\n *   MdxJsxFlowElementHast as MdxJsxFlowElement,\n *   MdxJsxTextElementHast as MdxJsxTextElement\n * } from 'mdast-util-mdx-jsx'\n */ \n\n/**\n * Turn an MDX JSX element node into an estree node.\n *\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxElement | JsxFragment}\n *   JSX element or fragment.\n */ // eslint-disable-next-line complexity\nfunction mdxJsxElement(node, state) {\n    const parentSchema = state.schema;\n    let schema = parentSchema;\n    const attributes = node.attributes || [];\n    let index = -1;\n    if (node.name && parentSchema.space === \"html\" && node.name.toLowerCase() === \"svg\") {\n        schema = property_information__WEBPACK_IMPORTED_MODULE_0__.svg;\n        state.schema = schema;\n    }\n    const children = state.all(node);\n    /** @type {Array<JsxAttribute | JsxSpreadAttribute>} */ const jsxAttributes = [];\n    while(++index < attributes.length){\n        const attribute = attributes[index];\n        const value = attribute.value;\n        /** @type {JsxAttribute['value']} */ let attributeValue;\n        if (attribute.type === \"mdxJsxAttribute\") {\n            if (value === null || value === undefined) {\n                attributeValue = null;\n            // Empty.\n            } else if (typeof value === \"object\") {\n                const estree = value.data && value.data.estree;\n                const comments = estree && estree.comments || [];\n                /** @type {Expression | undefined} */ let expression;\n                if (estree) {\n                    state.comments.push(...comments);\n                    (0,estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_1__.attachComments)(estree, estree.comments);\n                    // Should exist.\n                    /* c8 ignore next 5 */ expression = estree.body[0] && estree.body[0].type === \"ExpressionStatement\" && estree.body[0].expression || undefined;\n                }\n                attributeValue = {\n                    type: \"JSXExpressionContainer\",\n                    expression: expression || {\n                        type: \"JSXEmptyExpression\"\n                    }\n                };\n                state.inherit(value, attributeValue);\n            } else {\n                attributeValue = {\n                    type: \"Literal\",\n                    value: String(value)\n                };\n            }\n            /** @type {JsxAttribute} */ const jsxAttribute = {\n                type: \"JSXAttribute\",\n                name: state.createJsxAttributeName(attribute.name),\n                value: attributeValue\n            };\n            state.inherit(attribute, jsxAttribute);\n            jsxAttributes.push(jsxAttribute);\n        } else {\n            const estree = attribute.data && attribute.data.estree;\n            const comments = estree && estree.comments || [];\n            /** @type {JsxSpreadAttribute['argument'] | undefined} */ let argumentValue;\n            if (estree) {\n                state.comments.push(...comments);\n                (0,estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_1__.attachComments)(estree, estree.comments);\n                // Should exist.\n                /* c8 ignore next 10 */ argumentValue = estree.body[0] && estree.body[0].type === \"ExpressionStatement\" && estree.body[0].expression && estree.body[0].expression.type === \"ObjectExpression\" && estree.body[0].expression.properties && estree.body[0].expression.properties[0] && estree.body[0].expression.properties[0].type === \"SpreadElement\" && estree.body[0].expression.properties[0].argument || undefined;\n            }\n            /** @type {JsxSpreadAttribute} */ const jsxAttribute = {\n                type: \"JSXSpreadAttribute\",\n                argument: argumentValue || {\n                    type: \"ObjectExpression\",\n                    properties: []\n                }\n            };\n            state.inherit(attribute, jsxAttribute);\n            jsxAttributes.push(jsxAttribute);\n        }\n    }\n    // Restore parent schema.\n    state.schema = parentSchema;\n    /** @type {JsxElement | JsxFragment} */ const result = node.name ? {\n        type: \"JSXElement\",\n        openingElement: {\n            type: \"JSXOpeningElement\",\n            attributes: jsxAttributes,\n            name: state.createJsxElementName(node.name),\n            selfClosing: children.length === 0\n        },\n        closingElement: children.length > 0 ? {\n            type: \"JSXClosingElement\",\n            name: state.createJsxElementName(node.name)\n        } : null,\n        children\n    } : {\n        type: \"JSXFragment\",\n        openingFragment: {\n            type: \"JSXOpeningFragment\"\n        },\n        closingFragment: {\n            type: \"JSXClosingFragment\"\n        },\n        children\n    };\n    state.inherit(node, result);\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4LWpzeC1lbGVtZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FFeUQ7QUFDbEI7QUFFeEM7Ozs7Ozs7OztDQVNDLEdBQ0Qsc0NBQXNDO0FBQy9CLFNBQVNFLGNBQWNDLElBQUksRUFBRUMsS0FBSztJQUN2QyxNQUFNQyxlQUFlRCxNQUFNRSxNQUFNO0lBQ2pDLElBQUlBLFNBQVNEO0lBQ2IsTUFBTUUsYUFBYUosS0FBS0ksVUFBVSxJQUFJLEVBQUU7SUFDeEMsSUFBSUMsUUFBUSxDQUFDO0lBRWIsSUFDRUwsS0FBS00sSUFBSSxJQUNUSixhQUFhSyxLQUFLLEtBQUssVUFDdkJQLEtBQUtNLElBQUksQ0FBQ0UsV0FBVyxPQUFPLE9BQzVCO1FBQ0FMLFNBQVNMLHFEQUFHQTtRQUNaRyxNQUFNRSxNQUFNLEdBQUdBO0lBQ2pCO0lBRUEsTUFBTU0sV0FBV1IsTUFBTVMsR0FBRyxDQUFDVjtJQUMzQixxREFBcUQsR0FDckQsTUFBTVcsZ0JBQWdCLEVBQUU7SUFFeEIsTUFBTyxFQUFFTixRQUFRRCxXQUFXUSxNQUFNLENBQUU7UUFDbEMsTUFBTUMsWUFBWVQsVUFBVSxDQUFDQyxNQUFNO1FBQ25DLE1BQU1TLFFBQVFELFVBQVVDLEtBQUs7UUFDN0Isa0NBQWtDLEdBQ2xDLElBQUlDO1FBRUosSUFBSUYsVUFBVUcsSUFBSSxLQUFLLG1CQUFtQjtZQUN4QyxJQUFJRixVQUFVLFFBQVFBLFVBQVVHLFdBQVc7Z0JBQ3pDRixpQkFBaUI7WUFDakIsU0FBUztZQUNYLE9BRUssSUFBSSxPQUFPRCxVQUFVLFVBQVU7Z0JBQ2xDLE1BQU1JLFNBQVNKLE1BQU1LLElBQUksSUFBSUwsTUFBTUssSUFBSSxDQUFDRCxNQUFNO2dCQUM5QyxNQUFNRSxXQUFXLFVBQVdGLE9BQU9FLFFBQVEsSUFBSyxFQUFFO2dCQUNsRCxtQ0FBbUMsR0FDbkMsSUFBSUM7Z0JBRUosSUFBSUgsUUFBUTtvQkFDVmpCLE1BQU1tQixRQUFRLENBQUNFLElBQUksSUFBSUY7b0JBQ3ZCdkIsMkVBQWNBLENBQUNxQixRQUFRQSxPQUFPRSxRQUFRO29CQUN0QyxnQkFBZ0I7b0JBQ2hCLG9CQUFvQixHQUNwQkMsYUFDRSxPQUFRRSxJQUFJLENBQUMsRUFBRSxJQUNiTCxPQUFPSyxJQUFJLENBQUMsRUFBRSxDQUFDUCxJQUFJLEtBQUsseUJBQ3hCRSxPQUFPSyxJQUFJLENBQUMsRUFBRSxDQUFDRixVQUFVLElBQzNCSjtnQkFDSjtnQkFFQUYsaUJBQWlCO29CQUNmQyxNQUFNO29CQUNOSyxZQUFZQSxjQUFjO3dCQUFDTCxNQUFNO29CQUFvQjtnQkFDdkQ7Z0JBQ0FmLE1BQU11QixPQUFPLENBQUNWLE9BQU9DO1lBQ3ZCLE9BRUs7Z0JBQ0hBLGlCQUFpQjtvQkFBQ0MsTUFBTTtvQkFBV0YsT0FBT1csT0FBT1g7Z0JBQU07WUFDekQ7WUFFQSx5QkFBeUIsR0FDekIsTUFBTVksZUFBZTtnQkFDbkJWLE1BQU07Z0JBQ05WLE1BQU1MLE1BQU0wQixzQkFBc0IsQ0FBQ2QsVUFBVVAsSUFBSTtnQkFDakRRLE9BQU9DO1lBQ1Q7WUFFQWQsTUFBTXVCLE9BQU8sQ0FBQ1gsV0FBV2E7WUFDekJmLGNBQWNXLElBQUksQ0FBQ0k7UUFDckIsT0FFSztZQUNILE1BQU1SLFNBQVNMLFVBQVVNLElBQUksSUFBSU4sVUFBVU0sSUFBSSxDQUFDRCxNQUFNO1lBQ3RELE1BQU1FLFdBQVcsVUFBV0YsT0FBT0UsUUFBUSxJQUFLLEVBQUU7WUFDbEQsdURBQXVELEdBQ3ZELElBQUlRO1lBRUosSUFBSVYsUUFBUTtnQkFDVmpCLE1BQU1tQixRQUFRLENBQUNFLElBQUksSUFBSUY7Z0JBQ3ZCdkIsMkVBQWNBLENBQUNxQixRQUFRQSxPQUFPRSxRQUFRO2dCQUN0QyxnQkFBZ0I7Z0JBQ2hCLHFCQUFxQixHQUNyQlEsZ0JBQ0UsT0FBUUwsSUFBSSxDQUFDLEVBQUUsSUFDYkwsT0FBT0ssSUFBSSxDQUFDLEVBQUUsQ0FBQ1AsSUFBSSxLQUFLLHlCQUN4QkUsT0FBT0ssSUFBSSxDQUFDLEVBQUUsQ0FBQ0YsVUFBVSxJQUN6QkgsT0FBT0ssSUFBSSxDQUFDLEVBQUUsQ0FBQ0YsVUFBVSxDQUFDTCxJQUFJLEtBQUssc0JBQ25DRSxPQUFPSyxJQUFJLENBQUMsRUFBRSxDQUFDRixVQUFVLENBQUNRLFVBQVUsSUFDcENYLE9BQU9LLElBQUksQ0FBQyxFQUFFLENBQUNGLFVBQVUsQ0FBQ1EsVUFBVSxDQUFDLEVBQUUsSUFDdkNYLE9BQU9LLElBQUksQ0FBQyxFQUFFLENBQUNGLFVBQVUsQ0FBQ1EsVUFBVSxDQUFDLEVBQUUsQ0FBQ2IsSUFBSSxLQUFLLG1CQUNqREUsT0FBT0ssSUFBSSxDQUFDLEVBQUUsQ0FBQ0YsVUFBVSxDQUFDUSxVQUFVLENBQUMsRUFBRSxDQUFDQyxRQUFRLElBQ2xEYjtZQUNKO1lBRUEsK0JBQStCLEdBQy9CLE1BQU1TLGVBQWU7Z0JBQ25CVixNQUFNO2dCQUNOYyxVQUFVRixpQkFBaUI7b0JBQUNaLE1BQU07b0JBQW9CYSxZQUFZLEVBQUU7Z0JBQUE7WUFDdEU7WUFDQTVCLE1BQU11QixPQUFPLENBQUNYLFdBQVdhO1lBQ3pCZixjQUFjVyxJQUFJLENBQUNJO1FBQ3JCO0lBQ0Y7SUFFQSx5QkFBeUI7SUFDekJ6QixNQUFNRSxNQUFNLEdBQUdEO0lBRWYscUNBQXFDLEdBQ3JDLE1BQU02QixTQUFTL0IsS0FBS00sSUFBSSxHQUNwQjtRQUNFVSxNQUFNO1FBQ05nQixnQkFBZ0I7WUFDZGhCLE1BQU07WUFDTlosWUFBWU87WUFDWkwsTUFBTUwsTUFBTWdDLG9CQUFvQixDQUFDakMsS0FBS00sSUFBSTtZQUMxQzRCLGFBQWF6QixTQUFTRyxNQUFNLEtBQUs7UUFDbkM7UUFDQXVCLGdCQUNFMUIsU0FBU0csTUFBTSxHQUFHLElBQ2Q7WUFDRUksTUFBTTtZQUNOVixNQUFNTCxNQUFNZ0Msb0JBQW9CLENBQUNqQyxLQUFLTSxJQUFJO1FBQzVDLElBQ0E7UUFDTkc7SUFDRixJQUNBO1FBQ0VPLE1BQU07UUFDTm9CLGlCQUFpQjtZQUFDcEIsTUFBTTtRQUFvQjtRQUM1Q3FCLGlCQUFpQjtZQUFDckIsTUFBTTtRQUFvQjtRQUM1Q1A7SUFDRjtJQUVKUixNQUFNdUIsT0FBTyxDQUFDeEIsTUFBTStCO0lBQ3BCLE9BQU9BO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4LWpzeC1lbGVtZW50LmpzP2Y1YzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW1wb3J0IHtcbiAqICAgSlNYQXR0cmlidXRlIGFzIEpzeEF0dHJpYnV0ZSxcbiAqICAgSlNYRWxlbWVudCBhcyBKc3hFbGVtZW50LFxuICogICBKU1hGcmFnbWVudCBhcyBKc3hGcmFnbWVudCxcbiAqICAgSlNYU3ByZWFkQXR0cmlidXRlIGFzIEpzeFNwcmVhZEF0dHJpYnV0ZVxuICogfSBmcm9tICdlc3RyZWUtanN4J1xuICogQGltcG9ydCB7RXhwcmVzc2lvbn0gZnJvbSAnZXN0cmVlJ1xuICogQGltcG9ydCB7U3RhdGV9IGZyb20gJ2hhc3QtdXRpbC10by1lc3RyZWUnXG4gKiBAaW1wb3J0IHtcbiAqICAgTWR4SnN4Rmxvd0VsZW1lbnRIYXN0IGFzIE1keEpzeEZsb3dFbGVtZW50LFxuICogICBNZHhKc3hUZXh0RWxlbWVudEhhc3QgYXMgTWR4SnN4VGV4dEVsZW1lbnRcbiAqIH0gZnJvbSAnbWRhc3QtdXRpbC1tZHgtanN4J1xuICovXG5cbmltcG9ydCB7YXR0YWNoQ29tbWVudHN9IGZyb20gJ2VzdHJlZS11dGlsLWF0dGFjaC1jb21tZW50cydcbmltcG9ydCB7c3ZnfSBmcm9tICdwcm9wZXJ0eS1pbmZvcm1hdGlvbidcblxuLyoqXG4gKiBUdXJuIGFuIE1EWCBKU1ggZWxlbWVudCBub2RlIGludG8gYW4gZXN0cmVlIG5vZGUuXG4gKlxuICogQHBhcmFtIHtNZHhKc3hGbG93RWxlbWVudCB8IE1keEpzeFRleHRFbGVtZW50fSBub2RlXG4gKiAgIGhhc3Qgbm9kZSB0byB0cmFuc2Zvcm0uXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxuICogICBJbmZvIHBhc3NlZCBhcm91bmQgYWJvdXQgdGhlIGN1cnJlbnQgc3RhdGUuXG4gKiBAcmV0dXJucyB7SnN4RWxlbWVudCB8IEpzeEZyYWdtZW50fVxuICogICBKU1ggZWxlbWVudCBvciBmcmFnbWVudC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBsZXhpdHlcbmV4cG9ydCBmdW5jdGlvbiBtZHhKc3hFbGVtZW50KG5vZGUsIHN0YXRlKSB7XG4gIGNvbnN0IHBhcmVudFNjaGVtYSA9IHN0YXRlLnNjaGVtYVxuICBsZXQgc2NoZW1hID0gcGFyZW50U2NoZW1hXG4gIGNvbnN0IGF0dHJpYnV0ZXMgPSBub2RlLmF0dHJpYnV0ZXMgfHwgW11cbiAgbGV0IGluZGV4ID0gLTFcblxuICBpZiAoXG4gICAgbm9kZS5uYW1lICYmXG4gICAgcGFyZW50U2NoZW1hLnNwYWNlID09PSAnaHRtbCcgJiZcbiAgICBub2RlLm5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ3N2ZydcbiAgKSB7XG4gICAgc2NoZW1hID0gc3ZnXG4gICAgc3RhdGUuc2NoZW1hID0gc2NoZW1hXG4gIH1cblxuICBjb25zdCBjaGlsZHJlbiA9IHN0YXRlLmFsbChub2RlKVxuICAvKiogQHR5cGUge0FycmF5PEpzeEF0dHJpYnV0ZSB8IEpzeFNwcmVhZEF0dHJpYnV0ZT59ICovXG4gIGNvbnN0IGpzeEF0dHJpYnV0ZXMgPSBbXVxuXG4gIHdoaWxlICgrK2luZGV4IDwgYXR0cmlidXRlcy5sZW5ndGgpIHtcbiAgICBjb25zdCBhdHRyaWJ1dGUgPSBhdHRyaWJ1dGVzW2luZGV4XVxuICAgIGNvbnN0IHZhbHVlID0gYXR0cmlidXRlLnZhbHVlXG4gICAgLyoqIEB0eXBlIHtKc3hBdHRyaWJ1dGVbJ3ZhbHVlJ119ICovXG4gICAgbGV0IGF0dHJpYnV0ZVZhbHVlXG5cbiAgICBpZiAoYXR0cmlidXRlLnR5cGUgPT09ICdtZHhKc3hBdHRyaWJ1dGUnKSB7XG4gICAgICBpZiAodmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBhdHRyaWJ1dGVWYWx1ZSA9IG51bGxcbiAgICAgICAgLy8gRW1wdHkuXG4gICAgICB9XG4gICAgICAvLyBgTWR4SnN4QXR0cmlidXRlVmFsdWVFeHByZXNzaW9uYC5cbiAgICAgIGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgY29uc3QgZXN0cmVlID0gdmFsdWUuZGF0YSAmJiB2YWx1ZS5kYXRhLmVzdHJlZVxuICAgICAgICBjb25zdCBjb21tZW50cyA9IChlc3RyZWUgJiYgZXN0cmVlLmNvbW1lbnRzKSB8fCBbXVxuICAgICAgICAvKiogQHR5cGUge0V4cHJlc3Npb24gfCB1bmRlZmluZWR9ICovXG4gICAgICAgIGxldCBleHByZXNzaW9uXG5cbiAgICAgICAgaWYgKGVzdHJlZSkge1xuICAgICAgICAgIHN0YXRlLmNvbW1lbnRzLnB1c2goLi4uY29tbWVudHMpXG4gICAgICAgICAgYXR0YWNoQ29tbWVudHMoZXN0cmVlLCBlc3RyZWUuY29tbWVudHMpXG4gICAgICAgICAgLy8gU2hvdWxkIGV4aXN0LlxuICAgICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDUgKi9cbiAgICAgICAgICBleHByZXNzaW9uID1cbiAgICAgICAgICAgIChlc3RyZWUuYm9keVswXSAmJlxuICAgICAgICAgICAgICBlc3RyZWUuYm9keVswXS50eXBlID09PSAnRXhwcmVzc2lvblN0YXRlbWVudCcgJiZcbiAgICAgICAgICAgICAgZXN0cmVlLmJvZHlbMF0uZXhwcmVzc2lvbikgfHxcbiAgICAgICAgICAgIHVuZGVmaW5lZFxuICAgICAgICB9XG5cbiAgICAgICAgYXR0cmlidXRlVmFsdWUgPSB7XG4gICAgICAgICAgdHlwZTogJ0pTWEV4cHJlc3Npb25Db250YWluZXInLFxuICAgICAgICAgIGV4cHJlc3Npb246IGV4cHJlc3Npb24gfHwge3R5cGU6ICdKU1hFbXB0eUV4cHJlc3Npb24nfVxuICAgICAgICB9XG4gICAgICAgIHN0YXRlLmluaGVyaXQodmFsdWUsIGF0dHJpYnV0ZVZhbHVlKVxuICAgICAgfVxuICAgICAgLy8gQW55dGhpbmcgZWxzZS5cbiAgICAgIGVsc2Uge1xuICAgICAgICBhdHRyaWJ1dGVWYWx1ZSA9IHt0eXBlOiAnTGl0ZXJhbCcsIHZhbHVlOiBTdHJpbmcodmFsdWUpfVxuICAgICAgfVxuXG4gICAgICAvKiogQHR5cGUge0pzeEF0dHJpYnV0ZX0gKi9cbiAgICAgIGNvbnN0IGpzeEF0dHJpYnV0ZSA9IHtcbiAgICAgICAgdHlwZTogJ0pTWEF0dHJpYnV0ZScsXG4gICAgICAgIG5hbWU6IHN0YXRlLmNyZWF0ZUpzeEF0dHJpYnV0ZU5hbWUoYXR0cmlidXRlLm5hbWUpLFxuICAgICAgICB2YWx1ZTogYXR0cmlidXRlVmFsdWVcbiAgICAgIH1cblxuICAgICAgc3RhdGUuaW5oZXJpdChhdHRyaWJ1dGUsIGpzeEF0dHJpYnV0ZSlcbiAgICAgIGpzeEF0dHJpYnV0ZXMucHVzaChqc3hBdHRyaWJ1dGUpXG4gICAgfVxuICAgIC8vIE1keEpzeEV4cHJlc3Npb25BdHRyaWJ1dGUuXG4gICAgZWxzZSB7XG4gICAgICBjb25zdCBlc3RyZWUgPSBhdHRyaWJ1dGUuZGF0YSAmJiBhdHRyaWJ1dGUuZGF0YS5lc3RyZWVcbiAgICAgIGNvbnN0IGNvbW1lbnRzID0gKGVzdHJlZSAmJiBlc3RyZWUuY29tbWVudHMpIHx8IFtdXG4gICAgICAvKiogQHR5cGUge0pzeFNwcmVhZEF0dHJpYnV0ZVsnYXJndW1lbnQnXSB8IHVuZGVmaW5lZH0gKi9cbiAgICAgIGxldCBhcmd1bWVudFZhbHVlXG5cbiAgICAgIGlmIChlc3RyZWUpIHtcbiAgICAgICAgc3RhdGUuY29tbWVudHMucHVzaCguLi5jb21tZW50cylcbiAgICAgICAgYXR0YWNoQ29tbWVudHMoZXN0cmVlLCBlc3RyZWUuY29tbWVudHMpXG4gICAgICAgIC8vIFNob3VsZCBleGlzdC5cbiAgICAgICAgLyogYzggaWdub3JlIG5leHQgMTAgKi9cbiAgICAgICAgYXJndW1lbnRWYWx1ZSA9XG4gICAgICAgICAgKGVzdHJlZS5ib2R5WzBdICYmXG4gICAgICAgICAgICBlc3RyZWUuYm9keVswXS50eXBlID09PSAnRXhwcmVzc2lvblN0YXRlbWVudCcgJiZcbiAgICAgICAgICAgIGVzdHJlZS5ib2R5WzBdLmV4cHJlc3Npb24gJiZcbiAgICAgICAgICAgIGVzdHJlZS5ib2R5WzBdLmV4cHJlc3Npb24udHlwZSA9PT0gJ09iamVjdEV4cHJlc3Npb24nICYmXG4gICAgICAgICAgICBlc3RyZWUuYm9keVswXS5leHByZXNzaW9uLnByb3BlcnRpZXMgJiZcbiAgICAgICAgICAgIGVzdHJlZS5ib2R5WzBdLmV4cHJlc3Npb24ucHJvcGVydGllc1swXSAmJlxuICAgICAgICAgICAgZXN0cmVlLmJvZHlbMF0uZXhwcmVzc2lvbi5wcm9wZXJ0aWVzWzBdLnR5cGUgPT09ICdTcHJlYWRFbGVtZW50JyAmJlxuICAgICAgICAgICAgZXN0cmVlLmJvZHlbMF0uZXhwcmVzc2lvbi5wcm9wZXJ0aWVzWzBdLmFyZ3VtZW50KSB8fFxuICAgICAgICAgIHVuZGVmaW5lZFxuICAgICAgfVxuXG4gICAgICAvKiogQHR5cGUge0pzeFNwcmVhZEF0dHJpYnV0ZX0gKi9cbiAgICAgIGNvbnN0IGpzeEF0dHJpYnV0ZSA9IHtcbiAgICAgICAgdHlwZTogJ0pTWFNwcmVhZEF0dHJpYnV0ZScsXG4gICAgICAgIGFyZ3VtZW50OiBhcmd1bWVudFZhbHVlIHx8IHt0eXBlOiAnT2JqZWN0RXhwcmVzc2lvbicsIHByb3BlcnRpZXM6IFtdfVxuICAgICAgfVxuICAgICAgc3RhdGUuaW5oZXJpdChhdHRyaWJ1dGUsIGpzeEF0dHJpYnV0ZSlcbiAgICAgIGpzeEF0dHJpYnV0ZXMucHVzaChqc3hBdHRyaWJ1dGUpXG4gICAgfVxuICB9XG5cbiAgLy8gUmVzdG9yZSBwYXJlbnQgc2NoZW1hLlxuICBzdGF0ZS5zY2hlbWEgPSBwYXJlbnRTY2hlbWFcblxuICAvKiogQHR5cGUge0pzeEVsZW1lbnQgfCBKc3hGcmFnbWVudH0gKi9cbiAgY29uc3QgcmVzdWx0ID0gbm9kZS5uYW1lXG4gICAgPyB7XG4gICAgICAgIHR5cGU6ICdKU1hFbGVtZW50JyxcbiAgICAgICAgb3BlbmluZ0VsZW1lbnQ6IHtcbiAgICAgICAgICB0eXBlOiAnSlNYT3BlbmluZ0VsZW1lbnQnLFxuICAgICAgICAgIGF0dHJpYnV0ZXM6IGpzeEF0dHJpYnV0ZXMsXG4gICAgICAgICAgbmFtZTogc3RhdGUuY3JlYXRlSnN4RWxlbWVudE5hbWUobm9kZS5uYW1lKSxcbiAgICAgICAgICBzZWxmQ2xvc2luZzogY2hpbGRyZW4ubGVuZ3RoID09PSAwXG4gICAgICAgIH0sXG4gICAgICAgIGNsb3NpbmdFbGVtZW50OlxuICAgICAgICAgIGNoaWxkcmVuLmxlbmd0aCA+IDBcbiAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdKU1hDbG9zaW5nRWxlbWVudCcsXG4gICAgICAgICAgICAgICAgbmFtZTogc3RhdGUuY3JlYXRlSnN4RWxlbWVudE5hbWUobm9kZS5uYW1lKVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA6IG51bGwsXG4gICAgICAgIGNoaWxkcmVuXG4gICAgICB9XG4gICAgOiB7XG4gICAgICAgIHR5cGU6ICdKU1hGcmFnbWVudCcsXG4gICAgICAgIG9wZW5pbmdGcmFnbWVudDoge3R5cGU6ICdKU1hPcGVuaW5nRnJhZ21lbnQnfSxcbiAgICAgICAgY2xvc2luZ0ZyYWdtZW50OiB7dHlwZTogJ0pTWENsb3NpbmdGcmFnbWVudCd9LFxuICAgICAgICBjaGlsZHJlblxuICAgICAgfVxuXG4gIHN0YXRlLmluaGVyaXQobm9kZSwgcmVzdWx0KVxuICByZXR1cm4gcmVzdWx0XG59XG4iXSwibmFtZXMiOlsiYXR0YWNoQ29tbWVudHMiLCJzdmciLCJtZHhKc3hFbGVtZW50Iiwibm9kZSIsInN0YXRlIiwicGFyZW50U2NoZW1hIiwic2NoZW1hIiwiYXR0cmlidXRlcyIsImluZGV4IiwibmFtZSIsInNwYWNlIiwidG9Mb3dlckNhc2UiLCJjaGlsZHJlbiIsImFsbCIsImpzeEF0dHJpYnV0ZXMiLCJsZW5ndGgiLCJhdHRyaWJ1dGUiLCJ2YWx1ZSIsImF0dHJpYnV0ZVZhbHVlIiwidHlwZSIsInVuZGVmaW5lZCIsImVzdHJlZSIsImRhdGEiLCJjb21tZW50cyIsImV4cHJlc3Npb24iLCJwdXNoIiwiYm9keSIsImluaGVyaXQiLCJTdHJpbmciLCJqc3hBdHRyaWJ1dGUiLCJjcmVhdGVKc3hBdHRyaWJ1dGVOYW1lIiwiYXJndW1lbnRWYWx1ZSIsInByb3BlcnRpZXMiLCJhcmd1bWVudCIsInJlc3VsdCIsIm9wZW5pbmdFbGVtZW50IiwiY3JlYXRlSnN4RWxlbWVudE5hbWUiLCJzZWxmQ2xvc2luZyIsImNsb3NpbmdFbGVtZW50Iiwib3BlbmluZ0ZyYWdtZW50IiwiY2xvc2luZ0ZyYWdtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-to-estree/lib/handlers/mdx-jsx-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js":
/*!********************************************************************!*\
  !*** ./node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mdxjsEsm: () => (/* binding */ mdxjsEsm)\n/* harmony export */ });\n/* harmony import */ var estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! estree-util-attach-comments */ \"(ssr)/./node_modules/estree-util-attach-comments/lib/index.js\");\n/**\n * @import {MdxjsEsmHast as MdxjsEsm} from 'mdast-util-mdxjs-esm'\n * @import {State} from 'hast-util-to-estree'\n */ \n/**\n * Handle an MDX ESM node.\n *\n * @param {MdxjsEsm} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */ function mdxjsEsm(node, state) {\n    const estree = node.data && node.data.estree;\n    const comments = estree && estree.comments || [];\n    if (estree) {\n        state.comments.push(...comments);\n        (0,estree_util_attach_comments__WEBPACK_IMPORTED_MODULE_0__.attachComments)(estree, comments);\n        state.esm.push(...estree.body);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4anMtZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7OztDQUdDLEdBRXlEO0FBRTFEOzs7Ozs7Ozs7Q0FTQyxHQUNNLFNBQVNDLFNBQVNDLElBQUksRUFBRUMsS0FBSztJQUNsQyxNQUFNQyxTQUFTRixLQUFLRyxJQUFJLElBQUlILEtBQUtHLElBQUksQ0FBQ0QsTUFBTTtJQUM1QyxNQUFNRSxXQUFXLFVBQVdGLE9BQU9FLFFBQVEsSUFBSyxFQUFFO0lBRWxELElBQUlGLFFBQVE7UUFDVkQsTUFBTUcsUUFBUSxDQUFDQyxJQUFJLElBQUlEO1FBQ3ZCTiwyRUFBY0EsQ0FBQ0ksUUFBUUU7UUFDdkJILE1BQU1LLEdBQUcsQ0FBQ0QsSUFBSSxJQUFJSCxPQUFPSyxJQUFJO0lBQy9CO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvbWR4anMtZXNtLmpzP2FmY2EiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW1wb3J0IHtNZHhqc0VzbUhhc3QgYXMgTWR4anNFc219IGZyb20gJ21kYXN0LXV0aWwtbWR4anMtZXNtJ1xuICogQGltcG9ydCB7U3RhdGV9IGZyb20gJ2hhc3QtdXRpbC10by1lc3RyZWUnXG4gKi9cblxuaW1wb3J0IHthdHRhY2hDb21tZW50c30gZnJvbSAnZXN0cmVlLXV0aWwtYXR0YWNoLWNvbW1lbnRzJ1xuXG4vKipcbiAqIEhhbmRsZSBhbiBNRFggRVNNIG5vZGUuXG4gKlxuICogQHBhcmFtIHtNZHhqc0VzbX0gbm9kZVxuICogICBoYXN0IG5vZGUgdG8gdHJhbnNmb3JtLlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kIGFib3V0IHRoZSBjdXJyZW50IHN0YXRlLlxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqICAgTm90aGluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1keGpzRXNtKG5vZGUsIHN0YXRlKSB7XG4gIGNvbnN0IGVzdHJlZSA9IG5vZGUuZGF0YSAmJiBub2RlLmRhdGEuZXN0cmVlXG4gIGNvbnN0IGNvbW1lbnRzID0gKGVzdHJlZSAmJiBlc3RyZWUuY29tbWVudHMpIHx8IFtdXG5cbiAgaWYgKGVzdHJlZSkge1xuICAgIHN0YXRlLmNvbW1lbnRzLnB1c2goLi4uY29tbWVudHMpXG4gICAgYXR0YWNoQ29tbWVudHMoZXN0cmVlLCBjb21tZW50cylcbiAgICBzdGF0ZS5lc20ucHVzaCguLi5lc3RyZWUuYm9keSlcbiAgfVxufVxuIl0sIm5hbWVzIjpbImF0dGFjaENvbW1lbnRzIiwibWR4anNFc20iLCJub2RlIiwic3RhdGUiLCJlc3RyZWUiLCJkYXRhIiwiY29tbWVudHMiLCJwdXNoIiwiZXNtIiwiYm9keSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-to-estree/lib/handlers/mdxjs-esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-to-estree/lib/handlers/root.js":
/*!***************************************************************!*\
  !*** ./node_modules/hast-util-to-estree/lib/handlers/root.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   root: () => (/* binding */ root)\n/* harmony export */ });\n/* harmony import */ var hast_util_whitespace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hast-util-whitespace */ \"(ssr)/./node_modules/hast-util-whitespace/lib/index.js\");\n/**\n * @import {\n *   JSXElement as JsxElement,\n *   JSXExpressionContainer as JsxExpressionContainer,\n *   JSXFragment as JsxFragment,\n *   JSXSpreadChild as JsxSpreadChild,\n *   JSXText as JsxText,\n * } from 'estree-jsx'\n * @import {State} from 'hast-util-to-estree'\n * @import {Root as HastRoot} from 'hast'\n */ \n/**\n * Turn a hast root node into an estree node.\n *\n * @param {HastRoot} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxFragment}\n *   estree JSX fragment.\n */ function root(node, state) {\n    const children = state.all(node);\n    /** @type {Array<JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText>} */ const cleanChildren = [];\n    let index = -1;\n    /** @type {Array<JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText> | undefined} */ let queue;\n    // Remove surrounding whitespace nodes from the fragment.\n    while(++index < children.length){\n        const child = children[index];\n        if (child.type === \"JSXExpressionContainer\" && child.expression.type === \"Literal\" && (0,hast_util_whitespace__WEBPACK_IMPORTED_MODULE_0__.whitespace)(String(child.expression.value))) {\n            if (queue) queue.push(child);\n        } else {\n            if (queue) cleanChildren.push(...queue);\n            cleanChildren.push(child);\n            queue = [];\n        }\n    }\n    /** @type {JsxFragment} */ const result = {\n        type: \"JSXFragment\",\n        openingFragment: {\n            type: \"JSXOpeningFragment\"\n        },\n        closingFragment: {\n            type: \"JSXClosingFragment\"\n        },\n        children: cleanChildren\n    };\n    state.inherit(node, result);\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvcm9vdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7Ozs7O0NBVUMsR0FFOEM7QUFFL0M7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU0MsS0FBS0MsSUFBSSxFQUFFQyxLQUFLO0lBQzlCLE1BQU1DLFdBQVdELE1BQU1FLEdBQUcsQ0FBQ0g7SUFDM0IsZ0dBQWdHLEdBQ2hHLE1BQU1JLGdCQUFnQixFQUFFO0lBQ3hCLElBQUlDLFFBQVEsQ0FBQztJQUNiLDRHQUE0RyxHQUM1RyxJQUFJQztJQUVKLHlEQUF5RDtJQUN6RCxNQUFPLEVBQUVELFFBQVFILFNBQVNLLE1BQU0sQ0FBRTtRQUNoQyxNQUFNQyxRQUFRTixRQUFRLENBQUNHLE1BQU07UUFFN0IsSUFDRUcsTUFBTUMsSUFBSSxLQUFLLDRCQUNmRCxNQUFNRSxVQUFVLENBQUNELElBQUksS0FBSyxhQUMxQlgsZ0VBQVVBLENBQUNhLE9BQU9ILE1BQU1FLFVBQVUsQ0FBQ0UsS0FBSyxJQUN4QztZQUNBLElBQUlOLE9BQU9BLE1BQU1PLElBQUksQ0FBQ0w7UUFDeEIsT0FBTztZQUNMLElBQUlGLE9BQU9GLGNBQWNTLElBQUksSUFBSVA7WUFDakNGLGNBQWNTLElBQUksQ0FBQ0w7WUFDbkJGLFFBQVEsRUFBRTtRQUNaO0lBQ0Y7SUFFQSx3QkFBd0IsR0FDeEIsTUFBTVEsU0FBUztRQUNiTCxNQUFNO1FBQ05NLGlCQUFpQjtZQUFDTixNQUFNO1FBQW9CO1FBQzVDTyxpQkFBaUI7WUFBQ1AsTUFBTTtRQUFvQjtRQUM1Q1AsVUFBVUU7SUFDWjtJQUNBSCxNQUFNZ0IsT0FBTyxDQUFDakIsTUFBTWM7SUFDcEIsT0FBT0E7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9oYXN0LXV0aWwtdG8tZXN0cmVlL2xpYi9oYW5kbGVycy9yb290LmpzPzk0ZGEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW1wb3J0IHtcbiAqICAgSlNYRWxlbWVudCBhcyBKc3hFbGVtZW50LFxuICogICBKU1hFeHByZXNzaW9uQ29udGFpbmVyIGFzIEpzeEV4cHJlc3Npb25Db250YWluZXIsXG4gKiAgIEpTWEZyYWdtZW50IGFzIEpzeEZyYWdtZW50LFxuICogICBKU1hTcHJlYWRDaGlsZCBhcyBKc3hTcHJlYWRDaGlsZCxcbiAqICAgSlNYVGV4dCBhcyBKc3hUZXh0LFxuICogfSBmcm9tICdlc3RyZWUtanN4J1xuICogQGltcG9ydCB7U3RhdGV9IGZyb20gJ2hhc3QtdXRpbC10by1lc3RyZWUnXG4gKiBAaW1wb3J0IHtSb290IGFzIEhhc3RSb290fSBmcm9tICdoYXN0J1xuICovXG5cbmltcG9ydCB7d2hpdGVzcGFjZX0gZnJvbSAnaGFzdC11dGlsLXdoaXRlc3BhY2UnXG5cbi8qKlxuICogVHVybiBhIGhhc3Qgcm9vdCBub2RlIGludG8gYW4gZXN0cmVlIG5vZGUuXG4gKlxuICogQHBhcmFtIHtIYXN0Um9vdH0gbm9kZVxuICogICBoYXN0IG5vZGUgdG8gdHJhbnNmb3JtLlxuICogQHBhcmFtIHtTdGF0ZX0gc3RhdGVcbiAqICAgSW5mbyBwYXNzZWQgYXJvdW5kIGFib3V0IHRoZSBjdXJyZW50IHN0YXRlLlxuICogQHJldHVybnMge0pzeEZyYWdtZW50fVxuICogICBlc3RyZWUgSlNYIGZyYWdtZW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gcm9vdChub2RlLCBzdGF0ZSkge1xuICBjb25zdCBjaGlsZHJlbiA9IHN0YXRlLmFsbChub2RlKVxuICAvKiogQHR5cGUge0FycmF5PEpzeEVsZW1lbnQgfCBKc3hFeHByZXNzaW9uQ29udGFpbmVyIHwgSnN4RnJhZ21lbnQgfCBKc3hTcHJlYWRDaGlsZCB8IEpzeFRleHQ+fSAqL1xuICBjb25zdCBjbGVhbkNoaWxkcmVuID0gW11cbiAgbGV0IGluZGV4ID0gLTFcbiAgLyoqIEB0eXBlIHtBcnJheTxKc3hFbGVtZW50IHwgSnN4RXhwcmVzc2lvbkNvbnRhaW5lciB8IEpzeEZyYWdtZW50IHwgSnN4U3ByZWFkQ2hpbGQgfCBKc3hUZXh0PiB8IHVuZGVmaW5lZH0gKi9cbiAgbGV0IHF1ZXVlXG5cbiAgLy8gUmVtb3ZlIHN1cnJvdW5kaW5nIHdoaXRlc3BhY2Ugbm9kZXMgZnJvbSB0aGUgZnJhZ21lbnQuXG4gIHdoaWxlICgrK2luZGV4IDwgY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgY29uc3QgY2hpbGQgPSBjaGlsZHJlbltpbmRleF1cblxuICAgIGlmIChcbiAgICAgIGNoaWxkLnR5cGUgPT09ICdKU1hFeHByZXNzaW9uQ29udGFpbmVyJyAmJlxuICAgICAgY2hpbGQuZXhwcmVzc2lvbi50eXBlID09PSAnTGl0ZXJhbCcgJiZcbiAgICAgIHdoaXRlc3BhY2UoU3RyaW5nKGNoaWxkLmV4cHJlc3Npb24udmFsdWUpKVxuICAgICkge1xuICAgICAgaWYgKHF1ZXVlKSBxdWV1ZS5wdXNoKGNoaWxkKVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocXVldWUpIGNsZWFuQ2hpbGRyZW4ucHVzaCguLi5xdWV1ZSlcbiAgICAgIGNsZWFuQ2hpbGRyZW4ucHVzaChjaGlsZClcbiAgICAgIHF1ZXVlID0gW11cbiAgICB9XG4gIH1cblxuICAvKiogQHR5cGUge0pzeEZyYWdtZW50fSAqL1xuICBjb25zdCByZXN1bHQgPSB7XG4gICAgdHlwZTogJ0pTWEZyYWdtZW50JyxcbiAgICBvcGVuaW5nRnJhZ21lbnQ6IHt0eXBlOiAnSlNYT3BlbmluZ0ZyYWdtZW50J30sXG4gICAgY2xvc2luZ0ZyYWdtZW50OiB7dHlwZTogJ0pTWENsb3NpbmdGcmFnbWVudCd9LFxuICAgIGNoaWxkcmVuOiBjbGVhbkNoaWxkcmVuXG4gIH1cbiAgc3RhdGUuaW5oZXJpdChub2RlLCByZXN1bHQpXG4gIHJldHVybiByZXN1bHRcbn1cbiJdLCJuYW1lcyI6WyJ3aGl0ZXNwYWNlIiwicm9vdCIsIm5vZGUiLCJzdGF0ZSIsImNoaWxkcmVuIiwiYWxsIiwiY2xlYW5DaGlsZHJlbiIsImluZGV4IiwicXVldWUiLCJsZW5ndGgiLCJjaGlsZCIsInR5cGUiLCJleHByZXNzaW9uIiwiU3RyaW5nIiwidmFsdWUiLCJwdXNoIiwicmVzdWx0Iiwib3BlbmluZ0ZyYWdtZW50IiwiY2xvc2luZ0ZyYWdtZW50IiwiaW5oZXJpdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-to-estree/lib/handlers/root.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-to-estree/lib/handlers/text.js":
/*!***************************************************************!*\
  !*** ./node_modules/hast-util-to-estree/lib/handlers/text.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   text: () => (/* binding */ text)\n/* harmony export */ });\n/**\n * @import {JSXExpressionContainer as JsxExpressionContainer} from 'estree-jsx'\n * @import {Literal} from 'estree'\n * @import {State} from 'hast-util-to-estree'\n * @import {Text as HastText} from 'hast'\n */ // Make VS Code show references to the above types.\n\"\";\n/**\n * Turn a hast text node into an estree node.\n *\n * @param {HastText} node\n *   hast node to transform.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxExpressionContainer | undefined}\n *   JSX expression.\n */ function text(node, state) {\n    const value = String(node.value || \"\");\n    if (value) {\n        /** @type {Literal} */ const result = {\n            type: \"Literal\",\n            value\n        };\n        state.inherit(node, result);\n        /** @type {JsxExpressionContainer} */ const container = {\n            type: \"JSXExpressionContainer\",\n            expression: result\n        };\n        state.patch(node, container);\n        return container;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvdGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7O0NBS0MsR0FFRCxtREFBbUQ7QUFDbkQ7QUFFQTs7Ozs7Ozs7O0NBU0MsR0FDTSxTQUFTQSxLQUFLQyxJQUFJLEVBQUVDLEtBQUs7SUFDOUIsTUFBTUMsUUFBUUMsT0FBT0gsS0FBS0UsS0FBSyxJQUFJO0lBRW5DLElBQUlBLE9BQU87UUFDVCxvQkFBb0IsR0FDcEIsTUFBTUUsU0FBUztZQUFDQyxNQUFNO1lBQVdIO1FBQUs7UUFDdENELE1BQU1LLE9BQU8sQ0FBQ04sTUFBTUk7UUFDcEIsbUNBQW1DLEdBQ25DLE1BQU1HLFlBQVk7WUFBQ0YsTUFBTTtZQUEwQkcsWUFBWUo7UUFBTTtRQUNyRUgsTUFBTVEsS0FBSyxDQUFDVCxNQUFNTztRQUNsQixPQUFPQTtJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaGFuZGxlcnMvdGV4dC5qcz8yNTY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7SlNYRXhwcmVzc2lvbkNvbnRhaW5lciBhcyBKc3hFeHByZXNzaW9uQ29udGFpbmVyfSBmcm9tICdlc3RyZWUtanN4J1xuICogQGltcG9ydCB7TGl0ZXJhbH0gZnJvbSAnZXN0cmVlJ1xuICogQGltcG9ydCB7U3RhdGV9IGZyb20gJ2hhc3QtdXRpbC10by1lc3RyZWUnXG4gKiBAaW1wb3J0IHtUZXh0IGFzIEhhc3RUZXh0fSBmcm9tICdoYXN0J1xuICovXG5cbi8vIE1ha2UgVlMgQ29kZSBzaG93IHJlZmVyZW5jZXMgdG8gdGhlIGFib3ZlIHR5cGVzLlxuJydcblxuLyoqXG4gKiBUdXJuIGEgaGFzdCB0ZXh0IG5vZGUgaW50byBhbiBlc3RyZWUgbm9kZS5cbiAqXG4gKiBAcGFyYW0ge0hhc3RUZXh0fSBub2RlXG4gKiAgIGhhc3Qgbm9kZSB0byB0cmFuc2Zvcm0uXG4gKiBAcGFyYW0ge1N0YXRlfSBzdGF0ZVxuICogICBJbmZvIHBhc3NlZCBhcm91bmQgYWJvdXQgdGhlIGN1cnJlbnQgc3RhdGUuXG4gKiBAcmV0dXJucyB7SnN4RXhwcmVzc2lvbkNvbnRhaW5lciB8IHVuZGVmaW5lZH1cbiAqICAgSlNYIGV4cHJlc3Npb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0ZXh0KG5vZGUsIHN0YXRlKSB7XG4gIGNvbnN0IHZhbHVlID0gU3RyaW5nKG5vZGUudmFsdWUgfHwgJycpXG5cbiAgaWYgKHZhbHVlKSB7XG4gICAgLyoqIEB0eXBlIHtMaXRlcmFsfSAqL1xuICAgIGNvbnN0IHJlc3VsdCA9IHt0eXBlOiAnTGl0ZXJhbCcsIHZhbHVlfVxuICAgIHN0YXRlLmluaGVyaXQobm9kZSwgcmVzdWx0KVxuICAgIC8qKiBAdHlwZSB7SnN4RXhwcmVzc2lvbkNvbnRhaW5lcn0gKi9cbiAgICBjb25zdCBjb250YWluZXIgPSB7dHlwZTogJ0pTWEV4cHJlc3Npb25Db250YWluZXInLCBleHByZXNzaW9uOiByZXN1bHR9XG4gICAgc3RhdGUucGF0Y2gobm9kZSwgY29udGFpbmVyKVxuICAgIHJldHVybiBjb250YWluZXJcbiAgfVxufVxuIl0sIm5hbWVzIjpbInRleHQiLCJub2RlIiwic3RhdGUiLCJ2YWx1ZSIsIlN0cmluZyIsInJlc3VsdCIsInR5cGUiLCJpbmhlcml0IiwiY29udGFpbmVyIiwiZXhwcmVzc2lvbiIsInBhdGNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-to-estree/lib/handlers/text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-to-estree/lib/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/hast-util-to-estree/lib/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toEstree: () => (/* binding */ toEstree)\n/* harmony export */ });\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state.js */ \"(ssr)/./node_modules/hast-util-to-estree/lib/state.js\");\n/**\n * @import {} from 'mdast-util-mdx-expression'\n * @import {} from 'mdast-util-mdx-jsx'\n * @import {} from 'mdast-util-mdxjs-esm'\n * @import {ExpressionStatement, Program} from 'estree'\n * @import {Options} from 'hast-util-to-estree'\n * @import {Nodes as HastNodes} from 'hast'\n */ \n/**\n * Transform a hast tree (with embedded MDX nodes) into an estree.\n *\n * ##### Notes\n *\n * ###### Comments\n *\n * Comments are attached to the tree in their neighbouring nodes (`recast`,\n * `babel` style) and also added as a `comments` array on the program node\n * (`espree` style).\n * You may have to do `program.comments = undefined` for certain compilers.\n *\n * ###### Frameworks\n *\n * There are differences between what JSX frameworks accept, such as whether they\n * accept `class` or `className`, or `background-color` or `backgroundColor`.\n *\n * For JSX components written in MDX, the author has to be aware of this\n * difference and write code accordingly.\n * For hast elements transformed by this project, this will be handled through\n * options.\n *\n * | Framework | `elementAttributeNameCase` | `stylePropertyNameCase` |\n * | --------- | -------------------------- | ----------------------- |\n * | Preact    | `'html'`                   | `'dom'`                 |\n * | React     | `'react'`                  | `'dom'`                 |\n * | Solid     | `'html'`                   | `'css'`                 |\n * | Vue       | `'html'`                   | `'dom'`                 |\n *\n * @param {HastNodes} tree\n *   hast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Program}\n *   estree program node.\n *\n *   The program’s last child in `body` is most likely an `ExpressionStatement`,\n *   whose expression is a `JSXFragment` or a `JSXElement`.\n *\n *   Typically, there is only one node in `body`, however, this utility also\n *   supports embedded MDX nodes in the HTML (when `mdast-util-mdx` is used\n *   with mdast to parse markdown before passing its nodes through to hast).\n *   When MDX ESM import/exports are used, those nodes are added before the\n *   fragment or element in body.\n *\n *   There aren’t many great estree serializers out there that support JSX.\n *   To do that, you can use `estree-util-to-js`.\n *   Or, use `estree-util-build-jsx` to turn JSX into function calls, and then\n *   serialize with whatever (`astring`, `escodegen`).\n */ function toEstree(tree, options) {\n    const state = (0,_state_js__WEBPACK_IMPORTED_MODULE_0__.createState)(options || {});\n    let result = state.handle(tree);\n    const body = state.esm;\n    if (result) {\n        if (result.type !== \"JSXFragment\" && result.type !== \"JSXElement\") {\n            result = {\n                type: \"JSXFragment\",\n                openingFragment: {\n                    type: \"JSXOpeningFragment\"\n                },\n                closingFragment: {\n                    type: \"JSXClosingFragment\"\n                },\n                children: [\n                    result\n                ]\n            };\n            state.patch(tree, result);\n        }\n        /** @type {ExpressionStatement} */ const statement = {\n            type: \"ExpressionStatement\",\n            expression: result\n        };\n        state.patch(tree, statement);\n        body.push(statement);\n    }\n    /** @type {Program} */ const program = {\n        type: \"Program\",\n        body,\n        sourceType: \"module\",\n        comments: state.comments\n    };\n    state.patch(tree, program);\n    return program;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXRvLWVzdHJlZS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7OztDQU9DLEdBRXFDO0FBRXRDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBaURDLEdBQ00sU0FBU0MsU0FBU0MsSUFBSSxFQUFFQyxPQUFPO0lBQ3BDLE1BQU1DLFFBQVFKLHNEQUFXQSxDQUFDRyxXQUFXLENBQUM7SUFDdEMsSUFBSUUsU0FBU0QsTUFBTUUsTUFBTSxDQUFDSjtJQUMxQixNQUFNSyxPQUFPSCxNQUFNSSxHQUFHO0lBRXRCLElBQUlILFFBQVE7UUFDVixJQUFJQSxPQUFPSSxJQUFJLEtBQUssaUJBQWlCSixPQUFPSSxJQUFJLEtBQUssY0FBYztZQUNqRUosU0FBUztnQkFDUEksTUFBTTtnQkFDTkMsaUJBQWlCO29CQUFDRCxNQUFNO2dCQUFvQjtnQkFDNUNFLGlCQUFpQjtvQkFBQ0YsTUFBTTtnQkFBb0I7Z0JBQzVDRyxVQUFVO29CQUFDUDtpQkFBTztZQUNwQjtZQUNBRCxNQUFNUyxLQUFLLENBQUNYLE1BQU1HO1FBQ3BCO1FBRUEsZ0NBQWdDLEdBQ2hDLE1BQU1TLFlBQVk7WUFBQ0wsTUFBTTtZQUF1Qk0sWUFBWVY7UUFBTTtRQUNsRUQsTUFBTVMsS0FBSyxDQUFDWCxNQUFNWTtRQUNsQlAsS0FBS1MsSUFBSSxDQUFDRjtJQUNaO0lBRUEsb0JBQW9CLEdBQ3BCLE1BQU1HLFVBQVU7UUFDZFIsTUFBTTtRQUNORjtRQUNBVyxZQUFZO1FBQ1pDLFVBQVVmLE1BQU1lLFFBQVE7SUFDMUI7SUFDQWYsTUFBTVMsS0FBSyxDQUFDWCxNQUFNZTtJQUNsQixPQUFPQTtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL2hhc3QtdXRpbC10by1lc3RyZWUvbGliL2luZGV4LmpzP2Y5NGEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW1wb3J0IHt9IGZyb20gJ21kYXN0LXV0aWwtbWR4LWV4cHJlc3Npb24nXG4gKiBAaW1wb3J0IHt9IGZyb20gJ21kYXN0LXV0aWwtbWR4LWpzeCdcbiAqIEBpbXBvcnQge30gZnJvbSAnbWRhc3QtdXRpbC1tZHhqcy1lc20nXG4gKiBAaW1wb3J0IHtFeHByZXNzaW9uU3RhdGVtZW50LCBQcm9ncmFtfSBmcm9tICdlc3RyZWUnXG4gKiBAaW1wb3J0IHtPcHRpb25zfSBmcm9tICdoYXN0LXV0aWwtdG8tZXN0cmVlJ1xuICogQGltcG9ydCB7Tm9kZXMgYXMgSGFzdE5vZGVzfSBmcm9tICdoYXN0J1xuICovXG5cbmltcG9ydCB7Y3JlYXRlU3RhdGV9IGZyb20gJy4vc3RhdGUuanMnXG5cbi8qKlxuICogVHJhbnNmb3JtIGEgaGFzdCB0cmVlICh3aXRoIGVtYmVkZGVkIE1EWCBub2RlcykgaW50byBhbiBlc3RyZWUuXG4gKlxuICogIyMjIyMgTm90ZXNcbiAqXG4gKiAjIyMjIyMgQ29tbWVudHNcbiAqXG4gKiBDb21tZW50cyBhcmUgYXR0YWNoZWQgdG8gdGhlIHRyZWUgaW4gdGhlaXIgbmVpZ2hib3VyaW5nIG5vZGVzIChgcmVjYXN0YCxcbiAqIGBiYWJlbGAgc3R5bGUpIGFuZCBhbHNvIGFkZGVkIGFzIGEgYGNvbW1lbnRzYCBhcnJheSBvbiB0aGUgcHJvZ3JhbSBub2RlXG4gKiAoYGVzcHJlZWAgc3R5bGUpLlxuICogWW91IG1heSBoYXZlIHRvIGRvIGBwcm9ncmFtLmNvbW1lbnRzID0gdW5kZWZpbmVkYCBmb3IgY2VydGFpbiBjb21waWxlcnMuXG4gKlxuICogIyMjIyMjIEZyYW1ld29ya3NcbiAqXG4gKiBUaGVyZSBhcmUgZGlmZmVyZW5jZXMgYmV0d2VlbiB3aGF0IEpTWCBmcmFtZXdvcmtzIGFjY2VwdCwgc3VjaCBhcyB3aGV0aGVyIHRoZXlcbiAqIGFjY2VwdCBgY2xhc3NgIG9yIGBjbGFzc05hbWVgLCBvciBgYmFja2dyb3VuZC1jb2xvcmAgb3IgYGJhY2tncm91bmRDb2xvcmAuXG4gKlxuICogRm9yIEpTWCBjb21wb25lbnRzIHdyaXR0ZW4gaW4gTURYLCB0aGUgYXV0aG9yIGhhcyB0byBiZSBhd2FyZSBvZiB0aGlzXG4gKiBkaWZmZXJlbmNlIGFuZCB3cml0ZSBjb2RlIGFjY29yZGluZ2x5LlxuICogRm9yIGhhc3QgZWxlbWVudHMgdHJhbnNmb3JtZWQgYnkgdGhpcyBwcm9qZWN0LCB0aGlzIHdpbGwgYmUgaGFuZGxlZCB0aHJvdWdoXG4gKiBvcHRpb25zLlxuICpcbiAqIHwgRnJhbWV3b3JrIHwgYGVsZW1lbnRBdHRyaWJ1dGVOYW1lQ2FzZWAgfCBgc3R5bGVQcm9wZXJ0eU5hbWVDYXNlYCB8XG4gKiB8IC0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfFxuICogfCBQcmVhY3QgICAgfCBgJ2h0bWwnYCAgICAgICAgICAgICAgICAgICB8IGAnZG9tJ2AgICAgICAgICAgICAgICAgIHxcbiAqIHwgUmVhY3QgICAgIHwgYCdyZWFjdCdgICAgICAgICAgICAgICAgICAgfCBgJ2RvbSdgICAgICAgICAgICAgICAgICB8XG4gKiB8IFNvbGlkICAgICB8IGAnaHRtbCdgICAgICAgICAgICAgICAgICAgIHwgYCdjc3MnYCAgICAgICAgICAgICAgICAgfFxuICogfCBWdWUgICAgICAgfCBgJ2h0bWwnYCAgICAgICAgICAgICAgICAgICB8IGAnZG9tJ2AgICAgICAgICAgICAgICAgIHxcbiAqXG4gKiBAcGFyYW0ge0hhc3ROb2Rlc30gdHJlZVxuICogICBoYXN0IHRyZWUuXG4gKiBAcGFyYW0ge09wdGlvbnMgfCBudWxsIHwgdW5kZWZpbmVkfSBbb3B0aW9uc11cbiAqICAgQ29uZmlndXJhdGlvbiAob3B0aW9uYWwpLlxuICogQHJldHVybnMge1Byb2dyYW19XG4gKiAgIGVzdHJlZSBwcm9ncmFtIG5vZGUuXG4gKlxuICogICBUaGUgcHJvZ3JhbeKAmXMgbGFzdCBjaGlsZCBpbiBgYm9keWAgaXMgbW9zdCBsaWtlbHkgYW4gYEV4cHJlc3Npb25TdGF0ZW1lbnRgLFxuICogICB3aG9zZSBleHByZXNzaW9uIGlzIGEgYEpTWEZyYWdtZW50YCBvciBhIGBKU1hFbGVtZW50YC5cbiAqXG4gKiAgIFR5cGljYWxseSwgdGhlcmUgaXMgb25seSBvbmUgbm9kZSBpbiBgYm9keWAsIGhvd2V2ZXIsIHRoaXMgdXRpbGl0eSBhbHNvXG4gKiAgIHN1cHBvcnRzIGVtYmVkZGVkIE1EWCBub2RlcyBpbiB0aGUgSFRNTCAod2hlbiBgbWRhc3QtdXRpbC1tZHhgIGlzIHVzZWRcbiAqICAgd2l0aCBtZGFzdCB0byBwYXJzZSBtYXJrZG93biBiZWZvcmUgcGFzc2luZyBpdHMgbm9kZXMgdGhyb3VnaCB0byBoYXN0KS5cbiAqICAgV2hlbiBNRFggRVNNIGltcG9ydC9leHBvcnRzIGFyZSB1c2VkLCB0aG9zZSBub2RlcyBhcmUgYWRkZWQgYmVmb3JlIHRoZVxuICogICBmcmFnbWVudCBvciBlbGVtZW50IGluIGJvZHkuXG4gKlxuICogICBUaGVyZSBhcmVu4oCZdCBtYW55IGdyZWF0IGVzdHJlZSBzZXJpYWxpemVycyBvdXQgdGhlcmUgdGhhdCBzdXBwb3J0IEpTWC5cbiAqICAgVG8gZG8gdGhhdCwgeW91IGNhbiB1c2UgYGVzdHJlZS11dGlsLXRvLWpzYC5cbiAqICAgT3IsIHVzZSBgZXN0cmVlLXV0aWwtYnVpbGQtanN4YCB0byB0dXJuIEpTWCBpbnRvIGZ1bmN0aW9uIGNhbGxzLCBhbmQgdGhlblxuICogICBzZXJpYWxpemUgd2l0aCB3aGF0ZXZlciAoYGFzdHJpbmdgLCBgZXNjb2RlZ2VuYCkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0VzdHJlZSh0cmVlLCBvcHRpb25zKSB7XG4gIGNvbnN0IHN0YXRlID0gY3JlYXRlU3RhdGUob3B0aW9ucyB8fCB7fSlcbiAgbGV0IHJlc3VsdCA9IHN0YXRlLmhhbmRsZSh0cmVlKVxuICBjb25zdCBib2R5ID0gc3RhdGUuZXNtXG5cbiAgaWYgKHJlc3VsdCkge1xuICAgIGlmIChyZXN1bHQudHlwZSAhPT0gJ0pTWEZyYWdtZW50JyAmJiByZXN1bHQudHlwZSAhPT0gJ0pTWEVsZW1lbnQnKSB7XG4gICAgICByZXN1bHQgPSB7XG4gICAgICAgIHR5cGU6ICdKU1hGcmFnbWVudCcsXG4gICAgICAgIG9wZW5pbmdGcmFnbWVudDoge3R5cGU6ICdKU1hPcGVuaW5nRnJhZ21lbnQnfSxcbiAgICAgICAgY2xvc2luZ0ZyYWdtZW50OiB7dHlwZTogJ0pTWENsb3NpbmdGcmFnbWVudCd9LFxuICAgICAgICBjaGlsZHJlbjogW3Jlc3VsdF1cbiAgICAgIH1cbiAgICAgIHN0YXRlLnBhdGNoKHRyZWUsIHJlc3VsdClcbiAgICB9XG5cbiAgICAvKiogQHR5cGUge0V4cHJlc3Npb25TdGF0ZW1lbnR9ICovXG4gICAgY29uc3Qgc3RhdGVtZW50ID0ge3R5cGU6ICdFeHByZXNzaW9uU3RhdGVtZW50JywgZXhwcmVzc2lvbjogcmVzdWx0fVxuICAgIHN0YXRlLnBhdGNoKHRyZWUsIHN0YXRlbWVudClcbiAgICBib2R5LnB1c2goc3RhdGVtZW50KVxuICB9XG5cbiAgLyoqIEB0eXBlIHtQcm9ncmFtfSAqL1xuICBjb25zdCBwcm9ncmFtID0ge1xuICAgIHR5cGU6ICdQcm9ncmFtJyxcbiAgICBib2R5LFxuICAgIHNvdXJjZVR5cGU6ICdtb2R1bGUnLFxuICAgIGNvbW1lbnRzOiBzdGF0ZS5jb21tZW50c1xuICB9XG4gIHN0YXRlLnBhdGNoKHRyZWUsIHByb2dyYW0pXG4gIHJldHVybiBwcm9ncmFtXG59XG4iXSwibmFtZXMiOlsiY3JlYXRlU3RhdGUiLCJ0b0VzdHJlZSIsInRyZWUiLCJvcHRpb25zIiwic3RhdGUiLCJyZXN1bHQiLCJoYW5kbGUiLCJib2R5IiwiZXNtIiwidHlwZSIsIm9wZW5pbmdGcmFnbWVudCIsImNsb3NpbmdGcmFnbWVudCIsImNoaWxkcmVuIiwicGF0Y2giLCJzdGF0ZW1lbnQiLCJleHByZXNzaW9uIiwicHVzaCIsInByb2dyYW0iLCJzb3VyY2VUeXBlIiwiY29tbWVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-to-estree/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-to-estree/lib/state.js":
/*!*******************************************************!*\
  !*** ./node_modules/hast-util-to-estree/lib/state.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createState: () => (/* binding */ createState)\n/* harmony export */ });\n/* harmony import */ var devlop__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! devlop */ \"(ssr)/./node_modules/devlop/lib/development.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/property-information/index.js\");\n/* harmony import */ var unist_util_position__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! unist-util-position */ \"(ssr)/./node_modules/unist-util-position/lib/index.js\");\n/* harmony import */ var zwitch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zwitch */ \"(ssr)/./node_modules/zwitch/index.js\");\n/* harmony import */ var _handlers_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handlers/index.js */ \"(ssr)/./node_modules/hast-util-to-estree/lib/handlers/index.js\");\n/**\n * @import {\n *   JSXElement as JsxElement,\n *   JSXExpressionContainer as JsxExpressionContainer,\n *   JSXFragment as JsxFragment,\n *   JSXIdentifier as JsxIdentifier,\n *   JSXMemberExpression as JsxMemberExpression,\n *   JSXNamespacedName as JsxNamespacedName,\n *   JSXSpreadChild as JsxSpreadChild,\n *   JSXText as JsxText,\n * } from 'estree-jsx'\n * @import {Comment, Directive, ModuleDeclaration, Node as EstreeNode, Statement} from 'estree'\n * @import {MdxJsxAttribute, MdxJsxAttributeValueExpression, MdxJsxExpressionAttribute} from 'mdast-util-mdx-jsx'\n * @import {Nodes as HastNodes, Parents as HastParents} from 'hast'\n * @import {Schema} from 'property-information'\n */ /**\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Specify casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback Handle\n *   Turn a hast node into an estree node.\n * @param {any} node\n *   Expected hast node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText | null | undefined}\n *   estree node.\n *\n * @typedef Options\n *   Configuration.\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n *\n *   This casing is used for hast elements, not for embedded MDX JSX nodes\n *   (components that someone authored manually).\n * @property {Record<string, Handle | null | undefined> | null | undefined} [handlers={}]\n *   Custom handlers (optional).\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default: `'dom'`).\n *\n *   This casing is used for hast elements, not for embedded MDX JSX nodes\n *   (components that someone authored manually).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(parent: HastParents) => Array<JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText>} all\n *   Transform children of a hast parent to estree.\n * @property {Array<Comment>} comments\n *   List of estree comments.\n * @property {(name: string) => JsxIdentifier | JsxNamespacedName} createJsxAttributeName\n *   Create a JSX attribute name.\n * @property {(name: string) => JsxIdentifier | JsxMemberExpression | JsxNamespacedName} createJsxElementName\n *   Create a JSX element name.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Array<Directive | ModuleDeclaration | Statement>} esm\n *   List of top-level estree nodes.\n * @property {(node: any) => JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText | null | undefined} handle\n *   Transform a hast node to estree.\n * @property {(from: HastNodes | MdxJsxAttribute | MdxJsxAttributeValueExpression | MdxJsxExpressionAttribute, to: Comment | EstreeNode) => undefined} inherit\n *   Take positional info and data from `from` (use `patch` if you don’t want data).\n * @property {(from: HastNodes, to: Comment | EstreeNode) => undefined} patch\n *   Take positional info from `from` (use `inherit` if you also want data).\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n */ \n\n\n\n\nconst own = {}.hasOwnProperty;\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n//\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\n// See: <https://github.com/mdx-js/mdx/issues/2000>\nconst tableElements = new Set([\n    \"table\",\n    \"tbody\",\n    \"thead\",\n    \"tfoot\",\n    \"tr\"\n]);\n/**\n * Create a state from options.\n *\n * @param {Options} options\n *   Configuration.\n * @returns {State}\n *   Info passed around about the current state.\n */ function createState(options) {\n    /** @type {Handle} */ const one = (0,zwitch__WEBPACK_IMPORTED_MODULE_0__.zwitch)(\"type\", {\n        invalid,\n        unknown,\n        handlers: {\n            ..._handlers_index_js__WEBPACK_IMPORTED_MODULE_1__.handlers,\n            ...options.handlers\n        }\n    });\n    return {\n        // Current space.\n        elementAttributeNameCase: options.elementAttributeNameCase || \"react\",\n        schema: options.space === \"svg\" ? property_information__WEBPACK_IMPORTED_MODULE_2__.svg : property_information__WEBPACK_IMPORTED_MODULE_2__.html,\n        stylePropertyNameCase: options.stylePropertyNameCase || \"dom\",\n        tableCellAlignToStyle: options.tableCellAlignToStyle !== false,\n        // Results.\n        comments: [],\n        esm: [],\n        // Useful functions.\n        all,\n        createJsxAttributeName,\n        createJsxElementName,\n        handle,\n        inherit,\n        patch\n    };\n    /**\n   * @this {State}\n   * @param {any} node\n   * @returns {JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText | null | undefined}\n   */ function handle(node) {\n        return one(node, this);\n    }\n}\n/**\n * Crash on an invalid value.\n *\n * @param {unknown} value\n *   Non-node.\n * @returns {never}\n *   Nothing (crashes).\n */ function invalid(value) {\n    throw new Error(\"Cannot handle value `\" + value + \"`, expected node\");\n}\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node\n *   Unknown node.\n * @returns {never}\n *   Nothing (crashes).\n */ function unknown(node) {\n    (0,devlop__WEBPACK_IMPORTED_MODULE_3__.ok)(node && typeof node === \"object\");\n    (0,devlop__WEBPACK_IMPORTED_MODULE_3__.ok)(\"type\" in node);\n    throw new Error(\"Cannot handle unknown node `\" + node.type + \"`\");\n}\n/**\n * @this {State} state\n *   Info passed around about the current state.\n * @param {HastParents} parent\n *   hast node whose children to transform.\n * @returns {Array<JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText>}\n *   estree nodes.\n */ function all(parent) {\n    const children = parent.children || [];\n    let index = -1;\n    /** @type {Array<JsxElement | JsxExpressionContainer | JsxFragment | JsxSpreadChild | JsxText>} */ const results = [];\n    const ignoreLineBreak = this.schema.space === \"html\" && parent.type === \"element\" && tableElements.has(parent.tagName.toLowerCase());\n    while(++index < children.length){\n        const child = children[index];\n        if (ignoreLineBreak && child.type === \"text\" && child.value === \"\\n\") {\n            continue;\n        }\n        const result = this.handle(child);\n        if (Array.isArray(result)) {\n            results.push(...result);\n        } else if (result) {\n            results.push(result);\n        }\n    }\n    return results;\n}\n/**\n * Take positional info and data from `hast`.\n *\n * Use `patch` if you don’t want data.\n *\n * @param {HastNodes | MdxJsxAttribute | MdxJsxAttributeValueExpression | MdxJsxExpressionAttribute} from\n *   hast node to take positional info and data from.\n * @param {Comment | EstreeNode} to\n *   estree node to add positional info and data to.\n * @returns {undefined}\n *   Nothing.\n */ function inherit(from, to) {\n    const left = /** @type {Record<string, unknown> | undefined} */ from.data;\n    /** @type {Record<string, unknown> | undefined} */ let right;\n    /** @type {string} */ let key;\n    patch(from, to);\n    if (left) {\n        for(key in left){\n            if (own.call(left, key) && key !== \"estree\") {\n                if (!right) right = {};\n                right[key] = left[key];\n            }\n        }\n        if (right) {\n            // @ts-expect-error `esast` extension.\n            to.data = right;\n        }\n    }\n}\n/**\n * Take positional info from `from`.\n *\n * Use `inherit` if you also want data.\n *\n * @param {HastNodes | MdxJsxAttribute | MdxJsxAttributeValueExpression | MdxJsxExpressionAttribute} from\n *   hast node to take positional info from.\n * @param {Comment | EstreeNode} to\n *   estree node to add positional info to.\n * @returns {undefined}\n *   Nothing.\n */ function patch(from, to) {\n    const p = (0,unist_util_position__WEBPACK_IMPORTED_MODULE_4__.position)(from);\n    if (p && p.start.offset !== undefined && p.end.offset !== undefined) {\n        // @ts-expect-error acorn-style.\n        to.start = p.start.offset;\n        // @ts-expect-error acorn-style.\n        to.end = p.end.offset;\n        to.loc = {\n            start: {\n                line: p.start.line,\n                column: p.start.column - 1\n            },\n            end: {\n                line: p.end.line,\n                column: p.end.column - 1\n            }\n        };\n        to.range = [\n            p.start.offset,\n            p.end.offset\n        ];\n    }\n}\n/**\n * Create a JSX attribute name.\n *\n * @param {string} name\n * @returns {JsxIdentifier | JsxNamespacedName}\n */ function createJsxAttributeName(name) {\n    const node = createJsxNameFromString(name);\n    // MDX never generates this.\n    /* c8 ignore next 3 */ if (node.type === \"JSXMemberExpression\") {\n        throw new Error(\"Member expressions in attribute names are not supported\");\n    }\n    return node;\n}\n/**\n * Create a JSX element name.\n *\n * @param {string} name\n * @returns {JsxIdentifier | JsxMemberExpression | JsxNamespacedName}\n */ function createJsxElementName(name) {\n    return createJsxNameFromString(name);\n}\n/**\n * Create a JSX name from a string.\n *\n * @param {string} name\n *   Name.\n * @returns {JsxIdentifier | JsxMemberExpression | JsxNamespacedName}\n *   Node.\n */ function createJsxNameFromString(name) {\n    if (name.includes(\".\")) {\n        const names = name.split(\".\");\n        let part = names.shift();\n        (0,devlop__WEBPACK_IMPORTED_MODULE_3__.ok)(part, \"Expected `part` to be defined\");\n        /** @type {JsxIdentifier | JsxMemberExpression} */ let node = {\n            type: \"JSXIdentifier\",\n            name: part\n        };\n        while(part = names.shift()){\n            node = {\n                type: \"JSXMemberExpression\",\n                object: node,\n                property: {\n                    type: \"JSXIdentifier\",\n                    name: part\n                }\n            };\n        }\n        return node;\n    }\n    if (name.includes(\":\")) {\n        const parts = name.split(\":\");\n        return {\n            type: \"JSXNamespacedName\",\n            namespace: {\n                type: \"JSXIdentifier\",\n                name: parts[0]\n            },\n            name: {\n                type: \"JSXIdentifier\",\n                name: parts[1]\n            }\n        };\n    }\n    return {\n        type: \"JSXIdentifier\",\n        name\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-to-estree/lib/state.js\n");

/***/ })

};
;