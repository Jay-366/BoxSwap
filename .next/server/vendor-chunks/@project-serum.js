"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@project-serum";
exports.ids = ["vendor-chunks/@project-serum"];
exports.modules = {

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/accounts.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/borsh/accounts.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACCOUNT_DISCRIMINATOR_SIZE: () => (/* binding */ ACCOUNT_DISCRIMINATOR_SIZE),\n/* harmony export */   BorshAccountsCoder: () => (/* binding */ BorshAccountsCoder)\n/* harmony export */ });\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! camelcase */ \"(ssr)/./node_modules/camelcase/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(camelcase__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./idl.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/idl.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/common.js\");\n\n\n\n\n\n\n/**\n * Number of bytes of the account discriminator.\n */ const ACCOUNT_DISCRIMINATOR_SIZE = 8;\n/**\n * Encodes and decodes account objects.\n */ class BorshAccountsCoder {\n    constructor(idl){\n        if (idl.accounts === undefined) {\n            this.accountLayouts = new Map();\n            return;\n        }\n        const layouts = idl.accounts.map((acc)=>{\n            return [\n                acc.name,\n                _idl_js__WEBPACK_IMPORTED_MODULE_4__.IdlCoder.typeDefLayout(acc, idl.types)\n            ];\n        });\n        this.accountLayouts = new Map(layouts);\n        this.idl = idl;\n    }\n    async encode(accountName, account) {\n        const buffer = buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.alloc(1000); // TODO: use a tighter buffer.\n        const layout = this.accountLayouts.get(accountName);\n        if (!layout) {\n            throw new Error(`Unknown account: ${accountName}`);\n        }\n        const len = layout.encode(account, buffer);\n        let accountData = buffer.slice(0, len);\n        let discriminator = BorshAccountsCoder.accountDiscriminator(accountName);\n        return buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.concat([\n            discriminator,\n            accountData\n        ]);\n    }\n    decode(accountName, data) {\n        // Assert the account discriminator is correct.\n        const discriminator = BorshAccountsCoder.accountDiscriminator(accountName);\n        if (discriminator.compare(data.slice(0, 8))) {\n            throw new Error(\"Invalid account discriminator\");\n        }\n        return this.decodeUnchecked(accountName, data);\n    }\n    decodeAny(data) {\n        const accountDescriminator = data.slice(0, 8);\n        const accountName = Array.from(this.accountLayouts.keys()).find((key)=>BorshAccountsCoder.accountDiscriminator(key).equals(accountDescriminator));\n        if (!accountName) {\n            throw new Error(\"Account descriminator not found\");\n        }\n        return this.decodeUnchecked(accountName, data);\n    }\n    decodeUnchecked(accountName, ix) {\n        // Chop off the discriminator before decoding.\n        const data = ix.slice(ACCOUNT_DISCRIMINATOR_SIZE);\n        const layout = this.accountLayouts.get(accountName);\n        if (!layout) {\n            throw new Error(`Unknown account: ${accountName}`);\n        }\n        return layout.decode(data);\n    }\n    memcmp(accountName, appendData) {\n        const discriminator = BorshAccountsCoder.accountDiscriminator(accountName);\n        return {\n            offset: 0,\n            bytes: bs58__WEBPACK_IMPORTED_MODULE_0___default().encode(appendData ? buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.concat([\n                discriminator,\n                appendData\n            ]) : discriminator)\n        };\n    }\n    size(idlAccount) {\n        var _a;\n        return ACCOUNT_DISCRIMINATOR_SIZE + ((_a = (0,_common_js__WEBPACK_IMPORTED_MODULE_5__.accountSize)(this.idl, idlAccount)) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Calculates and returns a unique 8 byte discriminator prepended to all anchor accounts.\n     *\n     * @param name The name of the account to calculate the discriminator.\n     */ static accountDiscriminator(name) {\n        return buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(js_sha256__WEBPACK_IMPORTED_MODULE_3__.sha256.digest(`account:${camelcase__WEBPACK_IMPORTED_MODULE_2___default()(name, {\n            pascalCase: true,\n            preserveConsecutiveUppercase: true\n        })}`)).slice(0, ACCOUNT_DISCRIMINATOR_SIZE);\n    }\n} //# sourceMappingURL=accounts.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/accounts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/event.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/borsh/event.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BorshEventCoder: () => (/* binding */ BorshEventCoder),\n/* harmony export */   eventDiscriminator: () => (/* binding */ eventDiscriminator)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var base64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./idl.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/idl.js\");\n\n\n\n\nclass BorshEventCoder {\n    constructor(idl){\n        if (idl.events === undefined) {\n            this.layouts = new Map();\n            return;\n        }\n        const layouts = idl.events.map((event)=>{\n            let eventTypeDef = {\n                name: event.name,\n                type: {\n                    kind: \"struct\",\n                    fields: event.fields.map((f)=>{\n                        return {\n                            name: f.name,\n                            type: f.type\n                        };\n                    })\n                }\n            };\n            return [\n                event.name,\n                _idl_js__WEBPACK_IMPORTED_MODULE_3__.IdlCoder.typeDefLayout(eventTypeDef, idl.types)\n            ];\n        });\n        this.layouts = new Map(layouts);\n        this.discriminators = new Map(idl.events === undefined ? [] : idl.events.map((e)=>[\n                base64_js__WEBPACK_IMPORTED_MODULE_1__.fromByteArray(eventDiscriminator(e.name)),\n                e.name\n            ]));\n    }\n    decode(log) {\n        let logArr;\n        // This will throw if log length is not a multiple of 4.\n        try {\n            logArr = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(base64_js__WEBPACK_IMPORTED_MODULE_1__.toByteArray(log));\n        } catch (e) {\n            return null;\n        }\n        const disc = base64_js__WEBPACK_IMPORTED_MODULE_1__.fromByteArray(logArr.slice(0, 8));\n        // Only deserialize if the discriminator implies a proper event.\n        const eventName = this.discriminators.get(disc);\n        if (eventName === undefined) {\n            return null;\n        }\n        const layout = this.layouts.get(eventName);\n        if (!layout) {\n            throw new Error(`Unknown event: ${eventName}`);\n        }\n        const data = layout.decode(logArr.slice(8));\n        return {\n            data,\n            name: eventName\n        };\n    }\n}\nfunction eventDiscriminator(name) {\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(js_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256.digest(`event:${name}`)).slice(0, 8);\n} //# sourceMappingURL=event.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL2JvcnNoL2V2ZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ0k7QUFDRDtBQUNDO0FBQzdCLE1BQU1JO0lBQ1RDLFlBQVlDLEdBQUcsQ0FBRTtRQUNiLElBQUlBLElBQUlDLE1BQU0sS0FBS0MsV0FBVztZQUMxQixJQUFJLENBQUNDLE9BQU8sR0FBRyxJQUFJQztZQUNuQjtRQUNKO1FBQ0EsTUFBTUQsVUFBVUgsSUFBSUMsTUFBTSxDQUFDSSxHQUFHLENBQUMsQ0FBQ0M7WUFDNUIsSUFBSUMsZUFBZTtnQkFDZkMsTUFBTUYsTUFBTUUsSUFBSTtnQkFDaEJDLE1BQU07b0JBQ0ZDLE1BQU07b0JBQ05DLFFBQVFMLE1BQU1LLE1BQU0sQ0FBQ04sR0FBRyxDQUFDLENBQUNPO3dCQUN0QixPQUFPOzRCQUFFSixNQUFNSSxFQUFFSixJQUFJOzRCQUFFQyxNQUFNRyxFQUFFSCxJQUFJO3dCQUFDO29CQUN4QztnQkFDSjtZQUNKO1lBQ0EsT0FBTztnQkFBQ0gsTUFBTUUsSUFBSTtnQkFBRVgsNkNBQVFBLENBQUNnQixhQUFhLENBQUNOLGNBQWNQLElBQUljLEtBQUs7YUFBRTtRQUN4RTtRQUNBLElBQUksQ0FBQ1gsT0FBTyxHQUFHLElBQUlDLElBQUlEO1FBQ3ZCLElBQUksQ0FBQ1ksY0FBYyxHQUFHLElBQUlYLElBQUlKLElBQUlDLE1BQU0sS0FBS0MsWUFDdkMsRUFBRSxHQUNGRixJQUFJQyxNQUFNLENBQUNJLEdBQUcsQ0FBQyxDQUFDVyxJQUFNO2dCQUNwQnJCLG9EQUFvQixDQUFDdUIsbUJBQW1CRixFQUFFUixJQUFJO2dCQUM5Q1EsRUFBRVIsSUFBSTthQUNUO0lBQ1Q7SUFDQVcsT0FBT0MsR0FBRyxFQUFFO1FBQ1IsSUFBSUM7UUFDSix3REFBd0Q7UUFDeEQsSUFBSTtZQUNBQSxTQUFTM0IsMENBQU1BLENBQUM0QixJQUFJLENBQUMzQixrREFBa0IsQ0FBQ3lCO1FBQzVDLEVBQ0EsT0FBT0osR0FBRztZQUNOLE9BQU87UUFDWDtRQUNBLE1BQU1RLE9BQU83QixvREFBb0IsQ0FBQzBCLE9BQU9JLEtBQUssQ0FBQyxHQUFHO1FBQ2xELGdFQUFnRTtRQUNoRSxNQUFNQyxZQUFZLElBQUksQ0FBQ1gsY0FBYyxDQUFDWSxHQUFHLENBQUNIO1FBQzFDLElBQUlFLGNBQWN4QixXQUFXO1lBQ3pCLE9BQU87UUFDWDtRQUNBLE1BQU0wQixTQUFTLElBQUksQ0FBQ3pCLE9BQU8sQ0FBQ3dCLEdBQUcsQ0FBQ0Q7UUFDaEMsSUFBSSxDQUFDRSxRQUFRO1lBQ1QsTUFBTSxJQUFJQyxNQUFNLENBQUMsZUFBZSxFQUFFSCxVQUFVLENBQUM7UUFDakQ7UUFDQSxNQUFNSSxPQUFPRixPQUFPVCxNQUFNLENBQUNFLE9BQU9JLEtBQUssQ0FBQztRQUN4QyxPQUFPO1lBQUVLO1lBQU10QixNQUFNa0I7UUFBVTtJQUNuQztBQUNKO0FBQ08sU0FBU1IsbUJBQW1CVixJQUFJO0lBQ25DLE9BQU9kLDBDQUFNQSxDQUFDNEIsSUFBSSxDQUFDMUIsNkNBQU1BLENBQUNtQyxNQUFNLENBQUMsQ0FBQyxNQUFNLEVBQUV2QixLQUFLLENBQUMsR0FBR2lCLEtBQUssQ0FBQyxHQUFHO0FBQ2hFLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL0Bwcm9qZWN0LXNlcnVtL2FuY2hvci9kaXN0L2VzbS9jb2Rlci9ib3JzaC9ldmVudC5qcz9mYWJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcbmltcG9ydCAqIGFzIGJhc2U2NCBmcm9tIFwiYmFzZTY0LWpzXCI7XG5pbXBvcnQgeyBzaGEyNTYgfSBmcm9tIFwianMtc2hhMjU2XCI7XG5pbXBvcnQgeyBJZGxDb2RlciB9IGZyb20gXCIuL2lkbC5qc1wiO1xuZXhwb3J0IGNsYXNzIEJvcnNoRXZlbnRDb2RlciB7XG4gICAgY29uc3RydWN0b3IoaWRsKSB7XG4gICAgICAgIGlmIChpZGwuZXZlbnRzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMubGF5b3V0cyA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBsYXlvdXRzID0gaWRsLmV2ZW50cy5tYXAoKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBsZXQgZXZlbnRUeXBlRGVmID0ge1xuICAgICAgICAgICAgICAgIG5hbWU6IGV2ZW50Lm5hbWUsXG4gICAgICAgICAgICAgICAgdHlwZToge1xuICAgICAgICAgICAgICAgICAgICBraW5kOiBcInN0cnVjdFwiLFxuICAgICAgICAgICAgICAgICAgICBmaWVsZHM6IGV2ZW50LmZpZWxkcy5tYXAoKGYpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IG5hbWU6IGYubmFtZSwgdHlwZTogZi50eXBlIH07XG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIFtldmVudC5uYW1lLCBJZGxDb2Rlci50eXBlRGVmTGF5b3V0KGV2ZW50VHlwZURlZiwgaWRsLnR5cGVzKV07XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmxheW91dHMgPSBuZXcgTWFwKGxheW91dHMpO1xuICAgICAgICB0aGlzLmRpc2NyaW1pbmF0b3JzID0gbmV3IE1hcChpZGwuZXZlbnRzID09PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gW11cbiAgICAgICAgICAgIDogaWRsLmV2ZW50cy5tYXAoKGUpID0+IFtcbiAgICAgICAgICAgICAgICBiYXNlNjQuZnJvbUJ5dGVBcnJheShldmVudERpc2NyaW1pbmF0b3IoZS5uYW1lKSksXG4gICAgICAgICAgICAgICAgZS5uYW1lLFxuICAgICAgICAgICAgXSkpO1xuICAgIH1cbiAgICBkZWNvZGUobG9nKSB7XG4gICAgICAgIGxldCBsb2dBcnI7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBpZiBsb2cgbGVuZ3RoIGlzIG5vdCBhIG11bHRpcGxlIG9mIDQuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBsb2dBcnIgPSBCdWZmZXIuZnJvbShiYXNlNjQudG9CeXRlQXJyYXkobG9nKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRpc2MgPSBiYXNlNjQuZnJvbUJ5dGVBcnJheShsb2dBcnIuc2xpY2UoMCwgOCkpO1xuICAgICAgICAvLyBPbmx5IGRlc2VyaWFsaXplIGlmIHRoZSBkaXNjcmltaW5hdG9yIGltcGxpZXMgYSBwcm9wZXIgZXZlbnQuXG4gICAgICAgIGNvbnN0IGV2ZW50TmFtZSA9IHRoaXMuZGlzY3JpbWluYXRvcnMuZ2V0KGRpc2MpO1xuICAgICAgICBpZiAoZXZlbnROYW1lID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxheW91dCA9IHRoaXMubGF5b3V0cy5nZXQoZXZlbnROYW1lKTtcbiAgICAgICAgaWYgKCFsYXlvdXQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBldmVudDogJHtldmVudE5hbWV9YCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGF0YSA9IGxheW91dC5kZWNvZGUobG9nQXJyLnNsaWNlKDgpKTtcbiAgICAgICAgcmV0dXJuIHsgZGF0YSwgbmFtZTogZXZlbnROYW1lIH07XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGV2ZW50RGlzY3JpbWluYXRvcihuYW1lKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHNoYTI1Ni5kaWdlc3QoYGV2ZW50OiR7bmFtZX1gKSkuc2xpY2UoMCwgOCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldmVudC5qcy5tYXAiXSwibmFtZXMiOlsiQnVmZmVyIiwiYmFzZTY0Iiwic2hhMjU2IiwiSWRsQ29kZXIiLCJCb3JzaEV2ZW50Q29kZXIiLCJjb25zdHJ1Y3RvciIsImlkbCIsImV2ZW50cyIsInVuZGVmaW5lZCIsImxheW91dHMiLCJNYXAiLCJtYXAiLCJldmVudCIsImV2ZW50VHlwZURlZiIsIm5hbWUiLCJ0eXBlIiwia2luZCIsImZpZWxkcyIsImYiLCJ0eXBlRGVmTGF5b3V0IiwidHlwZXMiLCJkaXNjcmltaW5hdG9ycyIsImUiLCJmcm9tQnl0ZUFycmF5IiwiZXZlbnREaXNjcmltaW5hdG9yIiwiZGVjb2RlIiwibG9nIiwibG9nQXJyIiwiZnJvbSIsInRvQnl0ZUFycmF5IiwiZGlzYyIsInNsaWNlIiwiZXZlbnROYW1lIiwiZ2V0IiwibGF5b3V0IiwiRXJyb3IiLCJkYXRhIiwiZGlnZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/event.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/idl.js":
/*!************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/borsh/idl.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IdlCoder: () => (/* binding */ IdlCoder)\n/* harmony export */ });\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! camelcase */ \"(ssr)/./node_modules/camelcase/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(camelcase__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @coral-xyz/borsh */ \"(ssr)/./node_modules/@coral-xyz/borsh/dist/index.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/error.js\");\n\n\n\nclass IdlCoder {\n    static fieldLayout(field, types) {\n        const fieldName = field.name !== undefined ? camelcase__WEBPACK_IMPORTED_MODULE_0___default()(field.name) : undefined;\n        switch(field.type){\n            case \"bool\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.bool(fieldName);\n                }\n            case \"u8\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.u8(fieldName);\n                }\n            case \"i8\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.i8(fieldName);\n                }\n            case \"u16\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.u16(fieldName);\n                }\n            case \"i16\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.i16(fieldName);\n                }\n            case \"u32\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.u32(fieldName);\n                }\n            case \"i32\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.i32(fieldName);\n                }\n            case \"f32\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.f32(fieldName);\n                }\n            case \"u64\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.u64(fieldName);\n                }\n            case \"i64\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.i64(fieldName);\n                }\n            case \"f64\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.f64(fieldName);\n                }\n            case \"u128\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.u128(fieldName);\n                }\n            case \"i128\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.i128(fieldName);\n                }\n            case \"u256\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.u256(fieldName);\n                }\n            case \"i256\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.i256(fieldName);\n                }\n            case \"bytes\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.vecU8(fieldName);\n                }\n            case \"string\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.str(fieldName);\n                }\n            case \"publicKey\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.publicKey(fieldName);\n                }\n            default:\n                {\n                    if (\"vec\" in field.type) {\n                        return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.vec(IdlCoder.fieldLayout({\n                            name: undefined,\n                            type: field.type.vec\n                        }, types), fieldName);\n                    } else if (\"option\" in field.type) {\n                        return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.option(IdlCoder.fieldLayout({\n                            name: undefined,\n                            type: field.type.option\n                        }, types), fieldName);\n                    } else if (\"defined\" in field.type) {\n                        const defined = field.type.defined;\n                        // User defined type.\n                        if (types === undefined) {\n                            throw new _error_js__WEBPACK_IMPORTED_MODULE_2__.IdlError(\"User defined types not provided\");\n                        }\n                        const filtered = types.filter((t)=>t.name === defined);\n                        if (filtered.length !== 1) {\n                            throw new _error_js__WEBPACK_IMPORTED_MODULE_2__.IdlError(`Type not found: ${JSON.stringify(field)}`);\n                        }\n                        return IdlCoder.typeDefLayout(filtered[0], types, fieldName);\n                    } else if (\"array\" in field.type) {\n                        let arrayTy = field.type.array[0];\n                        let arrayLen = field.type.array[1];\n                        let innerLayout = IdlCoder.fieldLayout({\n                            name: undefined,\n                            type: arrayTy\n                        }, types);\n                        return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.array(innerLayout, arrayLen, fieldName);\n                    } else {\n                        throw new Error(`Not yet implemented: ${field}`);\n                    }\n                }\n        }\n    }\n    static typeDefLayout(typeDef, types = [], name) {\n        if (typeDef.type.kind === \"struct\") {\n            const fieldLayouts = typeDef.type.fields.map((field)=>{\n                const x = IdlCoder.fieldLayout(field, types);\n                return x;\n            });\n            return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.struct(fieldLayouts, name);\n        } else if (typeDef.type.kind === \"enum\") {\n            let variants = typeDef.type.variants.map((variant)=>{\n                const name = camelcase__WEBPACK_IMPORTED_MODULE_0___default()(variant.name);\n                if (variant.fields === undefined) {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.struct([], name);\n                }\n                const fieldLayouts = variant.fields.map((f, i)=>{\n                    if (!f.hasOwnProperty(\"name\")) {\n                        return IdlCoder.fieldLayout({\n                            type: f,\n                            name: i.toString()\n                        }, types);\n                    }\n                    // this typescript conversion is ok\n                    // because if f were of type IdlType\n                    // (that does not have a name property)\n                    // the check before would've errored\n                    return IdlCoder.fieldLayout(f, types);\n                });\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.struct(fieldLayouts, name);\n            });\n            if (name !== undefined) {\n                // Buffer-layout lib requires the name to be null (on construction)\n                // when used as a field.\n                return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.rustEnum(variants).replicate(name);\n            }\n            return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.rustEnum(variants, name);\n        } else {\n            throw new Error(`Unknown type kint: ${typeDef}`);\n        }\n    }\n} //# sourceMappingURL=idl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/idl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/borsh/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACCOUNT_DISCRIMINATOR_SIZE: () => (/* reexport safe */ _accounts_js__WEBPACK_IMPORTED_MODULE_1__.ACCOUNT_DISCRIMINATOR_SIZE),\n/* harmony export */   BorshAccountsCoder: () => (/* reexport safe */ _accounts_js__WEBPACK_IMPORTED_MODULE_1__.BorshAccountsCoder),\n/* harmony export */   BorshCoder: () => (/* binding */ BorshCoder),\n/* harmony export */   BorshEventCoder: () => (/* reexport safe */ _event_js__WEBPACK_IMPORTED_MODULE_2__.BorshEventCoder),\n/* harmony export */   BorshInstructionCoder: () => (/* reexport safe */ _instruction_js__WEBPACK_IMPORTED_MODULE_0__.BorshInstructionCoder),\n/* harmony export */   BorshStateCoder: () => (/* reexport safe */ _state_js__WEBPACK_IMPORTED_MODULE_3__.BorshStateCoder),\n/* harmony export */   eventDiscriminator: () => (/* reexport safe */ _event_js__WEBPACK_IMPORTED_MODULE_2__.eventDiscriminator),\n/* harmony export */   stateDiscriminator: () => (/* reexport safe */ _state_js__WEBPACK_IMPORTED_MODULE_3__.stateDiscriminator)\n/* harmony export */ });\n/* harmony import */ var _instruction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instruction.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/instruction.js\");\n/* harmony import */ var _accounts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./accounts.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/accounts.js\");\n/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./event.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/event.js\");\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./state.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/state.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/types.js\");\n\n\n\n\n\n\n\n\n\n/**\n * BorshCoder is the default Coder for Anchor programs implementing the\n * borsh based serialization interface.\n */ class BorshCoder {\n    constructor(idl){\n        this.instruction = new _instruction_js__WEBPACK_IMPORTED_MODULE_0__.BorshInstructionCoder(idl);\n        this.accounts = new _accounts_js__WEBPACK_IMPORTED_MODULE_1__.BorshAccountsCoder(idl);\n        this.events = new _event_js__WEBPACK_IMPORTED_MODULE_2__.BorshEventCoder(idl);\n        if (idl.state) {\n            this.state = new _state_js__WEBPACK_IMPORTED_MODULE_3__.BorshStateCoder(idl);\n        }\n        this.types = new _types_js__WEBPACK_IMPORTED_MODULE_4__.BorshTypesCoder(idl);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL2JvcnNoL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUQ7QUFDTjtBQUNOO0FBQ0E7QUFDQTtBQUNZO0FBQ3NCO0FBQ2Q7QUFDQTtBQUNqRTs7O0NBR0MsR0FDTSxNQUFNUTtJQUNUQyxZQUFZQyxHQUFHLENBQUU7UUFDYixJQUFJLENBQUNDLFdBQVcsR0FBRyxJQUFJWCxrRUFBcUJBLENBQUNVO1FBQzdDLElBQUksQ0FBQ0UsUUFBUSxHQUFHLElBQUlYLDREQUFrQkEsQ0FBQ1M7UUFDdkMsSUFBSSxDQUFDRyxNQUFNLEdBQUcsSUFBSVgsc0RBQWVBLENBQUNRO1FBQ2xDLElBQUlBLElBQUlJLEtBQUssRUFBRTtZQUNYLElBQUksQ0FBQ0EsS0FBSyxHQUFHLElBQUlYLHNEQUFlQSxDQUFDTztRQUNyQztRQUNBLElBQUksQ0FBQ0ssS0FBSyxHQUFHLElBQUlYLHNEQUFlQSxDQUFDTTtJQUNyQztBQUNKLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL0Bwcm9qZWN0LXNlcnVtL2FuY2hvci9kaXN0L2VzbS9jb2Rlci9ib3JzaC9pbmRleC5qcz8xNGE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvcnNoSW5zdHJ1Y3Rpb25Db2RlciB9IGZyb20gXCIuL2luc3RydWN0aW9uLmpzXCI7XG5pbXBvcnQgeyBCb3JzaEFjY291bnRzQ29kZXIgfSBmcm9tIFwiLi9hY2NvdW50cy5qc1wiO1xuaW1wb3J0IHsgQm9yc2hFdmVudENvZGVyIH0gZnJvbSBcIi4vZXZlbnQuanNcIjtcbmltcG9ydCB7IEJvcnNoU3RhdGVDb2RlciB9IGZyb20gXCIuL3N0YXRlLmpzXCI7XG5pbXBvcnQgeyBCb3JzaFR5cGVzQ29kZXIgfSBmcm9tIFwiLi90eXBlcy5qc1wiO1xuZXhwb3J0IHsgQm9yc2hJbnN0cnVjdGlvbkNvZGVyIH0gZnJvbSBcIi4vaW5zdHJ1Y3Rpb24uanNcIjtcbmV4cG9ydCB7IEJvcnNoQWNjb3VudHNDb2RlciwgQUNDT1VOVF9ESVNDUklNSU5BVE9SX1NJWkUgfSBmcm9tIFwiLi9hY2NvdW50cy5qc1wiO1xuZXhwb3J0IHsgQm9yc2hFdmVudENvZGVyLCBldmVudERpc2NyaW1pbmF0b3IgfSBmcm9tIFwiLi9ldmVudC5qc1wiO1xuZXhwb3J0IHsgQm9yc2hTdGF0ZUNvZGVyLCBzdGF0ZURpc2NyaW1pbmF0b3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiO1xuLyoqXG4gKiBCb3JzaENvZGVyIGlzIHRoZSBkZWZhdWx0IENvZGVyIGZvciBBbmNob3IgcHJvZ3JhbXMgaW1wbGVtZW50aW5nIHRoZVxuICogYm9yc2ggYmFzZWQgc2VyaWFsaXphdGlvbiBpbnRlcmZhY2UuXG4gKi9cbmV4cG9ydCBjbGFzcyBCb3JzaENvZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihpZGwpIHtcbiAgICAgICAgdGhpcy5pbnN0cnVjdGlvbiA9IG5ldyBCb3JzaEluc3RydWN0aW9uQ29kZXIoaWRsKTtcbiAgICAgICAgdGhpcy5hY2NvdW50cyA9IG5ldyBCb3JzaEFjY291bnRzQ29kZXIoaWRsKTtcbiAgICAgICAgdGhpcy5ldmVudHMgPSBuZXcgQm9yc2hFdmVudENvZGVyKGlkbCk7XG4gICAgICAgIGlmIChpZGwuc3RhdGUpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBuZXcgQm9yc2hTdGF0ZUNvZGVyKGlkbCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50eXBlcyA9IG5ldyBCb3JzaFR5cGVzQ29kZXIoaWRsKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiQm9yc2hJbnN0cnVjdGlvbkNvZGVyIiwiQm9yc2hBY2NvdW50c0NvZGVyIiwiQm9yc2hFdmVudENvZGVyIiwiQm9yc2hTdGF0ZUNvZGVyIiwiQm9yc2hUeXBlc0NvZGVyIiwiQUNDT1VOVF9ESVNDUklNSU5BVE9SX1NJWkUiLCJldmVudERpc2NyaW1pbmF0b3IiLCJzdGF0ZURpc2NyaW1pbmF0b3IiLCJCb3JzaENvZGVyIiwiY29uc3RydWN0b3IiLCJpZGwiLCJpbnN0cnVjdGlvbiIsImFjY291bnRzIiwiZXZlbnRzIiwic3RhdGUiLCJ0eXBlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/instruction.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/borsh/instruction.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BorshInstructionCoder: () => (/* binding */ BorshInstructionCoder),\n/* harmony export */   SIGHASH_GLOBAL_NAMESPACE: () => (/* binding */ SIGHASH_GLOBAL_NAMESPACE),\n/* harmony export */   SIGHASH_STATE_NAMESPACE: () => (/* binding */ SIGHASH_STATE_NAMESPACE)\n/* harmony export */ });\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! camelcase */ \"(ssr)/./node_modules/camelcase/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(camelcase__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var snake_case__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! snake-case */ \"(ssr)/./node_modules/snake-case/dist.es2015/index.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @coral-xyz/borsh */ \"(ssr)/./node_modules/@coral-xyz/borsh/dist/index.js\");\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./idl.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/idl.js\");\n\n\n\n\n\n\n\n/**\n * Namespace for state method function signatures.\n */ const SIGHASH_STATE_NAMESPACE = \"state\";\n/**\n * Namespace for global instruction function signatures (i.e. functions\n * that aren't namespaced by the state or any of its trait implementations).\n */ const SIGHASH_GLOBAL_NAMESPACE = \"global\";\n/**\n * Encodes and decodes program instructions.\n */ class BorshInstructionCoder {\n    constructor(idl){\n        this.idl = idl;\n        this.ixLayout = BorshInstructionCoder.parseIxLayout(idl);\n        const sighashLayouts = new Map();\n        idl.instructions.forEach((ix)=>{\n            const sh = sighash(SIGHASH_GLOBAL_NAMESPACE, ix.name);\n            sighashLayouts.set(bs58__WEBPACK_IMPORTED_MODULE_0___default().encode(sh), {\n                layout: this.ixLayout.get(ix.name),\n                name: ix.name\n            });\n        });\n        if (idl.state) {\n            idl.state.methods.map((ix)=>{\n                const sh = sighash(SIGHASH_STATE_NAMESPACE, ix.name);\n                sighashLayouts.set(bs58__WEBPACK_IMPORTED_MODULE_0___default().encode(sh), {\n                    layout: this.ixLayout.get(ix.name),\n                    name: ix.name\n                });\n            });\n        }\n        this.sighashLayouts = sighashLayouts;\n    }\n    /**\n     * Encodes a program instruction.\n     */ encode(ixName, ix) {\n        return this._encode(SIGHASH_GLOBAL_NAMESPACE, ixName, ix);\n    }\n    /**\n     * Encodes a program state instruction.\n     */ encodeState(ixName, ix) {\n        return this._encode(SIGHASH_STATE_NAMESPACE, ixName, ix);\n    }\n    _encode(nameSpace, ixName, ix) {\n        const buffer = buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.alloc(1000); // TODO: use a tighter buffer.\n        const methodName = camelcase__WEBPACK_IMPORTED_MODULE_2___default()(ixName);\n        const layout = this.ixLayout.get(methodName);\n        if (!layout) {\n            throw new Error(`Unknown method: ${methodName}`);\n        }\n        const len = layout.encode(ix, buffer);\n        const data = buffer.slice(0, len);\n        return buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.concat([\n            sighash(nameSpace, ixName),\n            data\n        ]);\n    }\n    static parseIxLayout(idl) {\n        const stateMethods = idl.state ? idl.state.methods : [];\n        const ixLayouts = stateMethods.map((m)=>{\n            let fieldLayouts = m.args.map((arg)=>{\n                var _a, _b;\n                return _idl_js__WEBPACK_IMPORTED_MODULE_5__.IdlCoder.fieldLayout(arg, Array.from([\n                    ...(_a = idl.accounts) !== null && _a !== void 0 ? _a : [],\n                    ...(_b = idl.types) !== null && _b !== void 0 ? _b : []\n                ]));\n            });\n            const name = camelcase__WEBPACK_IMPORTED_MODULE_2___default()(m.name);\n            return [\n                name,\n                _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_4__.struct(fieldLayouts, name)\n            ];\n        }).concat(idl.instructions.map((ix)=>{\n            let fieldLayouts = ix.args.map((arg)=>{\n                var _a, _b;\n                return _idl_js__WEBPACK_IMPORTED_MODULE_5__.IdlCoder.fieldLayout(arg, Array.from([\n                    ...(_a = idl.accounts) !== null && _a !== void 0 ? _a : [],\n                    ...(_b = idl.types) !== null && _b !== void 0 ? _b : []\n                ]));\n            });\n            const name = camelcase__WEBPACK_IMPORTED_MODULE_2___default()(ix.name);\n            return [\n                name,\n                _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_4__.struct(fieldLayouts, name)\n            ];\n        }));\n        return new Map(ixLayouts);\n    }\n    /**\n     * Decodes a program instruction.\n     */ decode(ix, encoding = \"hex\") {\n        if (typeof ix === \"string\") {\n            ix = encoding === \"hex\" ? buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(ix, \"hex\") : bs58__WEBPACK_IMPORTED_MODULE_0___default().decode(ix);\n        }\n        let sighash = bs58__WEBPACK_IMPORTED_MODULE_0___default().encode(ix.slice(0, 8));\n        let data = ix.slice(8);\n        const decoder = this.sighashLayouts.get(sighash);\n        if (!decoder) {\n            return null;\n        }\n        return {\n            data: decoder.layout.decode(data),\n            name: decoder.name\n        };\n    }\n    /**\n     * Returns a formatted table of all the fields in the given instruction data.\n     */ format(ix, accountMetas) {\n        return InstructionFormatter.format(ix, accountMetas, this.idl);\n    }\n}\nclass InstructionFormatter {\n    static format(ix, accountMetas, idl) {\n        const idlIx = idl.instructions.filter((i)=>ix.name === i.name)[0];\n        if (idlIx === undefined) {\n            console.error(\"Invalid instruction given\");\n            return null;\n        }\n        const args = idlIx.args.map((idlField)=>{\n            return {\n                name: idlField.name,\n                type: InstructionFormatter.formatIdlType(idlField.type),\n                data: InstructionFormatter.formatIdlData(idlField, ix.data[idlField.name], idl.types)\n            };\n        });\n        const flatIdlAccounts = InstructionFormatter.flattenIdlAccounts(idlIx.accounts);\n        const accounts = accountMetas.map((meta, idx)=>{\n            if (idx < flatIdlAccounts.length) {\n                return {\n                    name: flatIdlAccounts[idx].name,\n                    ...meta\n                };\n            } else {\n                return {\n                    name: undefined,\n                    ...meta\n                };\n            }\n        });\n        return {\n            args,\n            accounts\n        };\n    }\n    static formatIdlType(idlType) {\n        if (typeof idlType === \"string\") {\n            return idlType;\n        }\n        if (\"vec\" in idlType) {\n            return `Vec<${this.formatIdlType(idlType.vec)}>`;\n        }\n        if (\"option\" in idlType) {\n            return `Option<${this.formatIdlType(idlType.option)}>`;\n        }\n        if (\"defined\" in idlType) {\n            return idlType.defined;\n        }\n        if (\"array\" in idlType) {\n            return `Array<${idlType.array[0]}; ${idlType.array[1]}>`;\n        }\n        throw new Error(`Unknown IDL type: ${idlType}`);\n    }\n    static formatIdlData(idlField, data, types) {\n        if (typeof idlField.type === \"string\") {\n            return data.toString();\n        }\n        if (idlField.type.hasOwnProperty(\"vec\")) {\n            return \"[\" + data.map((d)=>this.formatIdlData({\n                    name: \"\",\n                    type: idlField.type.vec\n                }, d)).join(\", \") + \"]\";\n        }\n        if (idlField.type.hasOwnProperty(\"option\")) {\n            return data === null ? \"null\" : this.formatIdlData({\n                name: \"\",\n                type: idlField.type.option\n            }, data, types);\n        }\n        if (idlField.type.hasOwnProperty(\"defined\")) {\n            if (types === undefined) {\n                throw new Error(\"User defined types not provided\");\n            }\n            const filtered = types.filter((t)=>t.name === idlField.type.defined);\n            if (filtered.length !== 1) {\n                throw new Error(`Type not found: ${idlField.type.defined}`);\n            }\n            return InstructionFormatter.formatIdlDataDefined(filtered[0], data, types);\n        }\n        return \"unknown\";\n    }\n    static formatIdlDataDefined(typeDef, data, types) {\n        if (typeDef.type.kind === \"struct\") {\n            const struct = typeDef.type;\n            const fields = Object.keys(data).map((k)=>{\n                const f = struct.fields.filter((f)=>f.name === k)[0];\n                if (f === undefined) {\n                    throw new Error(\"Unable to find type\");\n                }\n                return k + \": \" + InstructionFormatter.formatIdlData(f, data[k], types);\n            }).join(\", \");\n            return \"{ \" + fields + \" }\";\n        } else {\n            if (typeDef.type.variants.length === 0) {\n                return \"{}\";\n            }\n            // Struct enum.\n            if (typeDef.type.variants[0].name) {\n                const variants = typeDef.type.variants;\n                const variant = Object.keys(data)[0];\n                const enumType = data[variant];\n                const namedFields = Object.keys(enumType).map((f)=>{\n                    var _a;\n                    const fieldData = enumType[f];\n                    const idlField = (_a = variants[variant]) === null || _a === void 0 ? void 0 : _a.filter((v)=>v.name === f)[0];\n                    if (idlField === undefined) {\n                        throw new Error(\"Unable to find variant\");\n                    }\n                    return f + \": \" + InstructionFormatter.formatIdlData(idlField, fieldData, types);\n                }).join(\", \");\n                const variantName = camelcase__WEBPACK_IMPORTED_MODULE_2___default()(variant, {\n                    pascalCase: true\n                });\n                if (namedFields.length === 0) {\n                    return variantName;\n                }\n                return `${variantName} { ${namedFields} }`;\n            } else {\n                // TODO.\n                return \"Tuple formatting not yet implemented\";\n            }\n        }\n    }\n    static flattenIdlAccounts(accounts, prefix) {\n        return accounts.map((account)=>{\n            const accName = sentenceCase(account.name);\n            if (account.hasOwnProperty(\"accounts\")) {\n                const newPrefix = prefix ? `${prefix} > ${accName}` : accName;\n                return InstructionFormatter.flattenIdlAccounts(account.accounts, newPrefix);\n            } else {\n                return {\n                    ...account,\n                    name: prefix ? `${prefix} > ${accName}` : accName\n                };\n            }\n        }).flat();\n    }\n}\nfunction sentenceCase(field) {\n    const result = field.replace(/([A-Z])/g, \" $1\");\n    return result.charAt(0).toUpperCase() + result.slice(1);\n}\n// Not technically sighash, since we don't include the arguments, as Rust\n// doesn't allow function overloading.\nfunction sighash(nameSpace, ixName) {\n    let name = (0,snake_case__WEBPACK_IMPORTED_MODULE_6__.snakeCase)(ixName);\n    let preimage = `${nameSpace}:${name}`;\n    return buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(js_sha256__WEBPACK_IMPORTED_MODULE_3__.sha256.digest(preimage)).slice(0, 8);\n} //# sourceMappingURL=instruction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/instruction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/state.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/borsh/state.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BorshStateCoder: () => (/* binding */ BorshStateCoder),\n/* harmony export */   stateDiscriminator: () => (/* binding */ stateDiscriminator)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./idl.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/idl.js\");\n/* harmony import */ var _utils_features_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/features.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/features.js\");\n\n\n\n\nclass BorshStateCoder {\n    constructor(idl){\n        if (idl.state === undefined) {\n            throw new Error(\"Idl state not defined.\");\n        }\n        this.layout = _idl_js__WEBPACK_IMPORTED_MODULE_2__.IdlCoder.typeDefLayout(idl.state.struct, idl.types);\n    }\n    async encode(name, account) {\n        const buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(1000); // TODO: use a tighter buffer.\n        const len = this.layout.encode(account, buffer);\n        const disc = await stateDiscriminator(name);\n        const accData = buffer.slice(0, len);\n        return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat([\n            disc,\n            accData\n        ]);\n    }\n    decode(ix) {\n        // Chop off discriminator.\n        const data = ix.slice(8);\n        return this.layout.decode(data);\n    }\n}\n// Calculates unique 8 byte discriminator prepended to all anchor state accounts.\nasync function stateDiscriminator(name) {\n    let ns = _utils_features_js__WEBPACK_IMPORTED_MODULE_3__.isSet(\"anchor-deprecated-state\") ? \"account\" : \"state\";\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(js_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256.digest(`${ns}:${name}`)).slice(0, 8);\n} //# sourceMappingURL=state.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL2JvcnNoL3N0YXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ0c7QUFDQztBQUNnQjtBQUM3QyxNQUFNSTtJQUNUQyxZQUFZQyxHQUFHLENBQUU7UUFDYixJQUFJQSxJQUFJQyxLQUFLLEtBQUtDLFdBQVc7WUFDekIsTUFBTSxJQUFJQyxNQUFNO1FBQ3BCO1FBQ0EsSUFBSSxDQUFDQyxNQUFNLEdBQUdSLDZDQUFRQSxDQUFDUyxhQUFhLENBQUNMLElBQUlDLEtBQUssQ0FBQ0ssTUFBTSxFQUFFTixJQUFJTyxLQUFLO0lBQ3BFO0lBQ0EsTUFBTUMsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDeEIsTUFBTUMsU0FBU2pCLDBDQUFNQSxDQUFDa0IsS0FBSyxDQUFDLE9BQU8sOEJBQThCO1FBQ2pFLE1BQU1DLE1BQU0sSUFBSSxDQUFDVCxNQUFNLENBQUNJLE1BQU0sQ0FBQ0UsU0FBU0M7UUFDeEMsTUFBTUcsT0FBTyxNQUFNQyxtQkFBbUJOO1FBQ3RDLE1BQU1PLFVBQVVMLE9BQU9NLEtBQUssQ0FBQyxHQUFHSjtRQUNoQyxPQUFPbkIsMENBQU1BLENBQUN3QixNQUFNLENBQUM7WUFBQ0o7WUFBTUU7U0FBUTtJQUN4QztJQUNBRyxPQUFPQyxFQUFFLEVBQUU7UUFDUCwwQkFBMEI7UUFDMUIsTUFBTUMsT0FBT0QsR0FBR0gsS0FBSyxDQUFDO1FBQ3RCLE9BQU8sSUFBSSxDQUFDYixNQUFNLENBQUNlLE1BQU0sQ0FBQ0U7SUFDOUI7QUFDSjtBQUNBLGlGQUFpRjtBQUMxRSxlQUFlTixtQkFBbUJOLElBQUk7SUFDekMsSUFBSWEsS0FBS3pCLHFEQUFjLENBQUMsNkJBQTZCLFlBQVk7SUFDakUsT0FBT0gsMENBQU1BLENBQUM4QixJQUFJLENBQUM3Qiw2Q0FBTUEsQ0FBQzhCLE1BQU0sQ0FBQyxDQUFDLEVBQUVILEdBQUcsQ0FBQyxFQUFFYixLQUFLLENBQUMsR0FBR1EsS0FBSyxDQUFDLEdBQUc7QUFDaEUsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL2JvcnNoL3N0YXRlLmpzPzk5ZGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSBcImJ1ZmZlclwiO1xuaW1wb3J0IHsgc2hhMjU2IH0gZnJvbSBcImpzLXNoYTI1NlwiO1xuaW1wb3J0IHsgSWRsQ29kZXIgfSBmcm9tIFwiLi9pZGwuanNcIjtcbmltcG9ydCAqIGFzIGZlYXR1cmVzIGZyb20gXCIuLi8uLi91dGlscy9mZWF0dXJlcy5qc1wiO1xuZXhwb3J0IGNsYXNzIEJvcnNoU3RhdGVDb2RlciB7XG4gICAgY29uc3RydWN0b3IoaWRsKSB7XG4gICAgICAgIGlmIChpZGwuc3RhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSWRsIHN0YXRlIG5vdCBkZWZpbmVkLlwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmxheW91dCA9IElkbENvZGVyLnR5cGVEZWZMYXlvdXQoaWRsLnN0YXRlLnN0cnVjdCwgaWRsLnR5cGVzKTtcbiAgICB9XG4gICAgYXN5bmMgZW5jb2RlKG5hbWUsIGFjY291bnQpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jKDEwMDApOyAvLyBUT0RPOiB1c2UgYSB0aWdodGVyIGJ1ZmZlci5cbiAgICAgICAgY29uc3QgbGVuID0gdGhpcy5sYXlvdXQuZW5jb2RlKGFjY291bnQsIGJ1ZmZlcik7XG4gICAgICAgIGNvbnN0IGRpc2MgPSBhd2FpdCBzdGF0ZURpc2NyaW1pbmF0b3IobmFtZSk7XG4gICAgICAgIGNvbnN0IGFjY0RhdGEgPSBidWZmZXIuc2xpY2UoMCwgbGVuKTtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5jb25jYXQoW2Rpc2MsIGFjY0RhdGFdKTtcbiAgICB9XG4gICAgZGVjb2RlKGl4KSB7XG4gICAgICAgIC8vIENob3Agb2ZmIGRpc2NyaW1pbmF0b3IuXG4gICAgICAgIGNvbnN0IGRhdGEgPSBpeC5zbGljZSg4KTtcbiAgICAgICAgcmV0dXJuIHRoaXMubGF5b3V0LmRlY29kZShkYXRhKTtcbiAgICB9XG59XG4vLyBDYWxjdWxhdGVzIHVuaXF1ZSA4IGJ5dGUgZGlzY3JpbWluYXRvciBwcmVwZW5kZWQgdG8gYWxsIGFuY2hvciBzdGF0ZSBhY2NvdW50cy5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzdGF0ZURpc2NyaW1pbmF0b3IobmFtZSkge1xuICAgIGxldCBucyA9IGZlYXR1cmVzLmlzU2V0KFwiYW5jaG9yLWRlcHJlY2F0ZWQtc3RhdGVcIikgPyBcImFjY291bnRcIiA6IFwic3RhdGVcIjtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oc2hhMjU2LmRpZ2VzdChgJHtuc306JHtuYW1lfWApKS5zbGljZSgwLCA4KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRlLmpzLm1hcCJdLCJuYW1lcyI6WyJCdWZmZXIiLCJzaGEyNTYiLCJJZGxDb2RlciIsImZlYXR1cmVzIiwiQm9yc2hTdGF0ZUNvZGVyIiwiY29uc3RydWN0b3IiLCJpZGwiLCJzdGF0ZSIsInVuZGVmaW5lZCIsIkVycm9yIiwibGF5b3V0IiwidHlwZURlZkxheW91dCIsInN0cnVjdCIsInR5cGVzIiwiZW5jb2RlIiwibmFtZSIsImFjY291bnQiLCJidWZmZXIiLCJhbGxvYyIsImxlbiIsImRpc2MiLCJzdGF0ZURpc2NyaW1pbmF0b3IiLCJhY2NEYXRhIiwic2xpY2UiLCJjb25jYXQiLCJkZWNvZGUiLCJpeCIsImRhdGEiLCJucyIsImlzU2V0IiwiZnJvbSIsImRpZ2VzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/types.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/borsh/types.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BorshTypesCoder: () => (/* binding */ BorshTypesCoder)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./idl.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/idl.js\");\n\n\n/**\n * Encodes and decodes user-defined types.\n */ class BorshTypesCoder {\n    constructor(idl){\n        if (idl.types === undefined) {\n            this.typeLayouts = new Map();\n            return;\n        }\n        const layouts = idl.types.map((acc)=>{\n            return [\n                acc.name,\n                _idl_js__WEBPACK_IMPORTED_MODULE_1__.IdlCoder.typeDefLayout(acc, idl.types)\n            ];\n        });\n        this.typeLayouts = new Map(layouts);\n        this.idl = idl;\n    }\n    encode(typeName, type) {\n        const buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(1000); // TODO: use a tighter buffer.\n        const layout = this.typeLayouts.get(typeName);\n        if (!layout) {\n            throw new Error(`Unknown type: ${typeName}`);\n        }\n        const len = layout.encode(type, buffer);\n        return buffer.slice(0, len);\n    }\n    decode(typeName, typeData) {\n        const layout = this.typeLayouts.get(typeName);\n        if (!layout) {\n            throw new Error(`Unknown type: ${typeName}`);\n        }\n        return layout.decode(typeData);\n    }\n} //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL2JvcnNoL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0M7QUFDSTtBQUNwQzs7Q0FFQyxHQUNNLE1BQU1FO0lBQ1RDLFlBQVlDLEdBQUcsQ0FBRTtRQUNiLElBQUlBLElBQUlDLEtBQUssS0FBS0MsV0FBVztZQUN6QixJQUFJLENBQUNDLFdBQVcsR0FBRyxJQUFJQztZQUN2QjtRQUNKO1FBQ0EsTUFBTUMsVUFBVUwsSUFBSUMsS0FBSyxDQUFDSyxHQUFHLENBQUMsQ0FBQ0M7WUFDM0IsT0FBTztnQkFBQ0EsSUFBSUMsSUFBSTtnQkFBRVgsNkNBQVFBLENBQUNZLGFBQWEsQ0FBQ0YsS0FBS1AsSUFBSUMsS0FBSzthQUFFO1FBQzdEO1FBQ0EsSUFBSSxDQUFDRSxXQUFXLEdBQUcsSUFBSUMsSUFBSUM7UUFDM0IsSUFBSSxDQUFDTCxHQUFHLEdBQUdBO0lBQ2Y7SUFDQVUsT0FBT0MsUUFBUSxFQUFFQyxJQUFJLEVBQUU7UUFDbkIsTUFBTUMsU0FBU2pCLDBDQUFNQSxDQUFDa0IsS0FBSyxDQUFDLE9BQU8sOEJBQThCO1FBQ2pFLE1BQU1DLFNBQVMsSUFBSSxDQUFDWixXQUFXLENBQUNhLEdBQUcsQ0FBQ0w7UUFDcEMsSUFBSSxDQUFDSSxRQUFRO1lBQ1QsTUFBTSxJQUFJRSxNQUFNLENBQUMsY0FBYyxFQUFFTixTQUFTLENBQUM7UUFDL0M7UUFDQSxNQUFNTyxNQUFNSCxPQUFPTCxNQUFNLENBQUNFLE1BQU1DO1FBQ2hDLE9BQU9BLE9BQU9NLEtBQUssQ0FBQyxHQUFHRDtJQUMzQjtJQUNBRSxPQUFPVCxRQUFRLEVBQUVVLFFBQVEsRUFBRTtRQUN2QixNQUFNTixTQUFTLElBQUksQ0FBQ1osV0FBVyxDQUFDYSxHQUFHLENBQUNMO1FBQ3BDLElBQUksQ0FBQ0ksUUFBUTtZQUNULE1BQU0sSUFBSUUsTUFBTSxDQUFDLGNBQWMsRUFBRU4sU0FBUyxDQUFDO1FBQy9DO1FBQ0EsT0FBT0ksT0FBT0ssTUFBTSxDQUFDQztJQUN6QjtBQUNKLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL0Bwcm9qZWN0LXNlcnVtL2FuY2hvci9kaXN0L2VzbS9jb2Rlci9ib3JzaC90eXBlcy5qcz84NTJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcbmltcG9ydCB7IElkbENvZGVyIH0gZnJvbSBcIi4vaWRsLmpzXCI7XG4vKipcbiAqIEVuY29kZXMgYW5kIGRlY29kZXMgdXNlci1kZWZpbmVkIHR5cGVzLlxuICovXG5leHBvcnQgY2xhc3MgQm9yc2hUeXBlc0NvZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihpZGwpIHtcbiAgICAgICAgaWYgKGlkbC50eXBlcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnR5cGVMYXlvdXRzID0gbmV3IE1hcCgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxheW91dHMgPSBpZGwudHlwZXMubWFwKChhY2MpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbYWNjLm5hbWUsIElkbENvZGVyLnR5cGVEZWZMYXlvdXQoYWNjLCBpZGwudHlwZXMpXTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudHlwZUxheW91dHMgPSBuZXcgTWFwKGxheW91dHMpO1xuICAgICAgICB0aGlzLmlkbCA9IGlkbDtcbiAgICB9XG4gICAgZW5jb2RlKHR5cGVOYW1lLCB0eXBlKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvYygxMDAwKTsgLy8gVE9ETzogdXNlIGEgdGlnaHRlciBidWZmZXIuXG4gICAgICAgIGNvbnN0IGxheW91dCA9IHRoaXMudHlwZUxheW91dHMuZ2V0KHR5cGVOYW1lKTtcbiAgICAgICAgaWYgKCFsYXlvdXQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biB0eXBlOiAke3R5cGVOYW1lfWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxlbiA9IGxheW91dC5lbmNvZGUodHlwZSwgYnVmZmVyKTtcbiAgICAgICAgcmV0dXJuIGJ1ZmZlci5zbGljZSgwLCBsZW4pO1xuICAgIH1cbiAgICBkZWNvZGUodHlwZU5hbWUsIHR5cGVEYXRhKSB7XG4gICAgICAgIGNvbnN0IGxheW91dCA9IHRoaXMudHlwZUxheW91dHMuZ2V0KHR5cGVOYW1lKTtcbiAgICAgICAgaWYgKCFsYXlvdXQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biB0eXBlOiAke3R5cGVOYW1lfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsYXlvdXQuZGVjb2RlKHR5cGVEYXRhKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOlsiQnVmZmVyIiwiSWRsQ29kZXIiLCJCb3JzaFR5cGVzQ29kZXIiLCJjb25zdHJ1Y3RvciIsImlkbCIsInR5cGVzIiwidW5kZWZpbmVkIiwidHlwZUxheW91dHMiLCJNYXAiLCJsYXlvdXRzIiwibWFwIiwiYWNjIiwibmFtZSIsInR5cGVEZWZMYXlvdXQiLCJlbmNvZGUiLCJ0eXBlTmFtZSIsInR5cGUiLCJidWZmZXIiLCJhbGxvYyIsImxheW91dCIsImdldCIsIkVycm9yIiwibGVuIiwic2xpY2UiLCJkZWNvZGUiLCJ0eXBlRGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/common.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/common.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   accountSize: () => (/* binding */ accountSize)\n/* harmony export */ });\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/error.js\");\n\nfunction accountSize(idl, idlAccount) {\n    if (idlAccount.type.kind === \"enum\") {\n        let variantSizes = idlAccount.type.variants.map((variant)=>{\n            if (variant.fields === undefined) {\n                return 0;\n            }\n            return variant.fields.map((f)=>{\n                if (!(typeof f === \"object\" && \"name\" in f)) {\n                    throw new Error(\"Tuple enum variants not yet implemented.\");\n                }\n                return typeSize(idl, f.type);\n            }).reduce((a, b)=>a + b);\n        });\n        return Math.max(...variantSizes) + 1;\n    }\n    if (idlAccount.type.fields === undefined) {\n        return 0;\n    }\n    return idlAccount.type.fields.map((f)=>typeSize(idl, f.type)).reduce((a, b)=>a + b, 0);\n}\n// Returns the size of the type in bytes. For variable length types, just return\n// 1. Users should override this value in such cases.\nfunction typeSize(idl, ty) {\n    var _a, _b;\n    switch(ty){\n        case \"bool\":\n            return 1;\n        case \"u8\":\n            return 1;\n        case \"i8\":\n            return 1;\n        case \"i16\":\n            return 2;\n        case \"u16\":\n            return 2;\n        case \"u32\":\n            return 4;\n        case \"i32\":\n            return 4;\n        case \"f32\":\n            return 4;\n        case \"u64\":\n            return 8;\n        case \"i64\":\n            return 8;\n        case \"f64\":\n            return 8;\n        case \"u128\":\n            return 16;\n        case \"i128\":\n            return 16;\n        case \"u256\":\n            return 32;\n        case \"i256\":\n            return 32;\n        case \"bytes\":\n            return 1;\n        case \"string\":\n            return 1;\n        case \"publicKey\":\n            return 32;\n        default:\n            if (\"vec\" in ty) {\n                return 1;\n            }\n            if (\"option\" in ty) {\n                return 1 + typeSize(idl, ty.option);\n            }\n            if (\"coption\" in ty) {\n                return 4 + typeSize(idl, ty.coption);\n            }\n            if (\"defined\" in ty) {\n                const filtered = (_b = (_a = idl.types) === null || _a === void 0 ? void 0 : _a.filter((t)=>t.name === ty.defined)) !== null && _b !== void 0 ? _b : [];\n                if (filtered.length !== 1) {\n                    throw new _error_js__WEBPACK_IMPORTED_MODULE_0__.IdlError(`Type not found: ${JSON.stringify(ty)}`);\n                }\n                let typeDef = filtered[0];\n                return accountSize(idl, typeDef);\n            }\n            if (\"array\" in ty) {\n                let arrayTy = ty.array[0];\n                let arraySize = ty.array[1];\n                return typeSize(idl, arrayTy) * arraySize;\n            }\n            throw new Error(`Invalid type ${JSON.stringify(ty)}`);\n    }\n} //# sourceMappingURL=common.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL2NvbW1vbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1QztBQUNoQyxTQUFTQyxZQUFZQyxHQUFHLEVBQUVDLFVBQVU7SUFDdkMsSUFBSUEsV0FBV0MsSUFBSSxDQUFDQyxJQUFJLEtBQUssUUFBUTtRQUNqQyxJQUFJQyxlQUFlSCxXQUFXQyxJQUFJLENBQUNHLFFBQVEsQ0FBQ0MsR0FBRyxDQUFDLENBQUNDO1lBQzdDLElBQUlBLFFBQVFDLE1BQU0sS0FBS0MsV0FBVztnQkFDOUIsT0FBTztZQUNYO1lBQ0EsT0FBT0YsUUFBUUMsTUFBTSxDQUNoQkYsR0FBRyxDQUFDLENBQUNJO2dCQUNOLElBQUksQ0FBRSxRQUFPQSxNQUFNLFlBQVksVUFBVUEsQ0FBQUEsR0FBSTtvQkFDekMsTUFBTSxJQUFJQyxNQUFNO2dCQUNwQjtnQkFDQSxPQUFPQyxTQUFTWixLQUFLVSxFQUFFUixJQUFJO1lBQy9CLEdBQ0tXLE1BQU0sQ0FBQyxDQUFDQyxHQUFHQyxJQUFNRCxJQUFJQztRQUM5QjtRQUNBLE9BQU9DLEtBQUtDLEdBQUcsSUFBSWIsZ0JBQWdCO0lBQ3ZDO0lBQ0EsSUFBSUgsV0FBV0MsSUFBSSxDQUFDTSxNQUFNLEtBQUtDLFdBQVc7UUFDdEMsT0FBTztJQUNYO0lBQ0EsT0FBT1IsV0FBV0MsSUFBSSxDQUFDTSxNQUFNLENBQ3hCRixHQUFHLENBQUMsQ0FBQ0ksSUFBTUUsU0FBU1osS0FBS1UsRUFBRVIsSUFBSSxHQUMvQlcsTUFBTSxDQUFDLENBQUNDLEdBQUdDLElBQU1ELElBQUlDLEdBQUc7QUFDakM7QUFDQSxnRkFBZ0Y7QUFDaEYscURBQXFEO0FBQ3JELFNBQVNILFNBQVNaLEdBQUcsRUFBRWtCLEVBQUU7SUFDckIsSUFBSUMsSUFBSUM7SUFDUixPQUFRRjtRQUNKLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1lBQ0QsT0FBTztRQUNYO1lBQ0ksSUFBSSxTQUFTQSxJQUFJO2dCQUNiLE9BQU87WUFDWDtZQUNBLElBQUksWUFBWUEsSUFBSTtnQkFDaEIsT0FBTyxJQUFJTixTQUFTWixLQUFLa0IsR0FBR0csTUFBTTtZQUN0QztZQUNBLElBQUksYUFBYUgsSUFBSTtnQkFDakIsT0FBTyxJQUFJTixTQUFTWixLQUFLa0IsR0FBR0ksT0FBTztZQUN2QztZQUNBLElBQUksYUFBYUosSUFBSTtnQkFDakIsTUFBTUssV0FBVyxDQUFDSCxLQUFLLENBQUNELEtBQUtuQixJQUFJd0IsS0FBSyxNQUFNLFFBQVFMLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR00sTUFBTSxDQUFDLENBQUNDLElBQU1BLEVBQUVDLElBQUksS0FBS1QsR0FBR1UsT0FBTyxPQUFPLFFBQVFSLE9BQU8sS0FBSyxJQUFJQSxLQUFLLEVBQUU7Z0JBQ3pKLElBQUlHLFNBQVNNLE1BQU0sS0FBSyxHQUFHO29CQUN2QixNQUFNLElBQUkvQiwrQ0FBUUEsQ0FBQyxDQUFDLGdCQUFnQixFQUFFZ0MsS0FBS0MsU0FBUyxDQUFDYixJQUFJLENBQUM7Z0JBQzlEO2dCQUNBLElBQUljLFVBQVVULFFBQVEsQ0FBQyxFQUFFO2dCQUN6QixPQUFPeEIsWUFBWUMsS0FBS2dDO1lBQzVCO1lBQ0EsSUFBSSxXQUFXZCxJQUFJO2dCQUNmLElBQUllLFVBQVVmLEdBQUdnQixLQUFLLENBQUMsRUFBRTtnQkFDekIsSUFBSUMsWUFBWWpCLEdBQUdnQixLQUFLLENBQUMsRUFBRTtnQkFDM0IsT0FBT3RCLFNBQVNaLEtBQUtpQyxXQUFXRTtZQUNwQztZQUNBLE1BQU0sSUFBSXhCLE1BQU0sQ0FBQyxhQUFhLEVBQUVtQixLQUFLQyxTQUFTLENBQUNiLElBQUksQ0FBQztJQUM1RDtBQUNKLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL0Bwcm9qZWN0LXNlcnVtL2FuY2hvci9kaXN0L2VzbS9jb2Rlci9jb21tb24uanM/OTc0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJZGxFcnJvciB9IGZyb20gXCIuLi9lcnJvci5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGFjY291bnRTaXplKGlkbCwgaWRsQWNjb3VudCkge1xuICAgIGlmIChpZGxBY2NvdW50LnR5cGUua2luZCA9PT0gXCJlbnVtXCIpIHtcbiAgICAgICAgbGV0IHZhcmlhbnRTaXplcyA9IGlkbEFjY291bnQudHlwZS52YXJpYW50cy5tYXAoKHZhcmlhbnQpID0+IHtcbiAgICAgICAgICAgIGlmICh2YXJpYW50LmZpZWxkcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdmFyaWFudC5maWVsZHNcbiAgICAgICAgICAgICAgICAubWFwKChmKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCEodHlwZW9mIGYgPT09IFwib2JqZWN0XCIgJiYgXCJuYW1lXCIgaW4gZikpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHVwbGUgZW51bSB2YXJpYW50cyBub3QgeWV0IGltcGxlbWVudGVkLlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVTaXplKGlkbCwgZi50eXBlKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIE1hdGgubWF4KC4uLnZhcmlhbnRTaXplcykgKyAxO1xuICAgIH1cbiAgICBpZiAoaWRsQWNjb3VudC50eXBlLmZpZWxkcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICByZXR1cm4gaWRsQWNjb3VudC50eXBlLmZpZWxkc1xuICAgICAgICAubWFwKChmKSA9PiB0eXBlU2l6ZShpZGwsIGYudHlwZSkpXG4gICAgICAgIC5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKTtcbn1cbi8vIFJldHVybnMgdGhlIHNpemUgb2YgdGhlIHR5cGUgaW4gYnl0ZXMuIEZvciB2YXJpYWJsZSBsZW5ndGggdHlwZXMsIGp1c3QgcmV0dXJuXG4vLyAxLiBVc2VycyBzaG91bGQgb3ZlcnJpZGUgdGhpcyB2YWx1ZSBpbiBzdWNoIGNhc2VzLlxuZnVuY3Rpb24gdHlwZVNpemUoaWRsLCB0eSkge1xuICAgIHZhciBfYSwgX2I7XG4gICAgc3dpdGNoICh0eSkge1xuICAgICAgICBjYXNlIFwiYm9vbFwiOlxuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIGNhc2UgXCJ1OFwiOlxuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIGNhc2UgXCJpOFwiOlxuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIGNhc2UgXCJpMTZcIjpcbiAgICAgICAgICAgIHJldHVybiAyO1xuICAgICAgICBjYXNlIFwidTE2XCI6XG4gICAgICAgICAgICByZXR1cm4gMjtcbiAgICAgICAgY2FzZSBcInUzMlwiOlxuICAgICAgICAgICAgcmV0dXJuIDQ7XG4gICAgICAgIGNhc2UgXCJpMzJcIjpcbiAgICAgICAgICAgIHJldHVybiA0O1xuICAgICAgICBjYXNlIFwiZjMyXCI6XG4gICAgICAgICAgICByZXR1cm4gNDtcbiAgICAgICAgY2FzZSBcInU2NFwiOlxuICAgICAgICAgICAgcmV0dXJuIDg7XG4gICAgICAgIGNhc2UgXCJpNjRcIjpcbiAgICAgICAgICAgIHJldHVybiA4O1xuICAgICAgICBjYXNlIFwiZjY0XCI6XG4gICAgICAgICAgICByZXR1cm4gODtcbiAgICAgICAgY2FzZSBcInUxMjhcIjpcbiAgICAgICAgICAgIHJldHVybiAxNjtcbiAgICAgICAgY2FzZSBcImkxMjhcIjpcbiAgICAgICAgICAgIHJldHVybiAxNjtcbiAgICAgICAgY2FzZSBcInUyNTZcIjpcbiAgICAgICAgICAgIHJldHVybiAzMjtcbiAgICAgICAgY2FzZSBcImkyNTZcIjpcbiAgICAgICAgICAgIHJldHVybiAzMjtcbiAgICAgICAgY2FzZSBcImJ5dGVzXCI6XG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgY2FzZSBcInN0cmluZ1wiOlxuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIGNhc2UgXCJwdWJsaWNLZXlcIjpcbiAgICAgICAgICAgIHJldHVybiAzMjtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGlmIChcInZlY1wiIGluIHR5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoXCJvcHRpb25cIiBpbiB0eSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAxICsgdHlwZVNpemUoaWRsLCB0eS5vcHRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKFwiY29wdGlvblwiIGluIHR5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDQgKyB0eXBlU2l6ZShpZGwsIHR5LmNvcHRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKFwiZGVmaW5lZFwiIGluIHR5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmlsdGVyZWQgPSAoX2IgPSAoX2EgPSBpZGwudHlwZXMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5maWx0ZXIoKHQpID0+IHQubmFtZSA9PT0gdHkuZGVmaW5lZCkpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IFtdO1xuICAgICAgICAgICAgICAgIGlmIChmaWx0ZXJlZC5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IElkbEVycm9yKGBUeXBlIG5vdCBmb3VuZDogJHtKU09OLnN0cmluZ2lmeSh0eSl9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGxldCB0eXBlRGVmID0gZmlsdGVyZWRbMF07XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjY291bnRTaXplKGlkbCwgdHlwZURlZik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoXCJhcnJheVwiIGluIHR5KSB7XG4gICAgICAgICAgICAgICAgbGV0IGFycmF5VHkgPSB0eS5hcnJheVswXTtcbiAgICAgICAgICAgICAgICBsZXQgYXJyYXlTaXplID0gdHkuYXJyYXlbMV07XG4gICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVTaXplKGlkbCwgYXJyYXlUeSkgKiBhcnJheVNpemU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHlwZSAke0pTT04uc3RyaW5naWZ5KHR5KX1gKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21tb24uanMubWFwIl0sIm5hbWVzIjpbIklkbEVycm9yIiwiYWNjb3VudFNpemUiLCJpZGwiLCJpZGxBY2NvdW50IiwidHlwZSIsImtpbmQiLCJ2YXJpYW50U2l6ZXMiLCJ2YXJpYW50cyIsIm1hcCIsInZhcmlhbnQiLCJmaWVsZHMiLCJ1bmRlZmluZWQiLCJmIiwiRXJyb3IiLCJ0eXBlU2l6ZSIsInJlZHVjZSIsImEiLCJiIiwiTWF0aCIsIm1heCIsInR5IiwiX2EiLCJfYiIsIm9wdGlvbiIsImNvcHRpb24iLCJmaWx0ZXJlZCIsInR5cGVzIiwiZmlsdGVyIiwidCIsIm5hbWUiLCJkZWZpbmVkIiwibGVuZ3RoIiwiSlNPTiIsInN0cmluZ2lmeSIsInR5cGVEZWYiLCJhcnJheVR5IiwiYXJyYXkiLCJhcnJheVNpemUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACCOUNT_DISCRIMINATOR_SIZE: () => (/* reexport safe */ _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__.ACCOUNT_DISCRIMINATOR_SIZE),\n/* harmony export */   BorshAccountsCoder: () => (/* reexport safe */ _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__.BorshAccountsCoder),\n/* harmony export */   BorshCoder: () => (/* reexport safe */ _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__.BorshCoder),\n/* harmony export */   BorshEventCoder: () => (/* reexport safe */ _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__.BorshEventCoder),\n/* harmony export */   BorshInstructionCoder: () => (/* reexport safe */ _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__.BorshInstructionCoder),\n/* harmony export */   BorshStateCoder: () => (/* reexport safe */ _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__.BorshStateCoder),\n/* harmony export */   SystemCoder: () => (/* reexport safe */ _system_index_js__WEBPACK_IMPORTED_MODULE_1__.SystemCoder),\n/* harmony export */   eventDiscriminator: () => (/* reexport safe */ _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__.eventDiscriminator),\n/* harmony export */   stateDiscriminator: () => (/* reexport safe */ _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__.stateDiscriminator)\n/* harmony export */ });\n/* harmony import */ var _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./borsh/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/index.js\");\n/* harmony import */ var _system_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./system/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/index.js\");\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQWlDO0FBQ0MsQ0FDbEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL0Bwcm9qZWN0LXNlcnVtL2FuY2hvci9kaXN0L2VzbS9jb2Rlci9pbmRleC5qcz83NWEyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2JvcnNoL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zeXN0ZW0vaW5kZXguanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/accounts.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/system/accounts.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SystemAccountsCoder: () => (/* binding */ SystemAccountsCoder)\n/* harmony export */ });\n/* harmony import */ var buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer-layout */ \"(ssr)/./node_modules/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/common.js\");\n\n\n\nclass SystemAccountsCoder {\n    constructor(idl){\n        this.idl = idl;\n    }\n    async encode(accountName, account) {\n        switch(accountName){\n            case \"nonce\":\n                {\n                    const buffer = Buffer.alloc(_solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.NONCE_ACCOUNT_LENGTH);\n                    const len = NONCE_ACCOUNT_LAYOUT.encode(account, buffer);\n                    return buffer.slice(0, len);\n                }\n            default:\n                {\n                    throw new Error(`Invalid account name: ${accountName}`);\n                }\n        }\n    }\n    decode(accountName, ix) {\n        return this.decodeUnchecked(accountName, ix);\n    }\n    decodeUnchecked(accountName, ix) {\n        switch(accountName){\n            case \"nonce\":\n                {\n                    return decodeNonceAccount(ix);\n                }\n            default:\n                {\n                    throw new Error(`Invalid account name: ${accountName}`);\n                }\n        }\n    }\n    // TODO: this won't use the appendData.\n    memcmp(accountName, _appendData) {\n        switch(accountName){\n            case \"nonce\":\n                {\n                    return {\n                        dataSize: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.NONCE_ACCOUNT_LENGTH\n                    };\n                }\n            default:\n                {\n                    throw new Error(`Invalid account name: ${accountName}`);\n                }\n        }\n    }\n    size(idlAccount) {\n        var _a;\n        return (_a = (0,_common_js__WEBPACK_IMPORTED_MODULE_2__.accountSize)(this.idl, idlAccount)) !== null && _a !== void 0 ? _a : 0;\n    }\n}\nfunction decodeNonceAccount(ix) {\n    return NONCE_ACCOUNT_LAYOUT.decode(ix);\n}\nclass WrappedLayout extends buffer_layout__WEBPACK_IMPORTED_MODULE_0__.Layout {\n    constructor(layout, decoder, encoder, property){\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout(buffer_layout__WEBPACK_IMPORTED_MODULE_0__.blob(32), (b)=>new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(b), (key)=>key.toBuffer(), property);\n}\nconst NONCE_ACCOUNT_LAYOUT = buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct([\n    buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u32(\"version\"),\n    buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u32(\"state\"),\n    publicKey(\"authorizedPubkey\"),\n    publicKey(\"nonce\"),\n    buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct([\n        buffer_layout__WEBPACK_IMPORTED_MODULE_0__.nu64(\"lamportsPerSignature\")\n    ], \"feeCalculator\")\n]); //# sourceMappingURL=accounts.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL3N5c3RlbS9hY2NvdW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThDO0FBQ29CO0FBQ3ZCO0FBQ3BDLE1BQU1JO0lBQ1RDLFlBQVlDLEdBQUcsQ0FBRTtRQUNiLElBQUksQ0FBQ0EsR0FBRyxHQUFHQTtJQUNmO0lBQ0EsTUFBTUMsT0FBT0MsV0FBVyxFQUFFQyxPQUFPLEVBQUU7UUFDL0IsT0FBUUQ7WUFDSixLQUFLO2dCQUFTO29CQUNWLE1BQU1FLFNBQVNDLE9BQU9DLEtBQUssQ0FBQ1gsaUVBQW9CQTtvQkFDaEQsTUFBTVksTUFBTUMscUJBQXFCUCxNQUFNLENBQUNFLFNBQVNDO29CQUNqRCxPQUFPQSxPQUFPSyxLQUFLLENBQUMsR0FBR0Y7Z0JBQzNCO1lBQ0E7Z0JBQVM7b0JBQ0wsTUFBTSxJQUFJRyxNQUFNLENBQUMsc0JBQXNCLEVBQUVSLFlBQVksQ0FBQztnQkFDMUQ7UUFDSjtJQUNKO0lBQ0FTLE9BQU9ULFdBQVcsRUFBRVUsRUFBRSxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDQyxlQUFlLENBQUNYLGFBQWFVO0lBQzdDO0lBQ0FDLGdCQUFnQlgsV0FBVyxFQUFFVSxFQUFFLEVBQUU7UUFDN0IsT0FBUVY7WUFDSixLQUFLO2dCQUFTO29CQUNWLE9BQU9ZLG1CQUFtQkY7Z0JBQzlCO1lBQ0E7Z0JBQVM7b0JBQ0wsTUFBTSxJQUFJRixNQUFNLENBQUMsc0JBQXNCLEVBQUVSLFlBQVksQ0FBQztnQkFDMUQ7UUFDSjtJQUNKO0lBQ0EsdUNBQXVDO0lBQ3ZDYSxPQUFPYixXQUFXLEVBQUVjLFdBQVcsRUFBRTtRQUM3QixPQUFRZDtZQUNKLEtBQUs7Z0JBQVM7b0JBQ1YsT0FBTzt3QkFDSGUsVUFBVXRCLGlFQUFvQkE7b0JBQ2xDO2dCQUNKO1lBQ0E7Z0JBQVM7b0JBQ0wsTUFBTSxJQUFJZSxNQUFNLENBQUMsc0JBQXNCLEVBQUVSLFlBQVksQ0FBQztnQkFDMUQ7UUFDSjtJQUNKO0lBQ0FnQixLQUFLQyxVQUFVLEVBQUU7UUFDYixJQUFJQztRQUNKLE9BQU8sQ0FBQ0EsS0FBS3ZCLHVEQUFXQSxDQUFDLElBQUksQ0FBQ0csR0FBRyxFQUFFbUIsV0FBVSxNQUFPLFFBQVFDLE9BQU8sS0FBSyxJQUFJQSxLQUFLO0lBQ3JGO0FBQ0o7QUFDQSxTQUFTTixtQkFBbUJGLEVBQUU7SUFDMUIsT0FBT0oscUJBQXFCRyxNQUFNLENBQUNDO0FBQ3ZDO0FBQ0EsTUFBTVMsc0JBQXNCM0IsaURBQW1CO0lBQzNDSyxZQUFZd0IsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLE9BQU8sRUFBRUMsUUFBUSxDQUFFO1FBQzVDLEtBQUssQ0FBQ0gsT0FBT0ksSUFBSSxFQUFFRDtRQUNuQixJQUFJLENBQUNILE1BQU0sR0FBR0E7UUFDZCxJQUFJLENBQUNDLE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNDLE9BQU8sR0FBR0E7SUFDbkI7SUFDQWQsT0FBT2lCLENBQUMsRUFBRUMsTUFBTSxFQUFFO1FBQ2QsT0FBTyxJQUFJLENBQUNMLE9BQU8sQ0FBQyxJQUFJLENBQUNELE1BQU0sQ0FBQ1osTUFBTSxDQUFDaUIsR0FBR0M7SUFDOUM7SUFDQTVCLE9BQU82QixHQUFHLEVBQUVGLENBQUMsRUFBRUMsTUFBTSxFQUFFO1FBQ25CLE9BQU8sSUFBSSxDQUFDTixNQUFNLENBQUN0QixNQUFNLENBQUMsSUFBSSxDQUFDd0IsT0FBTyxDQUFDSyxNQUFNRixHQUFHQztJQUNwRDtJQUNBRSxRQUFRSCxDQUFDLEVBQUVDLE1BQU0sRUFBRTtRQUNmLE9BQU8sSUFBSSxDQUFDTixNQUFNLENBQUNRLE9BQU8sQ0FBQ0gsR0FBR0M7SUFDbEM7QUFDSjtBQUNBLFNBQVNHLFVBQVVOLFFBQVE7SUFDdkIsT0FBTyxJQUFJTCxjQUFjM0IsK0NBQWlCLENBQUMsS0FBSyxDQUFDa0MsSUFBTSxJQUFJaEMsc0RBQVNBLENBQUNnQyxJQUFJLENBQUNNLE1BQVFBLElBQUlDLFFBQVEsSUFBSVQ7QUFDdEc7QUFDQSxNQUFNbEIsdUJBQXVCZCxpREFBbUIsQ0FBQztJQUM3Q0EsOENBQWdCLENBQUM7SUFDakJBLDhDQUFnQixDQUFDO0lBQ2pCc0MsVUFBVTtJQUNWQSxVQUFVO0lBQ1Z0QyxpREFBbUIsQ0FBQztRQUFDQSwrQ0FBaUIsQ0FBQztLQUF3QixFQUFFO0NBQ3BFLEdBQ0Qsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL0Bwcm9qZWN0LXNlcnVtL2FuY2hvci9kaXN0L2VzbS9jb2Rlci9zeXN0ZW0vYWNjb3VudHMuanM/ZDYwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBCdWZmZXJMYXlvdXQgZnJvbSBcImJ1ZmZlci1sYXlvdXRcIjtcbmltcG9ydCB7IE5PTkNFX0FDQ09VTlRfTEVOR1RILCBQdWJsaWNLZXkgfSBmcm9tIFwiQHNvbGFuYS93ZWIzLmpzXCI7XG5pbXBvcnQgeyBhY2NvdW50U2l6ZSB9IGZyb20gXCIuLi9jb21tb24uanNcIjtcbmV4cG9ydCBjbGFzcyBTeXN0ZW1BY2NvdW50c0NvZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihpZGwpIHtcbiAgICAgICAgdGhpcy5pZGwgPSBpZGw7XG4gICAgfVxuICAgIGFzeW5jIGVuY29kZShhY2NvdW50TmFtZSwgYWNjb3VudCkge1xuICAgICAgICBzd2l0Y2ggKGFjY291bnROYW1lKSB7XG4gICAgICAgICAgICBjYXNlIFwibm9uY2VcIjoge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvYyhOT05DRV9BQ0NPVU5UX0xFTkdUSCk7XG4gICAgICAgICAgICAgICAgY29uc3QgbGVuID0gTk9OQ0VfQUNDT1VOVF9MQVlPVVQuZW5jb2RlKGFjY291bnQsIGJ1ZmZlcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJ1ZmZlci5zbGljZSgwLCBsZW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBhY2NvdW50IG5hbWU6ICR7YWNjb3VudE5hbWV9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGVjb2RlKGFjY291bnROYW1lLCBpeCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVVbmNoZWNrZWQoYWNjb3VudE5hbWUsIGl4KTtcbiAgICB9XG4gICAgZGVjb2RlVW5jaGVja2VkKGFjY291bnROYW1lLCBpeCkge1xuICAgICAgICBzd2l0Y2ggKGFjY291bnROYW1lKSB7XG4gICAgICAgICAgICBjYXNlIFwibm9uY2VcIjoge1xuICAgICAgICAgICAgICAgIHJldHVybiBkZWNvZGVOb25jZUFjY291bnQoaXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBhY2NvdW50IG5hbWU6ICR7YWNjb3VudE5hbWV9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gVE9ETzogdGhpcyB3b24ndCB1c2UgdGhlIGFwcGVuZERhdGEuXG4gICAgbWVtY21wKGFjY291bnROYW1lLCBfYXBwZW5kRGF0YSkge1xuICAgICAgICBzd2l0Y2ggKGFjY291bnROYW1lKSB7XG4gICAgICAgICAgICBjYXNlIFwibm9uY2VcIjoge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGFTaXplOiBOT05DRV9BQ0NPVU5UX0xFTkdUSCxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBhY2NvdW50IG5hbWU6ICR7YWNjb3VudE5hbWV9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2l6ZShpZGxBY2NvdW50KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIChfYSA9IGFjY291bnRTaXplKHRoaXMuaWRsLCBpZGxBY2NvdW50KSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogMDtcbiAgICB9XG59XG5mdW5jdGlvbiBkZWNvZGVOb25jZUFjY291bnQoaXgpIHtcbiAgICByZXR1cm4gTk9OQ0VfQUNDT1VOVF9MQVlPVVQuZGVjb2RlKGl4KTtcbn1cbmNsYXNzIFdyYXBwZWRMYXlvdXQgZXh0ZW5kcyBCdWZmZXJMYXlvdXQuTGF5b3V0IHtcbiAgICBjb25zdHJ1Y3RvcihsYXlvdXQsIGRlY29kZXIsIGVuY29kZXIsIHByb3BlcnR5KSB7XG4gICAgICAgIHN1cGVyKGxheW91dC5zcGFuLCBwcm9wZXJ0eSk7XG4gICAgICAgIHRoaXMubGF5b3V0ID0gbGF5b3V0O1xuICAgICAgICB0aGlzLmRlY29kZXIgPSBkZWNvZGVyO1xuICAgICAgICB0aGlzLmVuY29kZXIgPSBlbmNvZGVyO1xuICAgIH1cbiAgICBkZWNvZGUoYiwgb2Zmc2V0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRlY29kZXIodGhpcy5sYXlvdXQuZGVjb2RlKGIsIG9mZnNldCkpO1xuICAgIH1cbiAgICBlbmNvZGUoc3JjLCBiLCBvZmZzZXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGF5b3V0LmVuY29kZSh0aGlzLmVuY29kZXIoc3JjKSwgYiwgb2Zmc2V0KTtcbiAgICB9XG4gICAgZ2V0U3BhbihiLCBvZmZzZXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGF5b3V0LmdldFNwYW4oYiwgb2Zmc2V0KTtcbiAgICB9XG59XG5mdW5jdGlvbiBwdWJsaWNLZXkocHJvcGVydHkpIHtcbiAgICByZXR1cm4gbmV3IFdyYXBwZWRMYXlvdXQoQnVmZmVyTGF5b3V0LmJsb2IoMzIpLCAoYikgPT4gbmV3IFB1YmxpY0tleShiKSwgKGtleSkgPT4ga2V5LnRvQnVmZmVyKCksIHByb3BlcnR5KTtcbn1cbmNvbnN0IE5PTkNFX0FDQ09VTlRfTEFZT1VUID0gQnVmZmVyTGF5b3V0LnN0cnVjdChbXG4gICAgQnVmZmVyTGF5b3V0LnUzMihcInZlcnNpb25cIiksXG4gICAgQnVmZmVyTGF5b3V0LnUzMihcInN0YXRlXCIpLFxuICAgIHB1YmxpY0tleShcImF1dGhvcml6ZWRQdWJrZXlcIiksXG4gICAgcHVibGljS2V5KFwibm9uY2VcIiksXG4gICAgQnVmZmVyTGF5b3V0LnN0cnVjdChbQnVmZmVyTGF5b3V0Lm51NjQoXCJsYW1wb3J0c1BlclNpZ25hdHVyZVwiKV0sIFwiZmVlQ2FsY3VsYXRvclwiKSxcbl0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWNjb3VudHMuanMubWFwIl0sIm5hbWVzIjpbIkJ1ZmZlckxheW91dCIsIk5PTkNFX0FDQ09VTlRfTEVOR1RIIiwiUHVibGljS2V5IiwiYWNjb3VudFNpemUiLCJTeXN0ZW1BY2NvdW50c0NvZGVyIiwiY29uc3RydWN0b3IiLCJpZGwiLCJlbmNvZGUiLCJhY2NvdW50TmFtZSIsImFjY291bnQiLCJidWZmZXIiLCJCdWZmZXIiLCJhbGxvYyIsImxlbiIsIk5PTkNFX0FDQ09VTlRfTEFZT1VUIiwic2xpY2UiLCJFcnJvciIsImRlY29kZSIsIml4IiwiZGVjb2RlVW5jaGVja2VkIiwiZGVjb2RlTm9uY2VBY2NvdW50IiwibWVtY21wIiwiX2FwcGVuZERhdGEiLCJkYXRhU2l6ZSIsInNpemUiLCJpZGxBY2NvdW50IiwiX2EiLCJXcmFwcGVkTGF5b3V0IiwiTGF5b3V0IiwibGF5b3V0IiwiZGVjb2RlciIsImVuY29kZXIiLCJwcm9wZXJ0eSIsInNwYW4iLCJiIiwib2Zmc2V0Iiwic3JjIiwiZ2V0U3BhbiIsInB1YmxpY0tleSIsImJsb2IiLCJrZXkiLCJ0b0J1ZmZlciIsInN0cnVjdCIsInUzMiIsIm51NjQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/accounts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/events.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/system/events.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SystemEventsCoder: () => (/* binding */ SystemEventsCoder)\n/* harmony export */ });\nclass SystemEventsCoder {\n    constructor(_idl){}\n    decode(_log) {\n        throw new Error(\"System program does not have events\");\n    }\n} //# sourceMappingURL=events.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL3N5c3RlbS9ldmVudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BO0lBQ1RDLFlBQVlDLElBQUksQ0FBRSxDQUFFO0lBQ3BCQyxPQUFPQyxJQUFJLEVBQUU7UUFDVCxNQUFNLElBQUlDLE1BQU07SUFDcEI7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9AcHJvamVjdC1zZXJ1bS9hbmNob3IvZGlzdC9lc20vY29kZXIvc3lzdGVtL2V2ZW50cy5qcz85NjE0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTeXN0ZW1FdmVudHNDb2RlciB7XG4gICAgY29uc3RydWN0b3IoX2lkbCkgeyB9XG4gICAgZGVjb2RlKF9sb2cpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3lzdGVtIHByb2dyYW0gZG9lcyBub3QgaGF2ZSBldmVudHNcIik7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXZlbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJTeXN0ZW1FdmVudHNDb2RlciIsImNvbnN0cnVjdG9yIiwiX2lkbCIsImRlY29kZSIsIl9sb2ciLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/events.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/system/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SystemCoder: () => (/* binding */ SystemCoder)\n/* harmony export */ });\n/* harmony import */ var _instruction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instruction.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/instruction.js\");\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./state.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/state.js\");\n/* harmony import */ var _accounts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./accounts.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/accounts.js\");\n/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./events.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/events.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/types.js\");\n\n\n\n\n\n/**\n * Coder for the System program.\n */ class SystemCoder {\n    constructor(idl){\n        this.instruction = new _instruction_js__WEBPACK_IMPORTED_MODULE_0__.SystemInstructionCoder(idl);\n        this.accounts = new _accounts_js__WEBPACK_IMPORTED_MODULE_2__.SystemAccountsCoder(idl);\n        this.events = new _events_js__WEBPACK_IMPORTED_MODULE_3__.SystemEventsCoder(idl);\n        this.state = new _state_js__WEBPACK_IMPORTED_MODULE_1__.SystemStateCoder(idl);\n        this.types = new _types_js__WEBPACK_IMPORTED_MODULE_4__.SystemTypesCoder(idl);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL3N5c3RlbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMEQ7QUFDWjtBQUNNO0FBQ0o7QUFDRjtBQUM5Qzs7Q0FFQyxHQUNNLE1BQU1LO0lBQ1RDLFlBQVlDLEdBQUcsQ0FBRTtRQUNiLElBQUksQ0FBQ0MsV0FBVyxHQUFHLElBQUlSLG1FQUFzQkEsQ0FBQ087UUFDOUMsSUFBSSxDQUFDRSxRQUFRLEdBQUcsSUFBSVAsNkRBQW1CQSxDQUFDSztRQUN4QyxJQUFJLENBQUNHLE1BQU0sR0FBRyxJQUFJUCx5REFBaUJBLENBQUNJO1FBQ3BDLElBQUksQ0FBQ0ksS0FBSyxHQUFHLElBQUlWLHVEQUFnQkEsQ0FBQ007UUFDbEMsSUFBSSxDQUFDSyxLQUFLLEdBQUcsSUFBSVIsdURBQWdCQSxDQUFDRztJQUN0QztBQUNKLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL0Bwcm9qZWN0LXNlcnVtL2FuY2hvci9kaXN0L2VzbS9jb2Rlci9zeXN0ZW0vaW5kZXguanM/ZDI1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTeXN0ZW1JbnN0cnVjdGlvbkNvZGVyIH0gZnJvbSBcIi4vaW5zdHJ1Y3Rpb24uanNcIjtcbmltcG9ydCB7IFN5c3RlbVN0YXRlQ29kZXIgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiO1xuaW1wb3J0IHsgU3lzdGVtQWNjb3VudHNDb2RlciB9IGZyb20gXCIuL2FjY291bnRzLmpzXCI7XG5pbXBvcnQgeyBTeXN0ZW1FdmVudHNDb2RlciB9IGZyb20gXCIuL2V2ZW50cy5qc1wiO1xuaW1wb3J0IHsgU3lzdGVtVHlwZXNDb2RlciB9IGZyb20gXCIuL3R5cGVzLmpzXCI7XG4vKipcbiAqIENvZGVyIGZvciB0aGUgU3lzdGVtIHByb2dyYW0uXG4gKi9cbmV4cG9ydCBjbGFzcyBTeXN0ZW1Db2RlciB7XG4gICAgY29uc3RydWN0b3IoaWRsKSB7XG4gICAgICAgIHRoaXMuaW5zdHJ1Y3Rpb24gPSBuZXcgU3lzdGVtSW5zdHJ1Y3Rpb25Db2RlcihpZGwpO1xuICAgICAgICB0aGlzLmFjY291bnRzID0gbmV3IFN5c3RlbUFjY291bnRzQ29kZXIoaWRsKTtcbiAgICAgICAgdGhpcy5ldmVudHMgPSBuZXcgU3lzdGVtRXZlbnRzQ29kZXIoaWRsKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBTeXN0ZW1TdGF0ZUNvZGVyKGlkbCk7XG4gICAgICAgIHRoaXMudHlwZXMgPSBuZXcgU3lzdGVtVHlwZXNDb2RlcihpZGwpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJTeXN0ZW1JbnN0cnVjdGlvbkNvZGVyIiwiU3lzdGVtU3RhdGVDb2RlciIsIlN5c3RlbUFjY291bnRzQ29kZXIiLCJTeXN0ZW1FdmVudHNDb2RlciIsIlN5c3RlbVR5cGVzQ29kZXIiLCJTeXN0ZW1Db2RlciIsImNvbnN0cnVjdG9yIiwiaWRsIiwiaW5zdHJ1Y3Rpb24iLCJhY2NvdW50cyIsImV2ZW50cyIsInN0YXRlIiwidHlwZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/instruction.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/system/instruction.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SystemInstructionCoder: () => (/* binding */ SystemInstructionCoder)\n/* harmony export */ });\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var buffer_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer-layout */ \"(ssr)/./node_modules/buffer-layout/lib/Layout.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! camelcase */ \"(ssr)/./node_modules/camelcase/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(camelcase__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nclass SystemInstructionCoder {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    constructor(_){}\n    encode(ixName, ix) {\n        switch(camelcase__WEBPACK_IMPORTED_MODULE_2___default()(ixName)){\n            case \"createAccount\":\n                {\n                    return encodeCreateAccount(ix);\n                }\n            case \"assign\":\n                {\n                    return encodeAssign(ix);\n                }\n            case \"transfer\":\n                {\n                    return encodeTransfer(ix);\n                }\n            case \"createAccountWithSeed\":\n                {\n                    return encodeCreateAccountWithSeed(ix);\n                }\n            case \"advanceNonceAccount\":\n                {\n                    return encodeAdvanceNonceAccount(ix);\n                }\n            case \"withdrawNonceAccount\":\n                {\n                    return encodeWithdrawNonceAccount(ix);\n                }\n            case \"initializeNonceAccount\":\n                {\n                    return encodeInitializeNonceAccount(ix);\n                }\n            case \"authorizeNonceAccount\":\n                {\n                    return encodeAuthorizeNonceAccount(ix);\n                }\n            case \"allocate\":\n                {\n                    return encodeAllocate(ix);\n                }\n            case \"allocateWithSeed\":\n                {\n                    return encodeAllocateWithSeed(ix);\n                }\n            case \"assignWithSeed\":\n                {\n                    return encodeAssignWithSeed(ix);\n                }\n            case \"transferWithSeed\":\n                {\n                    return encodeTransferWithSeed(ix);\n                }\n            default:\n                {\n                    throw new Error(`Invalid instruction: ${ixName}`);\n                }\n        }\n    }\n    encodeState(_ixName, _ix) {\n        throw new Error(\"System does not have state\");\n    }\n}\nclass RustStringLayout extends buffer_layout__WEBPACK_IMPORTED_MODULE_1__.Layout {\n    constructor(property){\n        super(-1, property);\n        this.property = property;\n        this.layout = buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n            buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32(\"length\"),\n            buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32(\"lengthPadding\"),\n            buffer_layout__WEBPACK_IMPORTED_MODULE_1__.blob(buffer_layout__WEBPACK_IMPORTED_MODULE_1__.offset(buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32(), -8), \"chars\")\n        ], this.property);\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.layout.span;\n        }\n        const data = {\n            chars: Buffer.from(src, \"utf8\")\n        };\n        return this.layout.encode(data, b, offset);\n    }\n    decode(b, offset = 0) {\n        const data = this.layout.decode(b, offset);\n        return data[\"chars\"].toString();\n    }\n    getSpan(b, offset = 0) {\n        return buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32().span + buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32().span + new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(new Uint8Array(b).slice(offset, offset + 4), 10, \"le\").toNumber();\n    }\n}\nfunction rustStringLayout(property) {\n    return new RustStringLayout(property);\n}\nfunction publicKey(property) {\n    return buffer_layout__WEBPACK_IMPORTED_MODULE_1__.blob(32, property);\n}\nfunction encodeCreateAccount({ lamports, space, owner }) {\n    return encodeData({\n        createAccount: {\n            lamports,\n            space,\n            owner: owner.toBuffer()\n        }\n    });\n}\nfunction encodeAssign({ owner }) {\n    return encodeData({\n        assign: {\n            owner: owner.toBuffer()\n        }\n    });\n}\nfunction encodeTransfer({ lamports }) {\n    return encodeData({\n        transfer: {\n            lamports\n        }\n    });\n}\nfunction encodeCreateAccountWithSeed({ base, seed, lamports, space, owner }) {\n    return encodeData({\n        createAccountWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            lamports,\n            space,\n            owner: owner.toBuffer()\n        }\n    }, LAYOUT.getVariant(3).span + seed.length);\n}\nfunction encodeInitializeNonceAccount({ authorized }) {\n    return encodeData({\n        initializeNonceAccount: {\n            authorized: authorized.toBuffer()\n        }\n    });\n}\nfunction encodeAdvanceNonceAccount({ authorized }) {\n    return encodeData({\n        advanceNonceAccount: {\n            authorized: authorized.toBuffer()\n        }\n    });\n}\nfunction encodeWithdrawNonceAccount({ lamports }) {\n    return encodeData({\n        withdrawNonceAccount: {\n            lamports\n        }\n    });\n}\nfunction encodeAuthorizeNonceAccount({ authorized }) {\n    return encodeData({\n        authorizeNonceAccount: {\n            authorized: authorized.toBuffer()\n        }\n    });\n}\nfunction encodeAllocate({ space }) {\n    return encodeData({\n        allocate: {\n            space\n        }\n    });\n}\nfunction encodeAllocateWithSeed({ base, seed, space, owner }) {\n    return encodeData({\n        allocateWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            space,\n            owner: owner.toBuffer()\n        }\n    }, LAYOUT.getVariant(9).span + seed.length);\n}\nfunction encodeAssignWithSeed({ base, seed, owner }) {\n    return encodeData({\n        assignWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            owner: owner.toBuffer()\n        }\n    }, LAYOUT.getVariant(10).span + seed.length);\n}\nfunction encodeTransferWithSeed({ lamports, seed, owner }) {\n    return encodeData({\n        transferWithSeed: {\n            lamports,\n            seed,\n            owner: owner.toBuffer()\n        }\n    }, LAYOUT.getVariant(11).span + seed.length);\n}\nconst LAYOUT = buffer_layout__WEBPACK_IMPORTED_MODULE_1__.union(buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32(\"instruction\"));\nLAYOUT.addVariant(0, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"lamports\"),\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"space\"),\n    publicKey(\"owner\")\n]), \"createAccount\");\nLAYOUT.addVariant(1, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"owner\")\n]), \"assign\");\nLAYOUT.addVariant(2, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"lamports\")\n]), \"transfer\");\nLAYOUT.addVariant(3, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"base\"),\n    rustStringLayout(\"seed\"),\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"lamports\"),\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"space\"),\n    publicKey(\"owner\")\n]), \"createAccountWithSeed\");\nLAYOUT.addVariant(4, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"authorized\")\n]), \"advanceNonceAccount\");\nLAYOUT.addVariant(5, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"lamports\")\n]), \"withdrawNonceAccount\");\nLAYOUT.addVariant(6, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"authorized\")\n]), \"initializeNonceAccount\");\nLAYOUT.addVariant(7, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"authorized\")\n]), \"authorizeNonceAccount\");\nLAYOUT.addVariant(8, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"space\")\n]), \"allocate\");\nLAYOUT.addVariant(9, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"base\"),\n    rustStringLayout(\"seed\"),\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"space\"),\n    publicKey(\"owner\")\n]), \"allocateWithSeed\");\nLAYOUT.addVariant(10, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"base\"),\n    rustStringLayout(\"seed\"),\n    publicKey(\"owner\")\n]), \"assignWithSeed\");\nLAYOUT.addVariant(11, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"lamports\"),\n    rustStringLayout(\"seed\"),\n    publicKey(\"owner\")\n]), \"transferWithSeed\");\nfunction encodeData(instruction, maxSpan) {\n    const b = Buffer.alloc(maxSpan !== null && maxSpan !== void 0 ? maxSpan : instructionMaxSpan);\n    const span = LAYOUT.encode(instruction, b);\n    if (maxSpan === undefined) {\n        return b.slice(0, span);\n    }\n    return b;\n}\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r)=>r.span)); //# sourceMappingURL=instruction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/instruction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/state.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/system/state.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SystemStateCoder: () => (/* binding */ SystemStateCoder)\n/* harmony export */ });\nclass SystemStateCoder {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    constructor(_idl){}\n    encode(_name, _account) {\n        throw new Error(\"System does not have state\");\n    }\n    decode(_ix) {\n        throw new Error(\"System does not have state\");\n    }\n} //# sourceMappingURL=state.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL3N5c3RlbS9zdGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUE7SUFDVCxnRUFBZ0U7SUFDaEVDLFlBQVlDLElBQUksQ0FBRSxDQUFFO0lBQ3BCQyxPQUFPQyxLQUFLLEVBQUVDLFFBQVEsRUFBRTtRQUNwQixNQUFNLElBQUlDLE1BQU07SUFDcEI7SUFDQUMsT0FBT0MsR0FBRyxFQUFFO1FBQ1IsTUFBTSxJQUFJRixNQUFNO0lBQ3BCO0FBQ0osRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL3N5c3RlbS9zdGF0ZS5qcz85YWYxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTeXN0ZW1TdGF0ZUNvZGVyIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gICAgY29uc3RydWN0b3IoX2lkbCkgeyB9XG4gICAgZW5jb2RlKF9uYW1lLCBfYWNjb3VudCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTeXN0ZW0gZG9lcyBub3QgaGF2ZSBzdGF0ZVwiKTtcbiAgICB9XG4gICAgZGVjb2RlKF9peCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTeXN0ZW0gZG9lcyBub3QgaGF2ZSBzdGF0ZVwiKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGF0ZS5qcy5tYXAiXSwibmFtZXMiOlsiU3lzdGVtU3RhdGVDb2RlciIsImNvbnN0cnVjdG9yIiwiX2lkbCIsImVuY29kZSIsIl9uYW1lIiwiX2FjY291bnQiLCJFcnJvciIsImRlY29kZSIsIl9peCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/types.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/coder/system/types.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SystemTypesCoder: () => (/* binding */ SystemTypesCoder)\n/* harmony export */ });\nclass SystemTypesCoder {\n    constructor(_idl){}\n    encode(_name, _type) {\n        throw new Error(\"System does not have user-defined types\");\n    }\n    decode(_name, _typeData) {\n        throw new Error(\"System does not have user-defined types\");\n    }\n} //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL3N5c3RlbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUE7SUFDVEMsWUFBWUMsSUFBSSxDQUFFLENBQUU7SUFDcEJDLE9BQU9DLEtBQUssRUFBRUMsS0FBSyxFQUFFO1FBQ2pCLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBQyxPQUFPSCxLQUFLLEVBQUVJLFNBQVMsRUFBRTtRQUNyQixNQUFNLElBQUlGLE1BQU07SUFDcEI7QUFDSixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9AcHJvamVjdC1zZXJ1bS9hbmNob3IvZGlzdC9lc20vY29kZXIvc3lzdGVtL3R5cGVzLmpzPzJiYjMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFN5c3RlbVR5cGVzQ29kZXIge1xuICAgIGNvbnN0cnVjdG9yKF9pZGwpIHsgfVxuICAgIGVuY29kZShfbmFtZSwgX3R5cGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3lzdGVtIGRvZXMgbm90IGhhdmUgdXNlci1kZWZpbmVkIHR5cGVzXCIpO1xuICAgIH1cbiAgICBkZWNvZGUoX25hbWUsIF90eXBlRGF0YSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTeXN0ZW0gZG9lcyBub3QgaGF2ZSB1c2VyLWRlZmluZWQgdHlwZXNcIik7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbIlN5c3RlbVR5cGVzQ29kZXIiLCJjb25zdHJ1Y3RvciIsIl9pZGwiLCJlbmNvZGUiLCJfbmFtZSIsIl90eXBlIiwiRXJyb3IiLCJkZWNvZGUiLCJfdHlwZURhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/error.js":
/*!**************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/error.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnchorError: () => (/* binding */ AnchorError),\n/* harmony export */   IdlError: () => (/* binding */ IdlError),\n/* harmony export */   LangErrorCode: () => (/* binding */ LangErrorCode),\n/* harmony export */   LangErrorMessage: () => (/* binding */ LangErrorMessage),\n/* harmony export */   ProgramError: () => (/* binding */ ProgramError),\n/* harmony export */   ProgramErrorStack: () => (/* binding */ ProgramErrorStack),\n/* harmony export */   translateError: () => (/* binding */ translateError)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _utils_features_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/features.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/features.js\");\n\n\nclass IdlError extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"IdlError\";\n    }\n}\nclass ProgramErrorStack {\n    constructor(stack){\n        this.stack = stack;\n    }\n    static parse(logs) {\n        var _a;\n        const programKeyRegex = /^Program (\\w*) invoke/;\n        const successRegex = /^Program \\w* success/;\n        const programStack = [];\n        for(let i = 0; i < logs.length; i++){\n            if (successRegex.exec(logs[i])) {\n                programStack.pop();\n                continue;\n            }\n            const programKey = (_a = programKeyRegex.exec(logs[i])) === null || _a === void 0 ? void 0 : _a[1];\n            if (!programKey) {\n                continue;\n            }\n            programStack.push(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(programKey));\n        }\n        return new ProgramErrorStack(programStack);\n    }\n}\nclass AnchorError extends Error {\n    constructor(errorCode, errorMessage, errorLogs, logs, origin, comparedValues){\n        super(errorLogs.join(\"\\n\").replace(\"Program log: \", \"\"));\n        this.errorLogs = errorLogs;\n        this.logs = logs;\n        this.error = {\n            errorCode,\n            errorMessage,\n            comparedValues,\n            origin\n        };\n        this._programErrorStack = ProgramErrorStack.parse(logs);\n    }\n    static parse(logs) {\n        if (!logs) {\n            return null;\n        }\n        const anchorErrorLogIndex = logs.findIndex((log)=>log.startsWith(\"Program log: AnchorError\"));\n        if (anchorErrorLogIndex === -1) {\n            return null;\n        }\n        const anchorErrorLog = logs[anchorErrorLogIndex];\n        const errorLogs = [\n            anchorErrorLog\n        ];\n        let comparedValues;\n        if (anchorErrorLogIndex + 1 < logs.length) {\n            // This catches the comparedValues where the following is logged\n            // <AnchorError>\n            // Left:\n            // <Pubkey>\n            // Right:\n            // <Pubkey>\n            if (logs[anchorErrorLogIndex + 1] === \"Program log: Left:\") {\n                const pubkeyRegex = /^Program log: (.*)$/;\n                const leftPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 2])[1];\n                const rightPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 4])[1];\n                comparedValues = [\n                    new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(leftPubkey),\n                    new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(rightPubkey)\n                ];\n                errorLogs.push(...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 5));\n            } else if (logs[anchorErrorLogIndex + 1].startsWith(\"Program log: Left:\")) {\n                const valueRegex = /^Program log: (Left|Right): (.*)$/;\n                const leftValue = valueRegex.exec(logs[anchorErrorLogIndex + 1])[2];\n                const rightValue = valueRegex.exec(logs[anchorErrorLogIndex + 2])[2];\n                errorLogs.push(...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 3));\n                comparedValues = [\n                    leftValue,\n                    rightValue\n                ];\n            }\n        }\n        const regexNoInfo = /^Program log: AnchorError occurred\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const noInfoAnchorErrorLog = regexNoInfo.exec(anchorErrorLog);\n        const regexFileLine = /^Program log: AnchorError thrown in (.*):(\\d*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const fileLineAnchorErrorLog = regexFileLine.exec(anchorErrorLog);\n        const regexAccountName = /^Program log: AnchorError caused by account: (.*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const accountNameAnchorErrorLog = regexAccountName.exec(anchorErrorLog);\n        if (noInfoAnchorErrorLog) {\n            const [errorCodeString, errorNumber, errorMessage] = noInfoAnchorErrorLog.slice(1, 4);\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber)\n            };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, undefined, comparedValues);\n        } else if (fileLineAnchorErrorLog) {\n            const [file, line, errorCodeString, errorNumber, errorMessage] = fileLineAnchorErrorLog.slice(1, 6);\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber)\n            };\n            const fileLine = {\n                file,\n                line: parseInt(line)\n            };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, fileLine, comparedValues);\n        } else if (accountNameAnchorErrorLog) {\n            const [accountName, errorCodeString, errorNumber, errorMessage] = accountNameAnchorErrorLog.slice(1, 5);\n            const origin = accountName;\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber)\n            };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, origin, comparedValues);\n        } else {\n            return null;\n        }\n    }\n    get program() {\n        return this._programErrorStack.stack[this._programErrorStack.stack.length - 1];\n    }\n    get programErrorStack() {\n        return this._programErrorStack.stack;\n    }\n    toString() {\n        return this.message;\n    }\n}\n// An error from a user defined program.\nclass ProgramError extends Error {\n    constructor(code, msg, logs){\n        super();\n        this.code = code;\n        this.msg = msg;\n        this.logs = logs;\n        if (logs) {\n            this._programErrorStack = ProgramErrorStack.parse(logs);\n        }\n    }\n    static parse(err, idlErrors) {\n        const errString = err.toString();\n        // TODO: don't rely on the error string. web3.js should preserve the error\n        //       code information instead of giving us an untyped string.\n        let unparsedErrorCode;\n        if (errString.includes(\"custom program error:\")) {\n            let components = errString.split(\"custom program error: \");\n            if (components.length !== 2) {\n                return null;\n            } else {\n                unparsedErrorCode = components[1];\n            }\n        } else {\n            const matches = errString.match(/\"Custom\":([0-9]+)}/g);\n            if (!matches || matches.length > 1) {\n                return null;\n            }\n            unparsedErrorCode = matches[0].match(/([0-9]+)/g)[0];\n        }\n        let errorCode;\n        try {\n            errorCode = parseInt(unparsedErrorCode);\n        } catch (parseErr) {\n            return null;\n        }\n        // Parse user error.\n        let errorMsg = idlErrors.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg, err.logs);\n        }\n        // Parse framework internal error.\n        errorMsg = LangErrorMessage.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg, err.logs);\n        }\n        // Unable to parse the error. Just return the untranslated error.\n        return null;\n    }\n    get program() {\n        var _a;\n        return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack[this._programErrorStack.stack.length - 1];\n    }\n    get programErrorStack() {\n        var _a;\n        return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack;\n    }\n    toString() {\n        return this.msg;\n    }\n}\nfunction translateError(err, idlErrors) {\n    if (_utils_features_js__WEBPACK_IMPORTED_MODULE_1__.isSet(\"debug-logs\")) {\n        console.log(\"Translating error:\", err);\n    }\n    const anchorError = AnchorError.parse(err.logs);\n    if (anchorError) {\n        return anchorError;\n    }\n    const programError = ProgramError.parse(err, idlErrors);\n    if (programError) {\n        return programError;\n    }\n    if (err.logs) {\n        const handler = {\n            get: function(target, prop) {\n                if (prop === \"programErrorStack\") {\n                    return target.programErrorStack.stack;\n                } else if (prop === \"program\") {\n                    return target.programErrorStack.stack[err.programErrorStack.stack.length - 1];\n                } else {\n                    // this is the normal way to return all other props\n                    // without modifying them.\n                    // @ts-expect-error\n                    return Reflect.get(...arguments);\n                }\n            }\n        };\n        err.programErrorStack = ProgramErrorStack.parse(err.logs);\n        return new Proxy(err, handler);\n    }\n    return err;\n}\nconst LangErrorCode = {\n    // Instructions.\n    InstructionMissing: 100,\n    InstructionFallbackNotFound: 101,\n    InstructionDidNotDeserialize: 102,\n    InstructionDidNotSerialize: 103,\n    // IDL instructions.\n    IdlInstructionStub: 1000,\n    IdlInstructionInvalidProgram: 1001,\n    // Constraints.\n    ConstraintMut: 2000,\n    ConstraintHasOne: 2001,\n    ConstraintSigner: 2002,\n    ConstraintRaw: 2003,\n    ConstraintOwner: 2004,\n    ConstraintRentExempt: 2005,\n    ConstraintSeeds: 2006,\n    ConstraintExecutable: 2007,\n    ConstraintState: 2008,\n    ConstraintAssociated: 2009,\n    ConstraintAssociatedInit: 2010,\n    ConstraintClose: 2011,\n    ConstraintAddress: 2012,\n    ConstraintZero: 2013,\n    ConstraintTokenMint: 2014,\n    ConstraintTokenOwner: 2015,\n    ConstraintMintMintAuthority: 2016,\n    ConstraintMintFreezeAuthority: 2017,\n    ConstraintMintDecimals: 2018,\n    ConstraintSpace: 2019,\n    ConstraintAccountIsNone: 2020,\n    // Require.\n    RequireViolated: 2500,\n    RequireEqViolated: 2501,\n    RequireKeysEqViolated: 2502,\n    RequireNeqViolated: 2503,\n    RequireKeysNeqViolated: 2504,\n    RequireGtViolated: 2505,\n    RequireGteViolated: 2506,\n    // Accounts.\n    AccountDiscriminatorAlreadySet: 3000,\n    AccountDiscriminatorNotFound: 3001,\n    AccountDiscriminatorMismatch: 3002,\n    AccountDidNotDeserialize: 3003,\n    AccountDidNotSerialize: 3004,\n    AccountNotEnoughKeys: 3005,\n    AccountNotMutable: 3006,\n    AccountOwnedByWrongProgram: 3007,\n    InvalidProgramId: 3008,\n    InvalidProgramExecutable: 3009,\n    AccountNotSigner: 3010,\n    AccountNotSystemOwned: 3011,\n    AccountNotInitialized: 3012,\n    AccountNotProgramData: 3013,\n    AccountNotAssociatedTokenAccount: 3014,\n    AccountSysvarMismatch: 3015,\n    AccountReallocExceedsLimit: 3016,\n    AccountDuplicateReallocs: 3017,\n    // State.\n    StateInvalidAddress: 4000,\n    // Miscellaneous\n    DeclaredProgramIdMismatch: 4100,\n    // Used for APIs that shouldn't be used anymore.\n    Deprecated: 5000\n};\nconst LangErrorMessage = new Map([\n    // Instructions.\n    [\n        LangErrorCode.InstructionMissing,\n        \"8 byte instruction identifier not provided\"\n    ],\n    [\n        LangErrorCode.InstructionFallbackNotFound,\n        \"Fallback functions are not supported\"\n    ],\n    [\n        LangErrorCode.InstructionDidNotDeserialize,\n        \"The program could not deserialize the given instruction\"\n    ],\n    [\n        LangErrorCode.InstructionDidNotSerialize,\n        \"The program could not serialize the given instruction\"\n    ],\n    // Idl instructions.\n    [\n        LangErrorCode.IdlInstructionStub,\n        \"The program was compiled without idl instructions\"\n    ],\n    [\n        LangErrorCode.IdlInstructionInvalidProgram,\n        \"The transaction was given an invalid program for the IDL instruction\"\n    ],\n    // Constraints.\n    [\n        LangErrorCode.ConstraintMut,\n        \"A mut constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintHasOne,\n        \"A has one constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintSigner,\n        \"A signer constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintRaw,\n        \"A raw constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintOwner,\n        \"An owner constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintRentExempt,\n        \"A rent exemption constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintSeeds,\n        \"A seeds constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintExecutable,\n        \"An executable constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintState,\n        \"A state constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintAssociated,\n        \"An associated constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintAssociatedInit,\n        \"An associated init constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintClose,\n        \"A close constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintAddress,\n        \"An address constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintZero,\n        \"Expected zero account discriminant\"\n    ],\n    [\n        LangErrorCode.ConstraintTokenMint,\n        \"A token mint constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintTokenOwner,\n        \"A token owner constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintMintAuthority,\n        \"A mint mint authority constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintFreezeAuthority,\n        \"A mint freeze authority constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintDecimals,\n        \"A mint decimals constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintSpace,\n        \"A space constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintAccountIsNone,\n        \"A required account for the constraint is None\"\n    ],\n    // Require.\n    [\n        LangErrorCode.RequireViolated,\n        \"A require expression was violated\"\n    ],\n    [\n        LangErrorCode.RequireEqViolated,\n        \"A require_eq expression was violated\"\n    ],\n    [\n        LangErrorCode.RequireKeysEqViolated,\n        \"A require_keys_eq expression was violated\"\n    ],\n    [\n        LangErrorCode.RequireNeqViolated,\n        \"A require_neq expression was violated\"\n    ],\n    [\n        LangErrorCode.RequireKeysNeqViolated,\n        \"A require_keys_neq expression was violated\"\n    ],\n    [\n        LangErrorCode.RequireGtViolated,\n        \"A require_gt expression was violated\"\n    ],\n    [\n        LangErrorCode.RequireGteViolated,\n        \"A require_gte expression was violated\"\n    ],\n    // Accounts.\n    [\n        LangErrorCode.AccountDiscriminatorAlreadySet,\n        \"The account discriminator was already set on this account\"\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorNotFound,\n        \"No 8 byte discriminator was found on the account\"\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorMismatch,\n        \"8 byte discriminator did not match what was expected\"\n    ],\n    [\n        LangErrorCode.AccountDidNotDeserialize,\n        \"Failed to deserialize the account\"\n    ],\n    [\n        LangErrorCode.AccountDidNotSerialize,\n        \"Failed to serialize the account\"\n    ],\n    [\n        LangErrorCode.AccountNotEnoughKeys,\n        \"Not enough account keys given to the instruction\"\n    ],\n    [\n        LangErrorCode.AccountNotMutable,\n        \"The given account is not mutable\"\n    ],\n    [\n        LangErrorCode.AccountOwnedByWrongProgram,\n        \"The given account is owned by a different program than expected\"\n    ],\n    [\n        LangErrorCode.InvalidProgramId,\n        \"Program ID was not as expected\"\n    ],\n    [\n        LangErrorCode.InvalidProgramExecutable,\n        \"Program account is not executable\"\n    ],\n    [\n        LangErrorCode.AccountNotSigner,\n        \"The given account did not sign\"\n    ],\n    [\n        LangErrorCode.AccountNotSystemOwned,\n        \"The given account is not owned by the system program\"\n    ],\n    [\n        LangErrorCode.AccountNotInitialized,\n        \"The program expected this account to be already initialized\"\n    ],\n    [\n        LangErrorCode.AccountNotProgramData,\n        \"The given account is not a program data account\"\n    ],\n    [\n        LangErrorCode.AccountNotAssociatedTokenAccount,\n        \"The given account is not the associated token account\"\n    ],\n    [\n        LangErrorCode.AccountSysvarMismatch,\n        \"The given public key does not match the required sysvar\"\n    ],\n    [\n        LangErrorCode.AccountReallocExceedsLimit,\n        \"The account reallocation exceeds the MAX_PERMITTED_DATA_INCREASE limit\"\n    ],\n    [\n        LangErrorCode.AccountDuplicateReallocs,\n        \"The account was duplicated for more than one reallocation\"\n    ],\n    // State.\n    [\n        LangErrorCode.StateInvalidAddress,\n        \"The given state account does not have the correct address\"\n    ],\n    // Miscellaneous\n    [\n        LangErrorCode.DeclaredProgramIdMismatch,\n        \"The declared program id does not match the actual program id\"\n    ],\n    // Deprecated\n    [\n        LangErrorCode.Deprecated,\n        \"The API being used is deprecated and should no longer be used\"\n    ]\n]); //# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/idl.js":
/*!************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/idl.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeIdlAccount: () => (/* binding */ decodeIdlAccount),\n/* harmony export */   encodeIdlAccount: () => (/* binding */ encodeIdlAccount),\n/* harmony export */   idlAddress: () => (/* binding */ idlAddress),\n/* harmony export */   isIdlAccounts: () => (/* binding */ isIdlAccounts),\n/* harmony export */   seed: () => (/* binding */ seed)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @coral-xyz/borsh */ \"(ssr)/./node_modules/@coral-xyz/borsh/dist/index.js\");\n\n\n\nfunction isIdlAccounts(accountItem) {\n    return \"accounts\" in accountItem;\n}\n// Deterministic IDL address as a function of the program id.\nasync function idlAddress(programId) {\n    const base = (await _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey.findProgramAddress([], programId))[0];\n    return await _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey.createWithSeed(base, seed(), programId);\n}\n// Seed for generating the idlAddress.\nfunction seed() {\n    return \"anchor:idl\";\n}\nconst IDL_ACCOUNT_LAYOUT = _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_2__.struct([\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_2__.publicKey(\"authority\"),\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_2__.vecU8(\"data\")\n]);\nfunction decodeIdlAccount(data) {\n    return IDL_ACCOUNT_LAYOUT.decode(data);\n}\nfunction encodeIdlAccount(acc) {\n    const buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = IDL_ACCOUNT_LAYOUT.encode(acc, buffer);\n    return buffer.slice(0, len);\n} //# sourceMappingURL=idl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2lkbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBZ0M7QUFDWTtBQUNGO0FBQ25DLFNBQVNHLGNBQWNDLFdBQVc7SUFDckMsT0FBTyxjQUFjQTtBQUN6QjtBQUNBLDZEQUE2RDtBQUN0RCxlQUFlQyxXQUFXQyxTQUFTO0lBQ3RDLE1BQU1DLE9BQU8sQ0FBQyxNQUFNTixzREFBU0EsQ0FBQ08sa0JBQWtCLENBQUMsRUFBRSxFQUFFRixVQUFTLENBQUUsQ0FBQyxFQUFFO0lBQ25FLE9BQU8sTUFBTUwsc0RBQVNBLENBQUNRLGNBQWMsQ0FBQ0YsTUFBTUcsUUFBUUo7QUFDeEQ7QUFDQSxzQ0FBc0M7QUFDL0IsU0FBU0k7SUFDWixPQUFPO0FBQ1g7QUFDQSxNQUFNQyxxQkFBcUJULG9EQUFZLENBQUM7SUFDcENBLHVEQUFlLENBQUM7SUFDaEJBLG1EQUFXLENBQUM7Q0FDZjtBQUNNLFNBQVNhLGlCQUFpQkMsSUFBSTtJQUNqQyxPQUFPTCxtQkFBbUJNLE1BQU0sQ0FBQ0Q7QUFDckM7QUFDTyxTQUFTRSxpQkFBaUJDLEdBQUc7SUFDaEMsTUFBTUMsU0FBU3BCLDBDQUFNQSxDQUFDcUIsS0FBSyxDQUFDLE9BQU8sOEJBQThCO0lBQ2pFLE1BQU1DLE1BQU1YLG1CQUFtQlksTUFBTSxDQUFDSixLQUFLQztJQUMzQyxPQUFPQSxPQUFPSSxLQUFLLENBQUMsR0FBR0Y7QUFDM0IsRUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2lkbC5qcz9kYmZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcbmltcG9ydCB7IFB1YmxpY0tleSB9IGZyb20gXCJAc29sYW5hL3dlYjMuanNcIjtcbmltcG9ydCAqIGFzIGJvcnNoIGZyb20gXCJAY29yYWwteHl6L2JvcnNoXCI7XG5leHBvcnQgZnVuY3Rpb24gaXNJZGxBY2NvdW50cyhhY2NvdW50SXRlbSkge1xuICAgIHJldHVybiBcImFjY291bnRzXCIgaW4gYWNjb3VudEl0ZW07XG59XG4vLyBEZXRlcm1pbmlzdGljIElETCBhZGRyZXNzIGFzIGEgZnVuY3Rpb24gb2YgdGhlIHByb2dyYW0gaWQuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaWRsQWRkcmVzcyhwcm9ncmFtSWQpIHtcbiAgICBjb25zdCBiYXNlID0gKGF3YWl0IFB1YmxpY0tleS5maW5kUHJvZ3JhbUFkZHJlc3MoW10sIHByb2dyYW1JZCkpWzBdO1xuICAgIHJldHVybiBhd2FpdCBQdWJsaWNLZXkuY3JlYXRlV2l0aFNlZWQoYmFzZSwgc2VlZCgpLCBwcm9ncmFtSWQpO1xufVxuLy8gU2VlZCBmb3IgZ2VuZXJhdGluZyB0aGUgaWRsQWRkcmVzcy5cbmV4cG9ydCBmdW5jdGlvbiBzZWVkKCkge1xuICAgIHJldHVybiBcImFuY2hvcjppZGxcIjtcbn1cbmNvbnN0IElETF9BQ0NPVU5UX0xBWU9VVCA9IGJvcnNoLnN0cnVjdChbXG4gICAgYm9yc2gucHVibGljS2V5KFwiYXV0aG9yaXR5XCIpLFxuICAgIGJvcnNoLnZlY1U4KFwiZGF0YVwiKSxcbl0pO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUlkbEFjY291bnQoZGF0YSkge1xuICAgIHJldHVybiBJRExfQUNDT1VOVF9MQVlPVVQuZGVjb2RlKGRhdGEpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUlkbEFjY291bnQoYWNjKSB7XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jKDEwMDApOyAvLyBUT0RPOiB1c2UgYSB0aWdodGVyIGJ1ZmZlci5cbiAgICBjb25zdCBsZW4gPSBJRExfQUNDT1VOVF9MQVlPVVQuZW5jb2RlKGFjYywgYnVmZmVyKTtcbiAgICByZXR1cm4gYnVmZmVyLnNsaWNlKDAsIGxlbik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pZGwuanMubWFwIl0sIm5hbWVzIjpbIkJ1ZmZlciIsIlB1YmxpY0tleSIsImJvcnNoIiwiaXNJZGxBY2NvdW50cyIsImFjY291bnRJdGVtIiwiaWRsQWRkcmVzcyIsInByb2dyYW1JZCIsImJhc2UiLCJmaW5kUHJvZ3JhbUFkZHJlc3MiLCJjcmVhdGVXaXRoU2VlZCIsInNlZWQiLCJJRExfQUNDT1VOVF9MQVlPVVQiLCJzdHJ1Y3QiLCJwdWJsaWNLZXkiLCJ2ZWNVOCIsImRlY29kZUlkbEFjY291bnQiLCJkYXRhIiwiZGVjb2RlIiwiZW5jb2RlSWRsQWNjb3VudCIsImFjYyIsImJ1ZmZlciIsImFsbG9jIiwibGVuIiwiZW5jb2RlIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/idl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACCOUNT_DISCRIMINATOR_SIZE: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.ACCOUNT_DISCRIMINATOR_SIZE),\n/* harmony export */   AccountClient: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.AccountClient),\n/* harmony export */   AnchorError: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.AnchorError),\n/* harmony export */   AnchorProvider: () => (/* reexport safe */ _provider_js__WEBPACK_IMPORTED_MODULE_4__.AnchorProvider),\n/* harmony export */   BN: () => (/* reexport default from dynamic */ bn_js__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   BorshAccountsCoder: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.BorshAccountsCoder),\n/* harmony export */   BorshCoder: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.BorshCoder),\n/* harmony export */   BorshEventCoder: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.BorshEventCoder),\n/* harmony export */   BorshInstructionCoder: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.BorshInstructionCoder),\n/* harmony export */   BorshStateCoder: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.BorshStateCoder),\n/* harmony export */   EventManager: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.EventManager),\n/* harmony export */   EventParser: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.EventParser),\n/* harmony export */   IdlError: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.IdlError),\n/* harmony export */   LangErrorCode: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.LangErrorCode),\n/* harmony export */   LangErrorMessage: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.LangErrorMessage),\n/* harmony export */   MethodsBuilderFactory: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.MethodsBuilderFactory),\n/* harmony export */   Native: () => (/* reexport safe */ _native_index_js__WEBPACK_IMPORTED_MODULE_9__.Native),\n/* harmony export */   Program: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.Program),\n/* harmony export */   ProgramError: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.ProgramError),\n/* harmony export */   ProgramErrorStack: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.ProgramErrorStack),\n/* harmony export */   StateClient: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.StateClient),\n/* harmony export */   SystemCoder: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.SystemCoder),\n/* harmony export */   eventDiscriminator: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.eventDiscriminator),\n/* harmony export */   getProvider: () => (/* reexport safe */ _provider_js__WEBPACK_IMPORTED_MODULE_4__.getProvider),\n/* harmony export */   parseIdlErrors: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.parseIdlErrors),\n/* harmony export */   setProvider: () => (/* reexport safe */ _provider_js__WEBPACK_IMPORTED_MODULE_4__.setProvider),\n/* harmony export */   splitArgsAndCtx: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.splitArgsAndCtx),\n/* harmony export */   stateDiscriminator: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.stateDiscriminator),\n/* harmony export */   toInstruction: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.toInstruction),\n/* harmony export */   translateAddress: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.translateAddress),\n/* harmony export */   translateError: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.translateError),\n/* harmony export */   utils: () => (/* reexport module object */ _utils_index_js__WEBPACK_IMPORTED_MODULE_7__),\n/* harmony export */   validateAccounts: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.validateAccounts),\n/* harmony export */   web3: () => (/* reexport module object */ _solana_web3_js__WEBPACK_IMPORTED_MODULE_3__)\n/* harmony export */ });\n/* harmony import */ var _nodewallet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nodewallet */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/nodewallet.js\");\n/* harmony import */ var _utils_common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/common.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./provider.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/provider.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./error.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/error.js\");\n/* harmony import */ var _coder_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./coder/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/index.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/index.js\");\n/* harmony import */ var _program_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./program/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/index.js\");\n/* harmony import */ var _native_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./native/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/native/index.js\");\n\n\n\n\n\n\n\n\n\n\nif (!_utils_common_js__WEBPACK_IMPORTED_MODULE_1__.isBrowser) {\n    exports.workspace = (__webpack_require__(/*! ./workspace.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/workspace.js\")[\"default\"]);\n    exports.Wallet = (__webpack_require__(/*! ./nodewallet.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/nodewallet.js\")[\"default\"]);\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFzQztBQUNRO0FBQ1I7QUFDRTtBQUNrQztBQUMvQztBQUNNO0FBQ1M7QUFDUDtBQUNEO0FBQ2xDLElBQUksQ0FBQ0MsdURBQVNBLEVBQUU7SUFDWlEsUUFBUUMsU0FBUyxHQUFHQywwSEFBaUM7SUFDckRGLFFBQVFHLE1BQU0sR0FBR0QsNEhBQWtDO0FBQ3ZELEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL0Bwcm9qZWN0LXNlcnVtL2FuY2hvci9kaXN0L2VzbS9pbmRleC5qcz9kMjkyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBOb2RlV2FsbGV0IGZyb20gXCIuL25vZGV3YWxsZXRcIjtcbmltcG9ydCB7IGlzQnJvd3NlciB9IGZyb20gXCIuL3V0aWxzL2NvbW1vbi5qc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBCTiB9IGZyb20gXCJibi5qc1wiO1xuZXhwb3J0ICogYXMgd2ViMyBmcm9tIFwiQHNvbGFuYS93ZWIzLmpzXCI7XG5leHBvcnQgeyBnZXRQcm92aWRlciwgc2V0UHJvdmlkZXIsIEFuY2hvclByb3ZpZGVyLCB9IGZyb20gXCIuL3Byb3ZpZGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9lcnJvci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29kZXIvaW5kZXguanNcIjtcbmV4cG9ydCAqIGFzIHV0aWxzIGZyb20gXCIuL3V0aWxzL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wcm9ncmFtL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9uYXRpdmUvaW5kZXguanNcIjtcbmlmICghaXNCcm93c2VyKSB7XG4gICAgZXhwb3J0cy53b3Jrc3BhY2UgPSByZXF1aXJlKFwiLi93b3Jrc3BhY2UuanNcIikuZGVmYXVsdDtcbiAgICBleHBvcnRzLldhbGxldCA9IHJlcXVpcmUoXCIuL25vZGV3YWxsZXQuanNcIikuZGVmYXVsdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJOb2RlV2FsbGV0IiwiaXNCcm93c2VyIiwiZGVmYXVsdCIsIkJOIiwid2ViMyIsImdldFByb3ZpZGVyIiwic2V0UHJvdmlkZXIiLCJBbmNob3JQcm92aWRlciIsInV0aWxzIiwiZXhwb3J0cyIsIndvcmtzcGFjZSIsInJlcXVpcmUiLCJXYWxsZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/native/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/native/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Native: () => (/* binding */ Native)\n/* harmony export */ });\n/* harmony import */ var _system_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./system.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/native/system.js\");\n\nclass Native {\n    static system(provider) {\n        return (0,_system_js__WEBPACK_IMPORTED_MODULE_0__.program)(provider);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL25hdGl2ZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RDtBQUNoRCxNQUFNRTtJQUNULE9BQU9DLE9BQU9DLFFBQVEsRUFBRTtRQUNwQixPQUFPSCxtREFBYUEsQ0FBQ0c7SUFDekI7QUFDSixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9AcHJvamVjdC1zZXJ1bS9hbmNob3IvZGlzdC9lc20vbmF0aXZlL2luZGV4LmpzPzk5NmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJvZ3JhbSBhcyBzeXN0ZW1Qcm9ncmFtIH0gZnJvbSBcIi4vc3lzdGVtLmpzXCI7XG5leHBvcnQgY2xhc3MgTmF0aXZlIHtcbiAgICBzdGF0aWMgc3lzdGVtKHByb3ZpZGVyKSB7XG4gICAgICAgIHJldHVybiBzeXN0ZW1Qcm9ncmFtKHByb3ZpZGVyKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsicHJvZ3JhbSIsInN5c3RlbVByb2dyYW0iLCJOYXRpdmUiLCJzeXN0ZW0iLCJwcm92aWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/native/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/native/system.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/native/system.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IDL: () => (/* binding */ IDL),\n/* harmony export */   coder: () => (/* binding */ coder),\n/* harmony export */   program: () => (/* binding */ program)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _program_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../program/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/index.js\");\n/* harmony import */ var _coder_system_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../coder/system/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/system/index.js\");\n\n\n\nconst SYSTEM_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(\"11111111111111111111111111111111\");\nfunction program(provider) {\n    return new _program_index_js__WEBPACK_IMPORTED_MODULE_1__.Program(IDL, SYSTEM_PROGRAM_ID, provider, coder());\n}\nfunction coder() {\n    return new _coder_system_index_js__WEBPACK_IMPORTED_MODULE_2__.SystemCoder(IDL);\n}\nconst IDL = {\n    version: \"0.1.0\",\n    name: \"system_program\",\n    instructions: [\n        {\n            name: \"createAccount\",\n            accounts: [\n                {\n                    name: \"from\",\n                    isMut: true,\n                    isSigner: true\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: true\n                }\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\"\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\"\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\"\n                }\n            ]\n        },\n        {\n            name: \"assign\",\n            accounts: [\n                {\n                    name: \"pubkey\",\n                    isMut: true,\n                    isSigner: true\n                }\n            ],\n            args: [\n                {\n                    name: \"owner\",\n                    type: \"publicKey\"\n                }\n            ]\n        },\n        {\n            name: \"transfer\",\n            accounts: [\n                {\n                    name: \"from\",\n                    isMut: true,\n                    isSigner: true\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: false\n                }\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\"\n                }\n            ]\n        },\n        {\n            name: \"createAccountWithSeed\",\n            accounts: [\n                {\n                    name: \"from\",\n                    isMut: true,\n                    isSigner: true\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: false\n                },\n                {\n                    name: \"base\",\n                    isMut: false,\n                    isSigner: true\n                }\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"publicKey\"\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\"\n                },\n                {\n                    name: \"lamports\",\n                    type: \"u64\"\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\"\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\"\n                }\n            ]\n        },\n        {\n            name: \"advanceNonceAccount\",\n            accounts: [\n                {\n                    name: \"nonce\",\n                    isMut: true,\n                    isSigner: false\n                },\n                {\n                    name: \"recentBlockhashes\",\n                    isMut: false,\n                    isSigner: false\n                },\n                {\n                    name: \"authorized\",\n                    isMut: false,\n                    isSigner: true\n                }\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"publicKey\"\n                }\n            ]\n        },\n        {\n            name: \"withdrawNonceAccount\",\n            accounts: [\n                {\n                    name: \"nonce\",\n                    isMut: true,\n                    isSigner: false\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: false\n                },\n                {\n                    name: \"recentBlockhashes\",\n                    isMut: false,\n                    isSigner: false\n                },\n                {\n                    name: \"rent\",\n                    isMut: false,\n                    isSigner: false\n                },\n                {\n                    name: \"authorized\",\n                    isMut: false,\n                    isSigner: true\n                }\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\"\n                }\n            ]\n        },\n        {\n            name: \"initializeNonceAccount\",\n            accounts: [\n                {\n                    name: \"nonce\",\n                    isMut: true,\n                    isSigner: true\n                },\n                {\n                    name: \"recentBlockhashes\",\n                    isMut: false,\n                    isSigner: false\n                },\n                {\n                    name: \"rent\",\n                    isMut: false,\n                    isSigner: false\n                }\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"publicKey\"\n                }\n            ]\n        },\n        {\n            name: \"authorizeNonceAccount\",\n            accounts: [\n                {\n                    name: \"nonce\",\n                    isMut: true,\n                    isSigner: false\n                },\n                {\n                    name: \"authorized\",\n                    isMut: false,\n                    isSigner: true\n                }\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"publicKey\"\n                }\n            ]\n        },\n        {\n            name: \"allocate\",\n            accounts: [\n                {\n                    name: \"pubkey\",\n                    isMut: true,\n                    isSigner: true\n                }\n            ],\n            args: [\n                {\n                    name: \"space\",\n                    type: \"u64\"\n                }\n            ]\n        },\n        {\n            name: \"allocateWithSeed\",\n            accounts: [\n                {\n                    name: \"account\",\n                    isMut: true,\n                    isSigner: false\n                },\n                {\n                    name: \"base\",\n                    isMut: false,\n                    isSigner: true\n                }\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"publicKey\"\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\"\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\"\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\"\n                }\n            ]\n        },\n        {\n            name: \"assignWithSeed\",\n            accounts: [\n                {\n                    name: \"account\",\n                    isMut: true,\n                    isSigner: false\n                },\n                {\n                    name: \"base\",\n                    isMut: false,\n                    isSigner: true\n                }\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"publicKey\"\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\"\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\"\n                }\n            ]\n        },\n        {\n            name: \"transferWithSeed\",\n            accounts: [\n                {\n                    name: \"from\",\n                    isMut: true,\n                    isSigner: false\n                },\n                {\n                    name: \"base\",\n                    isMut: false,\n                    isSigner: true\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: false\n                }\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\"\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\"\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\"\n                }\n            ]\n        }\n    ],\n    accounts: [\n        {\n            name: \"nonce\",\n            type: {\n                kind: \"struct\",\n                fields: [\n                    {\n                        name: \"version\",\n                        type: \"u32\"\n                    },\n                    {\n                        name: \"state\",\n                        type: \"u32\"\n                    },\n                    {\n                        name: \"authorizedPubkey\",\n                        type: \"publicKey\"\n                    },\n                    {\n                        name: \"nonce\",\n                        type: \"publicKey\"\n                    },\n                    {\n                        name: \"feeCalculator\",\n                        type: {\n                            defined: \"FeeCalculator\"\n                        }\n                    }\n                ]\n            }\n        }\n    ],\n    types: [\n        {\n            name: \"FeeCalculator\",\n            type: {\n                kind: \"struct\",\n                fields: [\n                    {\n                        name: \"lamportsPerSignature\",\n                        type: \"u64\"\n                    }\n                ]\n            }\n        }\n    ]\n}; //# sourceMappingURL=system.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/native/system.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/nodewallet.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/nodewallet.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NodeWallet)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n\n\n/**\n * Node only wallet.\n */ class NodeWallet {\n    constructor(payer){\n        this.payer = payer;\n    }\n    static local() {\n        const process = __webpack_require__(/*! process */ \"process\");\n        if (!process.env.ANCHOR_WALLET || process.env.ANCHOR_WALLET === \"\") {\n            throw new Error(\"expected environment variable `ANCHOR_WALLET` is not set.\");\n        }\n        const payer = _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.Keypair.fromSecretKey(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(JSON.parse((__webpack_require__(/*! fs */ \"fs\").readFileSync)(process.env.ANCHOR_WALLET, {\n            encoding: \"utf-8\"\n        }))));\n        return new NodeWallet(payer);\n    }\n    async signTransaction(tx) {\n        tx.partialSign(this.payer);\n        return tx;\n    }\n    async signAllTransactions(txs) {\n        return txs.map((t)=>{\n            t.partialSign(this.payer);\n            return t;\n        });\n    }\n    get publicKey() {\n        return this.payer.publicKey;\n    }\n} //# sourceMappingURL=nodewallet.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL25vZGV3YWxsZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUNVO0FBQzFDOztDQUVDLEdBQ2MsTUFBTUU7SUFDakJDLFlBQVlDLEtBQUssQ0FBRTtRQUNmLElBQUksQ0FBQ0EsS0FBSyxHQUFHQTtJQUNqQjtJQUNBLE9BQU9DLFFBQVE7UUFDWCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyx3QkFBUztRQUNqQyxJQUFJLENBQUNELFFBQVFFLEdBQUcsQ0FBQ0MsYUFBYSxJQUFJSCxRQUFRRSxHQUFHLENBQUNDLGFBQWEsS0FBSyxJQUFJO1lBQ2hFLE1BQU0sSUFBSUMsTUFBTTtRQUNwQjtRQUNBLE1BQU1OLFFBQVFILG9EQUFPQSxDQUFDVSxhQUFhLENBQUNYLDBDQUFNQSxDQUFDWSxJQUFJLENBQUNDLEtBQUtDLEtBQUssQ0FBQ1Asa0RBQTBCLENBQUNELFFBQVFFLEdBQUcsQ0FBQ0MsYUFBYSxFQUFFO1lBQzdHTyxVQUFVO1FBQ2Q7UUFDQSxPQUFPLElBQUlkLFdBQVdFO0lBQzFCO0lBQ0EsTUFBTWEsZ0JBQWdCQyxFQUFFLEVBQUU7UUFDdEJBLEdBQUdDLFdBQVcsQ0FBQyxJQUFJLENBQUNmLEtBQUs7UUFDekIsT0FBT2M7SUFDWDtJQUNBLE1BQU1FLG9CQUFvQkMsR0FBRyxFQUFFO1FBQzNCLE9BQU9BLElBQUlDLEdBQUcsQ0FBQyxDQUFDQztZQUNaQSxFQUFFSixXQUFXLENBQUMsSUFBSSxDQUFDZixLQUFLO1lBQ3hCLE9BQU9tQjtRQUNYO0lBQ0o7SUFDQSxJQUFJQyxZQUFZO1FBQ1osT0FBTyxJQUFJLENBQUNwQixLQUFLLENBQUNvQixTQUFTO0lBQy9CO0FBQ0osRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL25vZGV3YWxsZXQuanM/NDYxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdWZmZXIgfSBmcm9tIFwiYnVmZmVyXCI7XG5pbXBvcnQgeyBLZXlwYWlyIH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiO1xuLyoqXG4gKiBOb2RlIG9ubHkgd2FsbGV0LlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOb2RlV2FsbGV0IHtcbiAgICBjb25zdHJ1Y3RvcihwYXllcikge1xuICAgICAgICB0aGlzLnBheWVyID0gcGF5ZXI7XG4gICAgfVxuICAgIHN0YXRpYyBsb2NhbCgpIHtcbiAgICAgICAgY29uc3QgcHJvY2VzcyA9IHJlcXVpcmUoXCJwcm9jZXNzXCIpO1xuICAgICAgICBpZiAoIXByb2Nlc3MuZW52LkFOQ0hPUl9XQUxMRVQgfHwgcHJvY2Vzcy5lbnYuQU5DSE9SX1dBTExFVCA9PT0gXCJcIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZXhwZWN0ZWQgZW52aXJvbm1lbnQgdmFyaWFibGUgYEFOQ0hPUl9XQUxMRVRgIGlzIG5vdCBzZXQuXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBheWVyID0gS2V5cGFpci5mcm9tU2VjcmV0S2V5KEJ1ZmZlci5mcm9tKEpTT04ucGFyc2UocmVxdWlyZShcImZzXCIpLnJlYWRGaWxlU3luYyhwcm9jZXNzLmVudi5BTkNIT1JfV0FMTEVULCB7XG4gICAgICAgICAgICBlbmNvZGluZzogXCJ1dGYtOFwiLFxuICAgICAgICB9KSkpKTtcbiAgICAgICAgcmV0dXJuIG5ldyBOb2RlV2FsbGV0KHBheWVyKTtcbiAgICB9XG4gICAgYXN5bmMgc2lnblRyYW5zYWN0aW9uKHR4KSB7XG4gICAgICAgIHR4LnBhcnRpYWxTaWduKHRoaXMucGF5ZXIpO1xuICAgICAgICByZXR1cm4gdHg7XG4gICAgfVxuICAgIGFzeW5jIHNpZ25BbGxUcmFuc2FjdGlvbnModHhzKSB7XG4gICAgICAgIHJldHVybiB0eHMubWFwKCh0KSA9PiB7XG4gICAgICAgICAgICB0LnBhcnRpYWxTaWduKHRoaXMucGF5ZXIpO1xuICAgICAgICAgICAgcmV0dXJuIHQ7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXQgcHVibGljS2V5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXllci5wdWJsaWNLZXk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZXdhbGxldC5qcy5tYXAiXSwibmFtZXMiOlsiQnVmZmVyIiwiS2V5cGFpciIsIk5vZGVXYWxsZXQiLCJjb25zdHJ1Y3RvciIsInBheWVyIiwibG9jYWwiLCJwcm9jZXNzIiwicmVxdWlyZSIsImVudiIsIkFOQ0hPUl9XQUxMRVQiLCJFcnJvciIsImZyb21TZWNyZXRLZXkiLCJmcm9tIiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiZW5jb2RpbmciLCJzaWduVHJhbnNhY3Rpb24iLCJ0eCIsInBhcnRpYWxTaWduIiwic2lnbkFsbFRyYW5zYWN0aW9ucyIsInR4cyIsIm1hcCIsInQiLCJwdWJsaWNLZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/nodewallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/accounts-resolver.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/accounts-resolver.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountStore: () => (/* binding */ AccountStore),\n/* harmony export */   AccountsResolver: () => (/* binding */ AccountsResolver),\n/* harmony export */   isAccountsGeneric: () => (/* binding */ isAccountsGeneric)\n/* harmony export */ });\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! camelcase */ \"(ssr)/./node_modules/camelcase/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(camelcase__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../idl.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/idl.js\");\n/* harmony import */ var _utils_bytes_utf8_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/bytes/utf8.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/utf8.js\");\n/* harmony import */ var _utils_token_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/token.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/token.js\");\n/* harmony import */ var _token_account_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./token-account-layout */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/token-account-layout.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/index.js\");\n/* harmony import */ var _namespace_methods__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./namespace/methods */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/methods.js\");\n\n\n\n\n\n\n\n\nfunction isAccountsGeneric(accounts) {\n    return !(accounts instanceof _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey);\n}\n// Populates a given accounts context with PDAs and common missing accounts.\nclass AccountsResolver {\n    constructor(_args, _accounts, _provider, _programId, _idlIx, _accountNamespace, _idlTypes, _customResolver){\n        this._accounts = _accounts;\n        this._provider = _provider;\n        this._programId = _programId;\n        this._idlIx = _idlIx;\n        this._idlTypes = _idlTypes;\n        this._customResolver = _customResolver;\n        this._args = _args;\n        this._accountStore = new AccountStore(_provider, _accountNamespace, this._programId);\n    }\n    args(_args) {\n        this._args = _args;\n    }\n    // Note: We serially resolve PDAs one by one rather than doing them\n    //       in parallel because there can be dependencies between\n    //       addresses. That is, one PDA can be used as a seed in another.\n    async resolve() {\n        await this.resolveConst(this._idlIx.accounts);\n        // Auto populate pdas and relations until we stop finding new accounts\n        while(await this.resolvePdas(this._idlIx.accounts) + await this.resolveRelations(this._idlIx.accounts) + await this.resolveCustom() > 0){}\n    }\n    async resolveCustom() {\n        if (this._customResolver) {\n            const { accounts, resolved } = await this._customResolver({\n                args: this._args,\n                accounts: this._accounts,\n                provider: this._provider,\n                programId: this._programId,\n                idlIx: this._idlIx\n            });\n            this._accounts = accounts;\n            return resolved;\n        }\n        return 0;\n    }\n    resolveOptionalsHelper(partialAccounts, accountItems) {\n        const nestedAccountsGeneric = {};\n        // Looping through accountItem array instead of on partialAccounts, so\n        // we only traverse array once\n        for (const accountItem of accountItems){\n            const accountName = accountItem.name;\n            const partialAccount = partialAccounts[accountName];\n            // Skip if the account isn't included (thus would be undefined)\n            if (partialAccount === undefined) continue;\n            if ((0,_namespace_methods__WEBPACK_IMPORTED_MODULE_7__.isPartialAccounts)(partialAccount)) {\n                // is compound accounts, recurse one level deeper\n                if ((0,_idl_js__WEBPACK_IMPORTED_MODULE_2__.isIdlAccounts)(accountItem)) {\n                    nestedAccountsGeneric[accountName] = this.resolveOptionalsHelper(partialAccount, accountItem[\"accounts\"]);\n                } else {\n                    // Here we try our best to recover gracefully. If there are optionals we can't check, we will fail then.\n                    nestedAccountsGeneric[accountName] = (0,_namespace_methods__WEBPACK_IMPORTED_MODULE_7__.flattenPartialAccounts)(partialAccount, true);\n                }\n            } else {\n                // if not compound accounts, do null/optional check and proceed\n                if (partialAccount !== null) {\n                    nestedAccountsGeneric[accountName] = (0,_index_js__WEBPACK_IMPORTED_MODULE_6__.translateAddress)(partialAccount);\n                } else if (accountItem[\"isOptional\"]) {\n                    nestedAccountsGeneric[accountName] = this._programId;\n                }\n            }\n        }\n        return nestedAccountsGeneric;\n    }\n    resolveOptionals(accounts) {\n        Object.assign(this._accounts, this.resolveOptionalsHelper(accounts, this._idlIx.accounts));\n    }\n    get(path) {\n        // Only return if pubkey\n        const ret = path.reduce((acc, subPath)=>acc && acc[subPath], this._accounts);\n        if (ret && ret.toBase58) {\n            return ret;\n        }\n    }\n    set(path, value) {\n        let curr = this._accounts;\n        path.forEach((p, idx)=>{\n            const isLast = idx == path.length - 1;\n            if (isLast) {\n                curr[p] = value;\n            }\n            curr[p] = curr[p] || {};\n            curr = curr[p];\n        });\n    }\n    async resolveConst(accounts, path = []) {\n        for(let k = 0; k < accounts.length; k += 1){\n            const accountDescOrAccounts = accounts[k];\n            const subAccounts = accountDescOrAccounts.accounts;\n            if (subAccounts) {\n                await this.resolveConst(subAccounts, [\n                    ...path,\n                    camelcase__WEBPACK_IMPORTED_MODULE_0___default()(accountDescOrAccounts.name)\n                ]);\n            }\n            const accountDesc = accountDescOrAccounts;\n            const accountDescName = camelcase__WEBPACK_IMPORTED_MODULE_0___default()(accountDescOrAccounts.name);\n            // Signers default to the provider.\n            if (accountDesc.isSigner && !this.get([\n                ...path,\n                accountDescName\n            ])) {\n                // @ts-expect-error\n                if (this._provider.wallet === undefined) {\n                    throw new Error(\"This function requires the Provider interface implementor to have a 'wallet' field.\");\n                }\n                // @ts-expect-error\n                this.set([\n                    ...path,\n                    accountDescName\n                ], this._provider.wallet.publicKey);\n            }\n            // Common accounts are auto populated with magic names by convention.\n            if (Reflect.has(AccountsResolver.CONST_ACCOUNTS, accountDescName) && !this.get([\n                ...path,\n                accountDescName\n            ])) {\n                this.set([\n                    ...path,\n                    accountDescName\n                ], AccountsResolver.CONST_ACCOUNTS[accountDescName]);\n            }\n        }\n    }\n    async resolvePdas(accounts, path = []) {\n        let found = 0;\n        for(let k = 0; k < accounts.length; k += 1){\n            const accountDesc = accounts[k];\n            const subAccounts = accountDesc.accounts;\n            if (subAccounts) {\n                found += await this.resolvePdas(subAccounts, [\n                    ...path,\n                    camelcase__WEBPACK_IMPORTED_MODULE_0___default()(accountDesc.name)\n                ]);\n            }\n            const accountDescCasted = accountDesc;\n            const accountDescName = camelcase__WEBPACK_IMPORTED_MODULE_0___default()(accountDesc.name);\n            // PDA derived from IDL seeds.\n            if (accountDescCasted.pda && accountDescCasted.pda.seeds.length > 0 && !this.get([\n                ...path,\n                accountDescName\n            ])) {\n                if (Boolean(await this.autoPopulatePda(accountDescCasted, path))) {\n                    found += 1;\n                }\n            }\n        }\n        return found;\n    }\n    async resolveRelations(accounts, path = []) {\n        let found = 0;\n        for(let k = 0; k < accounts.length; k += 1){\n            const accountDesc = accounts[k];\n            const subAccounts = accountDesc.accounts;\n            if (subAccounts) {\n                found += await this.resolveRelations(subAccounts, [\n                    ...path,\n                    camelcase__WEBPACK_IMPORTED_MODULE_0___default()(accountDesc.name)\n                ]);\n            }\n            const relations = accountDesc.relations || [];\n            const accountDescName = camelcase__WEBPACK_IMPORTED_MODULE_0___default()(accountDesc.name);\n            const newPath = [\n                ...path,\n                accountDescName\n            ];\n            // If we have this account and there's some missing accounts that are relations to this account, fetch them\n            const accountKey = this.get(newPath);\n            if (accountKey) {\n                const matching = relations.filter((rel)=>!this.get([\n                        ...path,\n                        camelcase__WEBPACK_IMPORTED_MODULE_0___default()(rel)\n                    ]));\n                found += matching.length;\n                if (matching.length > 0) {\n                    const account = await this._accountStore.fetchAccount({\n                        publicKey: accountKey\n                    });\n                    await Promise.all(matching.map(async (rel)=>{\n                        const relName = camelcase__WEBPACK_IMPORTED_MODULE_0___default()(rel);\n                        this.set([\n                            ...path,\n                            relName\n                        ], account[relName]);\n                        return account[relName];\n                    }));\n                }\n            }\n        }\n        return found;\n    }\n    async autoPopulatePda(accountDesc, path = []) {\n        if (!accountDesc.pda || !accountDesc.pda.seeds) throw new Error(\"Must have seeds\");\n        const seeds = await Promise.all(accountDesc.pda.seeds.map((seedDesc)=>this.toBuffer(seedDesc, path)));\n        if (seeds.some((seed)=>typeof seed == \"undefined\")) {\n            return;\n        }\n        const programId = await this.parseProgramId(accountDesc, path);\n        if (!programId) {\n            return;\n        }\n        const [pubkey] = await _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey.findProgramAddress(seeds, programId);\n        this.set([\n            ...path,\n            camelcase__WEBPACK_IMPORTED_MODULE_0___default()(accountDesc.name)\n        ], pubkey);\n    }\n    async parseProgramId(accountDesc, path = []) {\n        var _a;\n        if (!((_a = accountDesc.pda) === null || _a === void 0 ? void 0 : _a.programId)) {\n            return this._programId;\n        }\n        switch(accountDesc.pda.programId.kind){\n            case \"const\":\n                return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(this.toBufferConst(accountDesc.pda.programId.value));\n            case \"arg\":\n                return this.argValue(accountDesc.pda.programId);\n            case \"account\":\n                return await this.accountValue(accountDesc.pda.programId, path);\n            default:\n                throw new Error(`Unexpected program seed kind: ${accountDesc.pda.programId.kind}`);\n        }\n    }\n    async toBuffer(seedDesc, path = []) {\n        switch(seedDesc.kind){\n            case \"const\":\n                return this.toBufferConst(seedDesc);\n            case \"arg\":\n                return await this.toBufferArg(seedDesc);\n            case \"account\":\n                return await this.toBufferAccount(seedDesc, path);\n            default:\n                throw new Error(`Unexpected seed kind: ${seedDesc.kind}`);\n        }\n    }\n    /**\n     * Recursively get the type at some path of either a primitive or a user defined struct.\n     */ getType(type, path = []) {\n        if (path.length > 0 && type.defined) {\n            const subType = this._idlTypes.find((t)=>t.name === type.defined);\n            if (!subType) {\n                throw new Error(`Cannot find type ${type.defined}`);\n            }\n            const structType = subType.type; // enum not supported yet\n            const field = structType.fields.find((field)=>field.name === path[0]);\n            return this.getType(field.type, path.slice(1));\n        }\n        return type;\n    }\n    toBufferConst(seedDesc) {\n        return this.toBufferValue(this.getType(seedDesc.type, (seedDesc.path || \"\").split(\".\").slice(1)), seedDesc.value);\n    }\n    async toBufferArg(seedDesc) {\n        const argValue = this.argValue(seedDesc);\n        if (typeof argValue === \"undefined\") {\n            return;\n        }\n        return this.toBufferValue(this.getType(seedDesc.type, (seedDesc.path || \"\").split(\".\").slice(1)), argValue);\n    }\n    argValue(seedDesc) {\n        const split = seedDesc.path.split(\".\");\n        const seedArgName = camelcase__WEBPACK_IMPORTED_MODULE_0___default()(split[0]);\n        const idlArgPosition = this._idlIx.args.findIndex((argDesc)=>argDesc.name === seedArgName);\n        if (idlArgPosition === -1) {\n            throw new Error(`Unable to find argument for seed: ${seedArgName}`);\n        }\n        return split.slice(1).reduce((curr, path)=>(curr || {})[path], this._args[idlArgPosition]);\n    }\n    async toBufferAccount(seedDesc, path = []) {\n        const accountValue = await this.accountValue(seedDesc, path);\n        if (!accountValue) {\n            return;\n        }\n        return this.toBufferValue(seedDesc.type, accountValue);\n    }\n    async accountValue(seedDesc, path = []) {\n        const pathComponents = seedDesc.path.split(\".\");\n        const fieldName = pathComponents[0];\n        const fieldPubkey = this.get([\n            ...path,\n            camelcase__WEBPACK_IMPORTED_MODULE_0___default()(fieldName)\n        ]);\n        if (fieldPubkey === null) {\n            throw new Error(`fieldPubkey is null`);\n        }\n        // The seed is a pubkey of the account.\n        if (pathComponents.length === 1) {\n            return fieldPubkey;\n        }\n        // The key is account data.\n        //\n        // Fetch and deserialize it.\n        const account = await this._accountStore.fetchAccount({\n            publicKey: fieldPubkey,\n            name: seedDesc.account\n        });\n        // Dereference all fields in the path to get the field value\n        // used in the seed.\n        const fieldValue = this.parseAccountValue(account, pathComponents.slice(1));\n        return fieldValue;\n    }\n    parseAccountValue(account, path) {\n        let accountField;\n        while(path.length > 0){\n            accountField = account[camelcase__WEBPACK_IMPORTED_MODULE_0___default()(path[0])];\n            path = path.slice(1);\n        }\n        return accountField;\n    }\n    // Converts the given idl valaue into a Buffer. The values here must be\n    // primitives. E.g. no structs.\n    //\n    // TODO: add more types here as needed.\n    toBufferValue(type, value) {\n        switch(type){\n            case \"u8\":\n                return Buffer.from([\n                    value\n                ]);\n            case \"u16\":\n                let b = Buffer.alloc(2);\n                b.writeUInt16LE(value);\n                return b;\n            case \"u32\":\n                let buf = Buffer.alloc(4);\n                buf.writeUInt32LE(value);\n                return buf;\n            case \"u64\":\n                let bU64 = Buffer.alloc(8);\n                bU64.writeBigUInt64LE(BigInt(value));\n                return bU64;\n            case \"string\":\n                return Buffer.from(_utils_bytes_utf8_js__WEBPACK_IMPORTED_MODULE_3__.encode(value));\n            case \"publicKey\":\n                return value.toBuffer();\n            default:\n                if (type.array) {\n                    return Buffer.from(value);\n                }\n                throw new Error(`Unexpected seed type: ${type}`);\n        }\n    }\n}\nAccountsResolver.CONST_ACCOUNTS = {\n    associatedTokenProgram: _utils_token_js__WEBPACK_IMPORTED_MODULE_4__.ASSOCIATED_PROGRAM_ID,\n    rent: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SYSVAR_RENT_PUBKEY,\n    systemProgram: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SystemProgram.programId,\n    tokenProgram: _utils_token_js__WEBPACK_IMPORTED_MODULE_4__.TOKEN_PROGRAM_ID,\n    clock: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SYSVAR_CLOCK_PUBKEY\n};\n// TODO: this should be configureable to avoid unnecessary requests.\nclass AccountStore {\n    // todo: don't use the progrma use the account namespace.\n    constructor(_provider, _accounts, _programId){\n        this._provider = _provider;\n        this._programId = _programId;\n        this._cache = new Map();\n        this._idls = {};\n        this._idls[_programId.toBase58()] = _accounts;\n    }\n    async ensureIdl(programId) {\n        if (!this._idls[programId.toBase58()]) {\n            const idl = await _index_js__WEBPACK_IMPORTED_MODULE_6__.Program.fetchIdl(programId, this._provider);\n            if (idl) {\n                const program = new _index_js__WEBPACK_IMPORTED_MODULE_6__.Program(idl, programId, this._provider);\n                this._idls[programId.toBase58()] = program.account;\n            }\n        }\n        return this._idls[programId.toBase58()];\n    }\n    async fetchAccount({ publicKey, name, programId = this._programId }) {\n        const address = publicKey.toString();\n        if (!this._cache.has(address)) {\n            if (name === \"TokenAccount\") {\n                const accountInfo = await this._provider.connection.getAccountInfo(publicKey);\n                if (accountInfo === null) {\n                    throw new Error(`invalid account info for ${address}`);\n                }\n                const data = (0,_token_account_layout__WEBPACK_IMPORTED_MODULE_5__.decodeTokenAccount)(accountInfo.data);\n                this._cache.set(address, data);\n            } else if (name) {\n                const accounts = await this.ensureIdl(programId);\n                if (accounts) {\n                    const accountFetcher = accounts[camelcase__WEBPACK_IMPORTED_MODULE_0___default()(name)];\n                    if (accountFetcher) {\n                        const account = await accountFetcher.fetch(publicKey);\n                        this._cache.set(address, account);\n                    }\n                }\n            } else {\n                const account = await this._provider.connection.getAccountInfo(publicKey);\n                if (account === null) {\n                    throw new Error(`invalid account info for ${address}`);\n                }\n                const data = account.data;\n                const accounts = await this.ensureIdl(account.owner);\n                if (accounts) {\n                    const firstAccountLayout = Object.values(accounts)[0];\n                    if (!firstAccountLayout) {\n                        throw new Error(\"No accounts for this program\");\n                    }\n                    const result = firstAccountLayout.coder.accounts.decodeAny(data);\n                    this._cache.set(address, result);\n                }\n            }\n        }\n        return this._cache.get(address);\n    }\n} //# sourceMappingURL=accounts-resolver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vYWNjb3VudHMtcmVzb2x2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQWtDO0FBQ21FO0FBQzFEO0FBQ0k7QUFDNkI7QUFDaEI7QUFDTDtBQUMwQjtBQUMxRSxTQUFTYyxrQkFBa0JDLFFBQVE7SUFDdEMsT0FBTyxDQUFFQSxDQUFBQSxvQkFBb0JkLHNEQUFRO0FBQ3pDO0FBQ0EsNEVBQTRFO0FBQ3JFLE1BQU1lO0lBQ1RDLFlBQVlDLEtBQUssRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQUVDLFVBQVUsRUFBRUMsTUFBTSxFQUFFQyxpQkFBaUIsRUFBRUMsU0FBUyxFQUFFQyxlQUFlLENBQUU7UUFDeEcsSUFBSSxDQUFDTixTQUFTLEdBQUdBO1FBQ2pCLElBQUksQ0FBQ0MsU0FBUyxHQUFHQTtRQUNqQixJQUFJLENBQUNDLFVBQVUsR0FBR0E7UUFDbEIsSUFBSSxDQUFDQyxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDRSxTQUFTLEdBQUdBO1FBQ2pCLElBQUksQ0FBQ0MsZUFBZSxHQUFHQTtRQUN2QixJQUFJLENBQUNQLEtBQUssR0FBR0E7UUFDYixJQUFJLENBQUNRLGFBQWEsR0FBRyxJQUFJQyxhQUFhUCxXQUFXRyxtQkFBbUIsSUFBSSxDQUFDRixVQUFVO0lBQ3ZGO0lBQ0FPLEtBQUtWLEtBQUssRUFBRTtRQUNSLElBQUksQ0FBQ0EsS0FBSyxHQUFHQTtJQUNqQjtJQUNBLG1FQUFtRTtJQUNuRSw4REFBOEQ7SUFDOUQsc0VBQXNFO0lBQ3RFLE1BQU1XLFVBQVU7UUFDWixNQUFNLElBQUksQ0FBQ0MsWUFBWSxDQUFDLElBQUksQ0FBQ1IsTUFBTSxDQUFDUCxRQUFRO1FBQzVDLHNFQUFzRTtRQUN0RSxNQUFPLE1BQU8sSUFBSSxDQUFDZ0IsV0FBVyxDQUFDLElBQUksQ0FBQ1QsTUFBTSxDQUFDUCxRQUFRLElBQzlDLE1BQU0sSUFBSSxDQUFDaUIsZ0JBQWdCLENBQUMsSUFBSSxDQUFDVixNQUFNLENBQUNQLFFBQVEsSUFDaEQsTUFBTSxJQUFJLENBQUNrQixhQUFhLEtBQ3pCLEVBQUcsQ0FBRTtJQUNiO0lBQ0EsTUFBTUEsZ0JBQWdCO1FBQ2xCLElBQUksSUFBSSxDQUFDUixlQUFlLEVBQUU7WUFDdEIsTUFBTSxFQUFFVixRQUFRLEVBQUVtQixRQUFRLEVBQUUsR0FBRyxNQUFNLElBQUksQ0FBQ1QsZUFBZSxDQUFDO2dCQUN0REcsTUFBTSxJQUFJLENBQUNWLEtBQUs7Z0JBQ2hCSCxVQUFVLElBQUksQ0FBQ0ksU0FBUztnQkFDeEJnQixVQUFVLElBQUksQ0FBQ2YsU0FBUztnQkFDeEJnQixXQUFXLElBQUksQ0FBQ2YsVUFBVTtnQkFDMUJnQixPQUFPLElBQUksQ0FBQ2YsTUFBTTtZQUN0QjtZQUNBLElBQUksQ0FBQ0gsU0FBUyxHQUFHSjtZQUNqQixPQUFPbUI7UUFDWDtRQUNBLE9BQU87SUFDWDtJQUNBSSx1QkFBdUJDLGVBQWUsRUFBRUMsWUFBWSxFQUFFO1FBQ2xELE1BQU1DLHdCQUF3QixDQUFDO1FBQy9CLHNFQUFzRTtRQUN0RSw4QkFBOEI7UUFDOUIsS0FBSyxNQUFNQyxlQUFlRixhQUFjO1lBQ3BDLE1BQU1HLGNBQWNELFlBQVlFLElBQUk7WUFDcEMsTUFBTUMsaUJBQWlCTixlQUFlLENBQUNJLFlBQVk7WUFDbkQsK0RBQStEO1lBQy9ELElBQUlFLG1CQUFtQkMsV0FDbkI7WUFDSixJQUFJakMscUVBQWlCQSxDQUFDZ0MsaUJBQWlCO2dCQUNuQyxpREFBaUQ7Z0JBQ2pELElBQUl4QyxzREFBYUEsQ0FBQ3FDLGNBQWM7b0JBQzVCRCxxQkFBcUIsQ0FBQ0UsWUFBWSxHQUFHLElBQUksQ0FBQ0wsc0JBQXNCLENBQUNPLGdCQUFnQkgsV0FBVyxDQUFDLFdBQVc7Z0JBQzVHLE9BQ0s7b0JBQ0Qsd0dBQXdHO29CQUN4R0QscUJBQXFCLENBQUNFLFlBQVksR0FBRy9CLDBFQUFzQkEsQ0FBQ2lDLGdCQUFnQjtnQkFDaEY7WUFDSixPQUNLO2dCQUNELCtEQUErRDtnQkFDL0QsSUFBSUEsbUJBQW1CLE1BQU07b0JBQ3pCSixxQkFBcUIsQ0FBQ0UsWUFBWSxHQUFHaEMsMkRBQWdCQSxDQUFDa0M7Z0JBQzFELE9BQ0ssSUFBSUgsV0FBVyxDQUFDLGFBQWEsRUFBRTtvQkFDaENELHFCQUFxQixDQUFDRSxZQUFZLEdBQUcsSUFBSSxDQUFDdEIsVUFBVTtnQkFDeEQ7WUFDSjtRQUNKO1FBQ0EsT0FBT29CO0lBQ1g7SUFDQU0saUJBQWlCaEMsUUFBUSxFQUFFO1FBQ3ZCaUMsT0FBT0MsTUFBTSxDQUFDLElBQUksQ0FBQzlCLFNBQVMsRUFBRSxJQUFJLENBQUNtQixzQkFBc0IsQ0FBQ3ZCLFVBQVUsSUFBSSxDQUFDTyxNQUFNLENBQUNQLFFBQVE7SUFDNUY7SUFDQW1DLElBQUlDLElBQUksRUFBRTtRQUNOLHdCQUF3QjtRQUN4QixNQUFNQyxNQUFNRCxLQUFLRSxNQUFNLENBQUMsQ0FBQ0MsS0FBS0MsVUFBWUQsT0FBT0EsR0FBRyxDQUFDQyxRQUFRLEVBQUUsSUFBSSxDQUFDcEMsU0FBUztRQUM3RSxJQUFJaUMsT0FBT0EsSUFBSUksUUFBUSxFQUFFO1lBQ3JCLE9BQU9KO1FBQ1g7SUFDSjtJQUNBSyxJQUFJTixJQUFJLEVBQUVPLEtBQUssRUFBRTtRQUNiLElBQUlDLE9BQU8sSUFBSSxDQUFDeEMsU0FBUztRQUN6QmdDLEtBQUtTLE9BQU8sQ0FBQyxDQUFDQyxHQUFHQztZQUNiLE1BQU1DLFNBQVNELE9BQU9YLEtBQUthLE1BQU0sR0FBRztZQUNwQyxJQUFJRCxRQUFRO2dCQUNSSixJQUFJLENBQUNFLEVBQUUsR0FBR0g7WUFDZDtZQUNBQyxJQUFJLENBQUNFLEVBQUUsR0FBR0YsSUFBSSxDQUFDRSxFQUFFLElBQUksQ0FBQztZQUN0QkYsT0FBT0EsSUFBSSxDQUFDRSxFQUFFO1FBQ2xCO0lBQ0o7SUFDQSxNQUFNL0IsYUFBYWYsUUFBUSxFQUFFb0MsT0FBTyxFQUFFLEVBQUU7UUFDcEMsSUFBSyxJQUFJYyxJQUFJLEdBQUdBLElBQUlsRCxTQUFTaUQsTUFBTSxFQUFFQyxLQUFLLEVBQUc7WUFDekMsTUFBTUMsd0JBQXdCbkQsUUFBUSxDQUFDa0QsRUFBRTtZQUN6QyxNQUFNRSxjQUFjRCxzQkFBc0JuRCxRQUFRO1lBQ2xELElBQUlvRCxhQUFhO2dCQUNiLE1BQU0sSUFBSSxDQUFDckMsWUFBWSxDQUFDcUMsYUFBYTt1QkFDOUJoQjtvQkFDSG5ELGdEQUFTQSxDQUFDa0Usc0JBQXNCdEIsSUFBSTtpQkFDdkM7WUFDTDtZQUNBLE1BQU13QixjQUFjRjtZQUNwQixNQUFNRyxrQkFBa0JyRSxnREFBU0EsQ0FBQ2tFLHNCQUFzQnRCLElBQUk7WUFDNUQsbUNBQW1DO1lBQ25DLElBQUl3QixZQUFZRSxRQUFRLElBQUksQ0FBQyxJQUFJLENBQUNwQixHQUFHLENBQUM7bUJBQUlDO2dCQUFNa0I7YUFBZ0IsR0FBRztnQkFDL0QsbUJBQW1CO2dCQUNuQixJQUFJLElBQUksQ0FBQ2pELFNBQVMsQ0FBQ21ELE1BQU0sS0FBS3pCLFdBQVc7b0JBQ3JDLE1BQU0sSUFBSTBCLE1BQU07Z0JBQ3BCO2dCQUNBLG1CQUFtQjtnQkFDbkIsSUFBSSxDQUFDZixHQUFHLENBQUM7dUJBQUlOO29CQUFNa0I7aUJBQWdCLEVBQUUsSUFBSSxDQUFDakQsU0FBUyxDQUFDbUQsTUFBTSxDQUFDRSxTQUFTO1lBQ3hFO1lBQ0EscUVBQXFFO1lBQ3JFLElBQUlDLFFBQVFDLEdBQUcsQ0FBQzNELGlCQUFpQjRELGNBQWMsRUFBRVAsb0JBQzdDLENBQUMsSUFBSSxDQUFDbkIsR0FBRyxDQUFDO21CQUFJQztnQkFBTWtCO2FBQWdCLEdBQUc7Z0JBQ3ZDLElBQUksQ0FBQ1osR0FBRyxDQUFDO3VCQUFJTjtvQkFBTWtCO2lCQUFnQixFQUFFckQsaUJBQWlCNEQsY0FBYyxDQUFDUCxnQkFBZ0I7WUFDekY7UUFDSjtJQUNKO0lBQ0EsTUFBTXRDLFlBQVloQixRQUFRLEVBQUVvQyxPQUFPLEVBQUUsRUFBRTtRQUNuQyxJQUFJMEIsUUFBUTtRQUNaLElBQUssSUFBSVosSUFBSSxHQUFHQSxJQUFJbEQsU0FBU2lELE1BQU0sRUFBRUMsS0FBSyxFQUFHO1lBQ3pDLE1BQU1HLGNBQWNyRCxRQUFRLENBQUNrRCxFQUFFO1lBQy9CLE1BQU1FLGNBQWNDLFlBQVlyRCxRQUFRO1lBQ3hDLElBQUlvRCxhQUFhO2dCQUNiVSxTQUFTLE1BQU0sSUFBSSxDQUFDOUMsV0FBVyxDQUFDb0MsYUFBYTt1QkFDdENoQjtvQkFDSG5ELGdEQUFTQSxDQUFDb0UsWUFBWXhCLElBQUk7aUJBQzdCO1lBQ0w7WUFDQSxNQUFNa0Msb0JBQW9CVjtZQUMxQixNQUFNQyxrQkFBa0JyRSxnREFBU0EsQ0FBQ29FLFlBQVl4QixJQUFJO1lBQ2xELDhCQUE4QjtZQUM5QixJQUFJa0Msa0JBQWtCQyxHQUFHLElBQ3JCRCxrQkFBa0JDLEdBQUcsQ0FBQ0MsS0FBSyxDQUFDaEIsTUFBTSxHQUFHLEtBQ3JDLENBQUMsSUFBSSxDQUFDZCxHQUFHLENBQUM7bUJBQUlDO2dCQUFNa0I7YUFBZ0IsR0FBRztnQkFDdkMsSUFBSVksUUFBUSxNQUFNLElBQUksQ0FBQ0MsZUFBZSxDQUFDSixtQkFBbUIzQixRQUFRO29CQUM5RDBCLFNBQVM7Z0JBQ2I7WUFDSjtRQUNKO1FBQ0EsT0FBT0E7SUFDWDtJQUNBLE1BQU03QyxpQkFBaUJqQixRQUFRLEVBQUVvQyxPQUFPLEVBQUUsRUFBRTtRQUN4QyxJQUFJMEIsUUFBUTtRQUNaLElBQUssSUFBSVosSUFBSSxHQUFHQSxJQUFJbEQsU0FBU2lELE1BQU0sRUFBRUMsS0FBSyxFQUFHO1lBQ3pDLE1BQU1HLGNBQWNyRCxRQUFRLENBQUNrRCxFQUFFO1lBQy9CLE1BQU1FLGNBQWNDLFlBQVlyRCxRQUFRO1lBQ3hDLElBQUlvRCxhQUFhO2dCQUNiVSxTQUFTLE1BQU0sSUFBSSxDQUFDN0MsZ0JBQWdCLENBQUNtQyxhQUFhO3VCQUMzQ2hCO29CQUNIbkQsZ0RBQVNBLENBQUNvRSxZQUFZeEIsSUFBSTtpQkFDN0I7WUFDTDtZQUNBLE1BQU11QyxZQUFZZixZQUFZZSxTQUFTLElBQUksRUFBRTtZQUM3QyxNQUFNZCxrQkFBa0JyRSxnREFBU0EsQ0FBQ29FLFlBQVl4QixJQUFJO1lBQ2xELE1BQU13QyxVQUFVO21CQUFJakM7Z0JBQU1rQjthQUFnQjtZQUMxQywyR0FBMkc7WUFDM0csTUFBTWdCLGFBQWEsSUFBSSxDQUFDbkMsR0FBRyxDQUFDa0M7WUFDNUIsSUFBSUMsWUFBWTtnQkFDWixNQUFNQyxXQUFXSCxVQUFVSSxNQUFNLENBQUMsQ0FBQ0MsTUFBUSxDQUFDLElBQUksQ0FBQ3RDLEdBQUcsQ0FBQzsyQkFBSUM7d0JBQU1uRCxnREFBU0EsQ0FBQ3dGO3FCQUFLO2dCQUM5RVgsU0FBU1MsU0FBU3RCLE1BQU07Z0JBQ3hCLElBQUlzQixTQUFTdEIsTUFBTSxHQUFHLEdBQUc7b0JBQ3JCLE1BQU15QixVQUFVLE1BQU0sSUFBSSxDQUFDL0QsYUFBYSxDQUFDZ0UsWUFBWSxDQUFDO3dCQUNsRGpCLFdBQVdZO29CQUNmO29CQUNBLE1BQU1NLFFBQVFDLEdBQUcsQ0FBQ04sU0FBU08sR0FBRyxDQUFDLE9BQU9MO3dCQUNsQyxNQUFNTSxVQUFVOUYsZ0RBQVNBLENBQUN3Rjt3QkFDMUIsSUFBSSxDQUFDL0IsR0FBRyxDQUFDOytCQUFJTjs0QkFBTTJDO3lCQUFRLEVBQUVMLE9BQU8sQ0FBQ0ssUUFBUTt3QkFDN0MsT0FBT0wsT0FBTyxDQUFDSyxRQUFRO29CQUMzQjtnQkFDSjtZQUNKO1FBQ0o7UUFDQSxPQUFPakI7SUFDWDtJQUNBLE1BQU1LLGdCQUFnQmQsV0FBVyxFQUFFakIsT0FBTyxFQUFFLEVBQUU7UUFDMUMsSUFBSSxDQUFDaUIsWUFBWVcsR0FBRyxJQUFJLENBQUNYLFlBQVlXLEdBQUcsQ0FBQ0MsS0FBSyxFQUMxQyxNQUFNLElBQUlSLE1BQU07UUFDcEIsTUFBTVEsUUFBUSxNQUFNVyxRQUFRQyxHQUFHLENBQUN4QixZQUFZVyxHQUFHLENBQUNDLEtBQUssQ0FBQ2EsR0FBRyxDQUFDLENBQUNFLFdBQWEsSUFBSSxDQUFDQyxRQUFRLENBQUNELFVBQVU1QztRQUNoRyxJQUFJNkIsTUFBTWlCLElBQUksQ0FBQyxDQUFDQyxPQUFTLE9BQU9BLFFBQVEsY0FBYztZQUNsRDtRQUNKO1FBQ0EsTUFBTTlELFlBQVksTUFBTSxJQUFJLENBQUMrRCxjQUFjLENBQUMvQixhQUFhakI7UUFDekQsSUFBSSxDQUFDZixXQUFXO1lBQ1o7UUFDSjtRQUNBLE1BQU0sQ0FBQ2dFLE9BQU8sR0FBRyxNQUFNbkcsc0RBQVNBLENBQUNvRyxrQkFBa0IsQ0FBQ3JCLE9BQU81QztRQUMzRCxJQUFJLENBQUNxQixHQUFHLENBQUM7ZUFBSU47WUFBTW5ELGdEQUFTQSxDQUFDb0UsWUFBWXhCLElBQUk7U0FBRSxFQUFFd0Q7SUFDckQ7SUFDQSxNQUFNRCxlQUFlL0IsV0FBVyxFQUFFakIsT0FBTyxFQUFFLEVBQUU7UUFDekMsSUFBSW1EO1FBQ0osSUFBSSxDQUFFLEVBQUNBLEtBQUtsQyxZQUFZVyxHQUFHLE1BQU0sUUFBUXVCLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR2xFLFNBQVMsR0FBRztZQUM3RSxPQUFPLElBQUksQ0FBQ2YsVUFBVTtRQUMxQjtRQUNBLE9BQVErQyxZQUFZVyxHQUFHLENBQUMzQyxTQUFTLENBQUNtRSxJQUFJO1lBQ2xDLEtBQUs7Z0JBQ0QsT0FBTyxJQUFJdEcsc0RBQVNBLENBQUMsSUFBSSxDQUFDdUcsYUFBYSxDQUFDcEMsWUFBWVcsR0FBRyxDQUFDM0MsU0FBUyxDQUFDc0IsS0FBSztZQUMzRSxLQUFLO2dCQUNELE9BQU8sSUFBSSxDQUFDK0MsUUFBUSxDQUFDckMsWUFBWVcsR0FBRyxDQUFDM0MsU0FBUztZQUNsRCxLQUFLO2dCQUNELE9BQU8sTUFBTSxJQUFJLENBQUNzRSxZQUFZLENBQUN0QyxZQUFZVyxHQUFHLENBQUMzQyxTQUFTLEVBQUVlO1lBQzlEO2dCQUNJLE1BQU0sSUFBSXFCLE1BQU0sQ0FBQyw4QkFBOEIsRUFBRUosWUFBWVcsR0FBRyxDQUFDM0MsU0FBUyxDQUFDbUUsSUFBSSxDQUFDLENBQUM7UUFDekY7SUFDSjtJQUNBLE1BQU1QLFNBQVNELFFBQVEsRUFBRTVDLE9BQU8sRUFBRSxFQUFFO1FBQ2hDLE9BQVE0QyxTQUFTUSxJQUFJO1lBQ2pCLEtBQUs7Z0JBQ0QsT0FBTyxJQUFJLENBQUNDLGFBQWEsQ0FBQ1Q7WUFDOUIsS0FBSztnQkFDRCxPQUFPLE1BQU0sSUFBSSxDQUFDWSxXQUFXLENBQUNaO1lBQ2xDLEtBQUs7Z0JBQ0QsT0FBTyxNQUFNLElBQUksQ0FBQ2EsZUFBZSxDQUFDYixVQUFVNUM7WUFDaEQ7Z0JBQ0ksTUFBTSxJQUFJcUIsTUFBTSxDQUFDLHNCQUFzQixFQUFFdUIsU0FBU1EsSUFBSSxDQUFDLENBQUM7UUFDaEU7SUFDSjtJQUNBOztLQUVDLEdBQ0RNLFFBQVFDLElBQUksRUFBRTNELE9BQU8sRUFBRSxFQUFFO1FBQ3JCLElBQUlBLEtBQUthLE1BQU0sR0FBRyxLQUFLOEMsS0FBS0MsT0FBTyxFQUFFO1lBQ2pDLE1BQU1DLFVBQVUsSUFBSSxDQUFDeEYsU0FBUyxDQUFDeUYsSUFBSSxDQUFDLENBQUNDLElBQU1BLEVBQUV0RSxJQUFJLEtBQUtrRSxLQUFLQyxPQUFPO1lBQ2xFLElBQUksQ0FBQ0MsU0FBUztnQkFDVixNQUFNLElBQUl4QyxNQUFNLENBQUMsaUJBQWlCLEVBQUVzQyxLQUFLQyxPQUFPLENBQUMsQ0FBQztZQUN0RDtZQUNBLE1BQU1JLGFBQWFILFFBQVFGLElBQUksRUFBRSx5QkFBeUI7WUFDMUQsTUFBTU0sUUFBUUQsV0FBV0UsTUFBTSxDQUFDSixJQUFJLENBQUMsQ0FBQ0csUUFBVUEsTUFBTXhFLElBQUksS0FBS08sSUFBSSxDQUFDLEVBQUU7WUFDdEUsT0FBTyxJQUFJLENBQUMwRCxPQUFPLENBQUNPLE1BQU1OLElBQUksRUFBRTNELEtBQUttRSxLQUFLLENBQUM7UUFDL0M7UUFDQSxPQUFPUjtJQUNYO0lBQ0FOLGNBQWNULFFBQVEsRUFBRTtRQUNwQixPQUFPLElBQUksQ0FBQ3dCLGFBQWEsQ0FBQyxJQUFJLENBQUNWLE9BQU8sQ0FBQ2QsU0FBU2UsSUFBSSxFQUFFLENBQUNmLFNBQVM1QyxJQUFJLElBQUksRUFBQyxFQUFHcUUsS0FBSyxDQUFDLEtBQUtGLEtBQUssQ0FBQyxLQUFLdkIsU0FBU3JDLEtBQUs7SUFDcEg7SUFDQSxNQUFNaUQsWUFBWVosUUFBUSxFQUFFO1FBQ3hCLE1BQU1VLFdBQVcsSUFBSSxDQUFDQSxRQUFRLENBQUNWO1FBQy9CLElBQUksT0FBT1UsYUFBYSxhQUFhO1lBQ2pDO1FBQ0o7UUFDQSxPQUFPLElBQUksQ0FBQ2MsYUFBYSxDQUFDLElBQUksQ0FBQ1YsT0FBTyxDQUFDZCxTQUFTZSxJQUFJLEVBQUUsQ0FBQ2YsU0FBUzVDLElBQUksSUFBSSxFQUFDLEVBQUdxRSxLQUFLLENBQUMsS0FBS0YsS0FBSyxDQUFDLEtBQUtiO0lBQ3RHO0lBQ0FBLFNBQVNWLFFBQVEsRUFBRTtRQUNmLE1BQU15QixRQUFRekIsU0FBUzVDLElBQUksQ0FBQ3FFLEtBQUssQ0FBQztRQUNsQyxNQUFNQyxjQUFjekgsZ0RBQVNBLENBQUN3SCxLQUFLLENBQUMsRUFBRTtRQUN0QyxNQUFNRSxpQkFBaUIsSUFBSSxDQUFDcEcsTUFBTSxDQUFDTSxJQUFJLENBQUMrRixTQUFTLENBQUMsQ0FBQ0MsVUFBWUEsUUFBUWhGLElBQUksS0FBSzZFO1FBQ2hGLElBQUlDLG1CQUFtQixDQUFDLEdBQUc7WUFDdkIsTUFBTSxJQUFJbEQsTUFBTSxDQUFDLGtDQUFrQyxFQUFFaUQsWUFBWSxDQUFDO1FBQ3RFO1FBQ0EsT0FBT0QsTUFDRkYsS0FBSyxDQUFDLEdBQ05qRSxNQUFNLENBQUMsQ0FBQ00sTUFBTVIsT0FBUyxDQUFDUSxRQUFRLENBQUMsRUFBRSxDQUFDUixLQUFLLEVBQUUsSUFBSSxDQUFDakMsS0FBSyxDQUFDd0csZUFBZTtJQUM5RTtJQUNBLE1BQU1kLGdCQUFnQmIsUUFBUSxFQUFFNUMsT0FBTyxFQUFFLEVBQUU7UUFDdkMsTUFBTXVELGVBQWUsTUFBTSxJQUFJLENBQUNBLFlBQVksQ0FBQ1gsVUFBVTVDO1FBQ3ZELElBQUksQ0FBQ3VELGNBQWM7WUFDZjtRQUNKO1FBQ0EsT0FBTyxJQUFJLENBQUNhLGFBQWEsQ0FBQ3hCLFNBQVNlLElBQUksRUFBRUo7SUFDN0M7SUFDQSxNQUFNQSxhQUFhWCxRQUFRLEVBQUU1QyxPQUFPLEVBQUUsRUFBRTtRQUNwQyxNQUFNMEUsaUJBQWlCOUIsU0FBUzVDLElBQUksQ0FBQ3FFLEtBQUssQ0FBQztRQUMzQyxNQUFNTSxZQUFZRCxjQUFjLENBQUMsRUFBRTtRQUNuQyxNQUFNRSxjQUFjLElBQUksQ0FBQzdFLEdBQUcsQ0FBQztlQUFJQztZQUFNbkQsZ0RBQVNBLENBQUM4SDtTQUFXO1FBQzVELElBQUlDLGdCQUFnQixNQUFNO1lBQ3RCLE1BQU0sSUFBSXZELE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQztRQUN6QztRQUNBLHVDQUF1QztRQUN2QyxJQUFJcUQsZUFBZTdELE1BQU0sS0FBSyxHQUFHO1lBQzdCLE9BQU8rRDtRQUNYO1FBQ0EsMkJBQTJCO1FBQzNCLEVBQUU7UUFDRiw0QkFBNEI7UUFDNUIsTUFBTXRDLFVBQVUsTUFBTSxJQUFJLENBQUMvRCxhQUFhLENBQUNnRSxZQUFZLENBQUM7WUFDbERqQixXQUFXc0Q7WUFDWG5GLE1BQU1tRCxTQUFTTixPQUFPO1FBQzFCO1FBQ0EsNERBQTREO1FBQzVELG9CQUFvQjtRQUNwQixNQUFNdUMsYUFBYSxJQUFJLENBQUNDLGlCQUFpQixDQUFDeEMsU0FBU29DLGVBQWVQLEtBQUssQ0FBQztRQUN4RSxPQUFPVTtJQUNYO0lBQ0FDLGtCQUFrQnhDLE9BQU8sRUFBRXRDLElBQUksRUFBRTtRQUM3QixJQUFJK0U7UUFDSixNQUFPL0UsS0FBS2EsTUFBTSxHQUFHLEVBQUc7WUFDcEJrRSxlQUFlekMsT0FBTyxDQUFDekYsZ0RBQVNBLENBQUNtRCxJQUFJLENBQUMsRUFBRSxFQUFFO1lBQzFDQSxPQUFPQSxLQUFLbUUsS0FBSyxDQUFDO1FBQ3RCO1FBQ0EsT0FBT1k7SUFDWDtJQUNBLHVFQUF1RTtJQUN2RSwrQkFBK0I7SUFDL0IsRUFBRTtJQUNGLHVDQUF1QztJQUN2Q1gsY0FBY1QsSUFBSSxFQUFFcEQsS0FBSyxFQUFFO1FBQ3ZCLE9BQVFvRDtZQUNKLEtBQUs7Z0JBQ0QsT0FBT3FCLE9BQU9DLElBQUksQ0FBQztvQkFBQzFFO2lCQUFNO1lBQzlCLEtBQUs7Z0JBQ0QsSUFBSTJFLElBQUlGLE9BQU9HLEtBQUssQ0FBQztnQkFDckJELEVBQUVFLGFBQWEsQ0FBQzdFO2dCQUNoQixPQUFPMkU7WUFDWCxLQUFLO2dCQUNELElBQUlHLE1BQU1MLE9BQU9HLEtBQUssQ0FBQztnQkFDdkJFLElBQUlDLGFBQWEsQ0FBQy9FO2dCQUNsQixPQUFPOEU7WUFDWCxLQUFLO2dCQUNELElBQUlFLE9BQU9QLE9BQU9HLEtBQUssQ0FBQztnQkFDeEJJLEtBQUtDLGdCQUFnQixDQUFDQyxPQUFPbEY7Z0JBQzdCLE9BQU9nRjtZQUNYLEtBQUs7Z0JBQ0QsT0FBT1AsT0FBT0MsSUFBSSxDQUFDOUgsd0RBQVcsQ0FBQ29EO1lBQ25DLEtBQUs7Z0JBQ0QsT0FBT0EsTUFBTXNDLFFBQVE7WUFDekI7Z0JBQ0ksSUFBSWMsS0FBS2dDLEtBQUssRUFBRTtvQkFDWixPQUFPWCxPQUFPQyxJQUFJLENBQUMxRTtnQkFDdkI7Z0JBQ0EsTUFBTSxJQUFJYyxNQUFNLENBQUMsc0JBQXNCLEVBQUVzQyxLQUFLLENBQUM7UUFDdkQ7SUFDSjtBQUNKO0FBQ0E5RixpQkFBaUI0RCxjQUFjLEdBQUc7SUFDOUJtRSx3QkFBd0J2SSxrRUFBcUJBO0lBQzdDd0ksTUFBTTVJLCtEQUFrQkE7SUFDeEI2SSxlQUFlL0ksMERBQWFBLENBQUNrQyxTQUFTO0lBQ3RDOEcsY0FBYzNJLDZEQUFnQkE7SUFDOUI0SSxPQUFPaEosZ0VBQW1CQTtBQUM5QjtBQUNBLG9FQUFvRTtBQUM3RCxNQUFNd0I7SUFDVCx5REFBeUQ7SUFDekRWLFlBQVlHLFNBQVMsRUFBRUQsU0FBUyxFQUFFRSxVQUFVLENBQUU7UUFDMUMsSUFBSSxDQUFDRCxTQUFTLEdBQUdBO1FBQ2pCLElBQUksQ0FBQ0MsVUFBVSxHQUFHQTtRQUNsQixJQUFJLENBQUMrSCxNQUFNLEdBQUcsSUFBSUM7UUFDbEIsSUFBSSxDQUFDQyxLQUFLLEdBQUcsQ0FBQztRQUNkLElBQUksQ0FBQ0EsS0FBSyxDQUFDakksV0FBV21DLFFBQVEsR0FBRyxHQUFHckM7SUFDeEM7SUFDQSxNQUFNb0ksVUFBVW5ILFNBQVMsRUFBRTtRQUN2QixJQUFJLENBQUMsSUFBSSxDQUFDa0gsS0FBSyxDQUFDbEgsVUFBVW9CLFFBQVEsR0FBRyxFQUFFO1lBQ25DLE1BQU1nRyxNQUFNLE1BQU05SSw4Q0FBT0EsQ0FBQytJLFFBQVEsQ0FBQ3JILFdBQVcsSUFBSSxDQUFDaEIsU0FBUztZQUM1RCxJQUFJb0ksS0FBSztnQkFDTCxNQUFNRSxVQUFVLElBQUloSiw4Q0FBT0EsQ0FBQzhJLEtBQUtwSCxXQUFXLElBQUksQ0FBQ2hCLFNBQVM7Z0JBQzFELElBQUksQ0FBQ2tJLEtBQUssQ0FBQ2xILFVBQVVvQixRQUFRLEdBQUcsR0FBR2tHLFFBQVFqRSxPQUFPO1lBQ3REO1FBQ0o7UUFDQSxPQUFPLElBQUksQ0FBQzZELEtBQUssQ0FBQ2xILFVBQVVvQixRQUFRLEdBQUc7SUFDM0M7SUFDQSxNQUFNa0MsYUFBYSxFQUFFakIsU0FBUyxFQUFFN0IsSUFBSSxFQUFFUixZQUFZLElBQUksQ0FBQ2YsVUFBVSxFQUFHLEVBQUU7UUFDbEUsTUFBTXNJLFVBQVVsRixVQUFVbUYsUUFBUTtRQUNsQyxJQUFJLENBQUMsSUFBSSxDQUFDUixNQUFNLENBQUN6RSxHQUFHLENBQUNnRixVQUFVO1lBQzNCLElBQUkvRyxTQUFTLGdCQUFnQjtnQkFDekIsTUFBTWlILGNBQWMsTUFBTSxJQUFJLENBQUN6SSxTQUFTLENBQUMwSSxVQUFVLENBQUNDLGNBQWMsQ0FBQ3RGO2dCQUNuRSxJQUFJb0YsZ0JBQWdCLE1BQU07b0JBQ3RCLE1BQU0sSUFBSXJGLE1BQU0sQ0FBQyx5QkFBeUIsRUFBRW1GLFFBQVEsQ0FBQztnQkFDekQ7Z0JBQ0EsTUFBTUssT0FBT3ZKLHlFQUFrQkEsQ0FBQ29KLFlBQVlHLElBQUk7Z0JBQ2hELElBQUksQ0FBQ1osTUFBTSxDQUFDM0YsR0FBRyxDQUFDa0csU0FBU0s7WUFDN0IsT0FDSyxJQUFJcEgsTUFBTTtnQkFDWCxNQUFNN0IsV0FBVyxNQUFNLElBQUksQ0FBQ3dJLFNBQVMsQ0FBQ25IO2dCQUN0QyxJQUFJckIsVUFBVTtvQkFDVixNQUFNa0osaUJBQWlCbEosUUFBUSxDQUFDZixnREFBU0EsQ0FBQzRDLE1BQU07b0JBQ2hELElBQUlxSCxnQkFBZ0I7d0JBQ2hCLE1BQU14RSxVQUFVLE1BQU13RSxlQUFlQyxLQUFLLENBQUN6Rjt3QkFDM0MsSUFBSSxDQUFDMkUsTUFBTSxDQUFDM0YsR0FBRyxDQUFDa0csU0FBU2xFO29CQUM3QjtnQkFDSjtZQUNKLE9BQ0s7Z0JBQ0QsTUFBTUEsVUFBVSxNQUFNLElBQUksQ0FBQ3JFLFNBQVMsQ0FBQzBJLFVBQVUsQ0FBQ0MsY0FBYyxDQUFDdEY7Z0JBQy9ELElBQUlnQixZQUFZLE1BQU07b0JBQ2xCLE1BQU0sSUFBSWpCLE1BQU0sQ0FBQyx5QkFBeUIsRUFBRW1GLFFBQVEsQ0FBQztnQkFDekQ7Z0JBQ0EsTUFBTUssT0FBT3ZFLFFBQVF1RSxJQUFJO2dCQUN6QixNQUFNakosV0FBVyxNQUFNLElBQUksQ0FBQ3dJLFNBQVMsQ0FBQzlELFFBQVEwRSxLQUFLO2dCQUNuRCxJQUFJcEosVUFBVTtvQkFDVixNQUFNcUoscUJBQXFCcEgsT0FBT3FILE1BQU0sQ0FBQ3RKLFNBQVMsQ0FBQyxFQUFFO29CQUNyRCxJQUFJLENBQUNxSixvQkFBb0I7d0JBQ3JCLE1BQU0sSUFBSTVGLE1BQU07b0JBQ3BCO29CQUNBLE1BQU04RixTQUFTRixtQkFBbUJHLEtBQUssQ0FBQ3hKLFFBQVEsQ0FBQ3lKLFNBQVMsQ0FBQ1I7b0JBQzNELElBQUksQ0FBQ1osTUFBTSxDQUFDM0YsR0FBRyxDQUFDa0csU0FBU1c7Z0JBQzdCO1lBQ0o7UUFDSjtRQUNBLE9BQU8sSUFBSSxDQUFDbEIsTUFBTSxDQUFDbEcsR0FBRyxDQUFDeUc7SUFDM0I7QUFDSixFQUNBLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9AcHJvamVjdC1zZXJ1bS9hbmNob3IvZGlzdC9lc20vcHJvZ3JhbS9hY2NvdW50cy1yZXNvbHZlci5qcz8zYmRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjYW1lbENhc2UgZnJvbSBcImNhbWVsY2FzZVwiO1xuaW1wb3J0IHsgUHVibGljS2V5LCBTeXN0ZW1Qcm9ncmFtLCBTWVNWQVJfQ0xPQ0tfUFVCS0VZLCBTWVNWQVJfUkVOVF9QVUJLRVksIH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiO1xuaW1wb3J0IHsgaXNJZGxBY2NvdW50cywgfSBmcm9tIFwiLi4vaWRsLmpzXCI7XG5pbXBvcnQgKiBhcyB1dGY4IGZyb20gXCIuLi91dGlscy9ieXRlcy91dGY4LmpzXCI7XG5pbXBvcnQgeyBUT0tFTl9QUk9HUkFNX0lELCBBU1NPQ0lBVEVEX1BST0dSQU1fSUQgfSBmcm9tIFwiLi4vdXRpbHMvdG9rZW4uanNcIjtcbmltcG9ydCB7IGRlY29kZVRva2VuQWNjb3VudCB9IGZyb20gXCIuL3Rva2VuLWFjY291bnQtbGF5b3V0XCI7XG5pbXBvcnQgeyBQcm9ncmFtLCB0cmFuc2xhdGVBZGRyZXNzIH0gZnJvbSBcIi4vaW5kZXguanNcIjtcbmltcG9ydCB7IGZsYXR0ZW5QYXJ0aWFsQWNjb3VudHMsIGlzUGFydGlhbEFjY291bnRzLCB9IGZyb20gXCIuL25hbWVzcGFjZS9tZXRob2RzXCI7XG5leHBvcnQgZnVuY3Rpb24gaXNBY2NvdW50c0dlbmVyaWMoYWNjb3VudHMpIHtcbiAgICByZXR1cm4gIShhY2NvdW50cyBpbnN0YW5jZW9mIFB1YmxpY0tleSk7XG59XG4vLyBQb3B1bGF0ZXMgYSBnaXZlbiBhY2NvdW50cyBjb250ZXh0IHdpdGggUERBcyBhbmQgY29tbW9uIG1pc3NpbmcgYWNjb3VudHMuXG5leHBvcnQgY2xhc3MgQWNjb3VudHNSZXNvbHZlciB7XG4gICAgY29uc3RydWN0b3IoX2FyZ3MsIF9hY2NvdW50cywgX3Byb3ZpZGVyLCBfcHJvZ3JhbUlkLCBfaWRsSXgsIF9hY2NvdW50TmFtZXNwYWNlLCBfaWRsVHlwZXMsIF9jdXN0b21SZXNvbHZlcikge1xuICAgICAgICB0aGlzLl9hY2NvdW50cyA9IF9hY2NvdW50cztcbiAgICAgICAgdGhpcy5fcHJvdmlkZXIgPSBfcHJvdmlkZXI7XG4gICAgICAgIHRoaXMuX3Byb2dyYW1JZCA9IF9wcm9ncmFtSWQ7XG4gICAgICAgIHRoaXMuX2lkbEl4ID0gX2lkbEl4O1xuICAgICAgICB0aGlzLl9pZGxUeXBlcyA9IF9pZGxUeXBlcztcbiAgICAgICAgdGhpcy5fY3VzdG9tUmVzb2x2ZXIgPSBfY3VzdG9tUmVzb2x2ZXI7XG4gICAgICAgIHRoaXMuX2FyZ3MgPSBfYXJncztcbiAgICAgICAgdGhpcy5fYWNjb3VudFN0b3JlID0gbmV3IEFjY291bnRTdG9yZShfcHJvdmlkZXIsIF9hY2NvdW50TmFtZXNwYWNlLCB0aGlzLl9wcm9ncmFtSWQpO1xuICAgIH1cbiAgICBhcmdzKF9hcmdzKSB7XG4gICAgICAgIHRoaXMuX2FyZ3MgPSBfYXJncztcbiAgICB9XG4gICAgLy8gTm90ZTogV2Ugc2VyaWFsbHkgcmVzb2x2ZSBQREFzIG9uZSBieSBvbmUgcmF0aGVyIHRoYW4gZG9pbmcgdGhlbVxuICAgIC8vICAgICAgIGluIHBhcmFsbGVsIGJlY2F1c2UgdGhlcmUgY2FuIGJlIGRlcGVuZGVuY2llcyBiZXR3ZWVuXG4gICAgLy8gICAgICAgYWRkcmVzc2VzLiBUaGF0IGlzLCBvbmUgUERBIGNhbiBiZSB1c2VkIGFzIGEgc2VlZCBpbiBhbm90aGVyLlxuICAgIGFzeW5jIHJlc29sdmUoKSB7XG4gICAgICAgIGF3YWl0IHRoaXMucmVzb2x2ZUNvbnN0KHRoaXMuX2lkbEl4LmFjY291bnRzKTtcbiAgICAgICAgLy8gQXV0byBwb3B1bGF0ZSBwZGFzIGFuZCByZWxhdGlvbnMgdW50aWwgd2Ugc3RvcCBmaW5kaW5nIG5ldyBhY2NvdW50c1xuICAgICAgICB3aGlsZSAoKGF3YWl0IHRoaXMucmVzb2x2ZVBkYXModGhpcy5faWRsSXguYWNjb3VudHMpKSArXG4gICAgICAgICAgICAoYXdhaXQgdGhpcy5yZXNvbHZlUmVsYXRpb25zKHRoaXMuX2lkbEl4LmFjY291bnRzKSkgK1xuICAgICAgICAgICAgKGF3YWl0IHRoaXMucmVzb2x2ZUN1c3RvbSgpKSA+XG4gICAgICAgICAgICAwKSB7IH1cbiAgICB9XG4gICAgYXN5bmMgcmVzb2x2ZUN1c3RvbSgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2N1c3RvbVJlc29sdmVyKSB7XG4gICAgICAgICAgICBjb25zdCB7IGFjY291bnRzLCByZXNvbHZlZCB9ID0gYXdhaXQgdGhpcy5fY3VzdG9tUmVzb2x2ZXIoe1xuICAgICAgICAgICAgICAgIGFyZ3M6IHRoaXMuX2FyZ3MsXG4gICAgICAgICAgICAgICAgYWNjb3VudHM6IHRoaXMuX2FjY291bnRzLFxuICAgICAgICAgICAgICAgIHByb3ZpZGVyOiB0aGlzLl9wcm92aWRlcixcbiAgICAgICAgICAgICAgICBwcm9ncmFtSWQ6IHRoaXMuX3Byb2dyYW1JZCxcbiAgICAgICAgICAgICAgICBpZGxJeDogdGhpcy5faWRsSXgsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuX2FjY291bnRzID0gYWNjb3VudHM7XG4gICAgICAgICAgICByZXR1cm4gcmVzb2x2ZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIHJlc29sdmVPcHRpb25hbHNIZWxwZXIocGFydGlhbEFjY291bnRzLCBhY2NvdW50SXRlbXMpIHtcbiAgICAgICAgY29uc3QgbmVzdGVkQWNjb3VudHNHZW5lcmljID0ge307XG4gICAgICAgIC8vIExvb3BpbmcgdGhyb3VnaCBhY2NvdW50SXRlbSBhcnJheSBpbnN0ZWFkIG9mIG9uIHBhcnRpYWxBY2NvdW50cywgc29cbiAgICAgICAgLy8gd2Ugb25seSB0cmF2ZXJzZSBhcnJheSBvbmNlXG4gICAgICAgIGZvciAoY29uc3QgYWNjb3VudEl0ZW0gb2YgYWNjb3VudEl0ZW1zKSB7XG4gICAgICAgICAgICBjb25zdCBhY2NvdW50TmFtZSA9IGFjY291bnRJdGVtLm5hbWU7XG4gICAgICAgICAgICBjb25zdCBwYXJ0aWFsQWNjb3VudCA9IHBhcnRpYWxBY2NvdW50c1thY2NvdW50TmFtZV07XG4gICAgICAgICAgICAvLyBTa2lwIGlmIHRoZSBhY2NvdW50IGlzbid0IGluY2x1ZGVkICh0aHVzIHdvdWxkIGJlIHVuZGVmaW5lZClcbiAgICAgICAgICAgIGlmIChwYXJ0aWFsQWNjb3VudCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgaWYgKGlzUGFydGlhbEFjY291bnRzKHBhcnRpYWxBY2NvdW50KSkge1xuICAgICAgICAgICAgICAgIC8vIGlzIGNvbXBvdW5kIGFjY291bnRzLCByZWN1cnNlIG9uZSBsZXZlbCBkZWVwZXJcbiAgICAgICAgICAgICAgICBpZiAoaXNJZGxBY2NvdW50cyhhY2NvdW50SXRlbSkpIHtcbiAgICAgICAgICAgICAgICAgICAgbmVzdGVkQWNjb3VudHNHZW5lcmljW2FjY291bnROYW1lXSA9IHRoaXMucmVzb2x2ZU9wdGlvbmFsc0hlbHBlcihwYXJ0aWFsQWNjb3VudCwgYWNjb3VudEl0ZW1bXCJhY2NvdW50c1wiXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBIZXJlIHdlIHRyeSBvdXIgYmVzdCB0byByZWNvdmVyIGdyYWNlZnVsbHkuIElmIHRoZXJlIGFyZSBvcHRpb25hbHMgd2UgY2FuJ3QgY2hlY2ssIHdlIHdpbGwgZmFpbCB0aGVuLlxuICAgICAgICAgICAgICAgICAgICBuZXN0ZWRBY2NvdW50c0dlbmVyaWNbYWNjb3VudE5hbWVdID0gZmxhdHRlblBhcnRpYWxBY2NvdW50cyhwYXJ0aWFsQWNjb3VudCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gaWYgbm90IGNvbXBvdW5kIGFjY291bnRzLCBkbyBudWxsL29wdGlvbmFsIGNoZWNrIGFuZCBwcm9jZWVkXG4gICAgICAgICAgICAgICAgaWYgKHBhcnRpYWxBY2NvdW50ICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIG5lc3RlZEFjY291bnRzR2VuZXJpY1thY2NvdW50TmFtZV0gPSB0cmFuc2xhdGVBZGRyZXNzKHBhcnRpYWxBY2NvdW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoYWNjb3VudEl0ZW1bXCJpc09wdGlvbmFsXCJdKSB7XG4gICAgICAgICAgICAgICAgICAgIG5lc3RlZEFjY291bnRzR2VuZXJpY1thY2NvdW50TmFtZV0gPSB0aGlzLl9wcm9ncmFtSWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXN0ZWRBY2NvdW50c0dlbmVyaWM7XG4gICAgfVxuICAgIHJlc29sdmVPcHRpb25hbHMoYWNjb3VudHMpIHtcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLl9hY2NvdW50cywgdGhpcy5yZXNvbHZlT3B0aW9uYWxzSGVscGVyKGFjY291bnRzLCB0aGlzLl9pZGxJeC5hY2NvdW50cykpO1xuICAgIH1cbiAgICBnZXQocGF0aCkge1xuICAgICAgICAvLyBPbmx5IHJldHVybiBpZiBwdWJrZXlcbiAgICAgICAgY29uc3QgcmV0ID0gcGF0aC5yZWR1Y2UoKGFjYywgc3ViUGF0aCkgPT4gYWNjICYmIGFjY1tzdWJQYXRoXSwgdGhpcy5fYWNjb3VudHMpO1xuICAgICAgICBpZiAocmV0ICYmIHJldC50b0Jhc2U1OCkge1xuICAgICAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzZXQocGF0aCwgdmFsdWUpIHtcbiAgICAgICAgbGV0IGN1cnIgPSB0aGlzLl9hY2NvdW50cztcbiAgICAgICAgcGF0aC5mb3JFYWNoKChwLCBpZHgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGlzTGFzdCA9IGlkeCA9PSBwYXRoLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICBpZiAoaXNMYXN0KSB7XG4gICAgICAgICAgICAgICAgY3VycltwXSA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY3VycltwXSA9IGN1cnJbcF0gfHwge307XG4gICAgICAgICAgICBjdXJyID0gY3VycltwXTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFzeW5jIHJlc29sdmVDb25zdChhY2NvdW50cywgcGF0aCA9IFtdKSB7XG4gICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgYWNjb3VudHMubGVuZ3RoOyBrICs9IDEpIHtcbiAgICAgICAgICAgIGNvbnN0IGFjY291bnREZXNjT3JBY2NvdW50cyA9IGFjY291bnRzW2tdO1xuICAgICAgICAgICAgY29uc3Qgc3ViQWNjb3VudHMgPSBhY2NvdW50RGVzY09yQWNjb3VudHMuYWNjb3VudHM7XG4gICAgICAgICAgICBpZiAoc3ViQWNjb3VudHMpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnJlc29sdmVDb25zdChzdWJBY2NvdW50cywgW1xuICAgICAgICAgICAgICAgICAgICAuLi5wYXRoLFxuICAgICAgICAgICAgICAgICAgICBjYW1lbENhc2UoYWNjb3VudERlc2NPckFjY291bnRzLm5hbWUpLFxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgYWNjb3VudERlc2MgPSBhY2NvdW50RGVzY09yQWNjb3VudHM7XG4gICAgICAgICAgICBjb25zdCBhY2NvdW50RGVzY05hbWUgPSBjYW1lbENhc2UoYWNjb3VudERlc2NPckFjY291bnRzLm5hbWUpO1xuICAgICAgICAgICAgLy8gU2lnbmVycyBkZWZhdWx0IHRvIHRoZSBwcm92aWRlci5cbiAgICAgICAgICAgIGlmIChhY2NvdW50RGVzYy5pc1NpZ25lciAmJiAhdGhpcy5nZXQoWy4uLnBhdGgsIGFjY291bnREZXNjTmFtZV0pKSB7XG4gICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9wcm92aWRlci53YWxsZXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIGZ1bmN0aW9uIHJlcXVpcmVzIHRoZSBQcm92aWRlciBpbnRlcmZhY2UgaW1wbGVtZW50b3IgdG8gaGF2ZSBhICd3YWxsZXQnIGZpZWxkLlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0KFsuLi5wYXRoLCBhY2NvdW50RGVzY05hbWVdLCB0aGlzLl9wcm92aWRlci53YWxsZXQucHVibGljS2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIENvbW1vbiBhY2NvdW50cyBhcmUgYXV0byBwb3B1bGF0ZWQgd2l0aCBtYWdpYyBuYW1lcyBieSBjb252ZW50aW9uLlxuICAgICAgICAgICAgaWYgKFJlZmxlY3QuaGFzKEFjY291bnRzUmVzb2x2ZXIuQ09OU1RfQUNDT1VOVFMsIGFjY291bnREZXNjTmFtZSkgJiZcbiAgICAgICAgICAgICAgICAhdGhpcy5nZXQoWy4uLnBhdGgsIGFjY291bnREZXNjTmFtZV0pKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXQoWy4uLnBhdGgsIGFjY291bnREZXNjTmFtZV0sIEFjY291bnRzUmVzb2x2ZXIuQ09OU1RfQUNDT1VOVFNbYWNjb3VudERlc2NOYW1lXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgcmVzb2x2ZVBkYXMoYWNjb3VudHMsIHBhdGggPSBbXSkge1xuICAgICAgICBsZXQgZm91bmQgPSAwO1xuICAgICAgICBmb3IgKGxldCBrID0gMDsgayA8IGFjY291bnRzLmxlbmd0aDsgayArPSAxKSB7XG4gICAgICAgICAgICBjb25zdCBhY2NvdW50RGVzYyA9IGFjY291bnRzW2tdO1xuICAgICAgICAgICAgY29uc3Qgc3ViQWNjb3VudHMgPSBhY2NvdW50RGVzYy5hY2NvdW50cztcbiAgICAgICAgICAgIGlmIChzdWJBY2NvdW50cykge1xuICAgICAgICAgICAgICAgIGZvdW5kICs9IGF3YWl0IHRoaXMucmVzb2x2ZVBkYXMoc3ViQWNjb3VudHMsIFtcbiAgICAgICAgICAgICAgICAgICAgLi4ucGF0aCxcbiAgICAgICAgICAgICAgICAgICAgY2FtZWxDYXNlKGFjY291bnREZXNjLm5hbWUpLFxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgYWNjb3VudERlc2NDYXN0ZWQgPSBhY2NvdW50RGVzYztcbiAgICAgICAgICAgIGNvbnN0IGFjY291bnREZXNjTmFtZSA9IGNhbWVsQ2FzZShhY2NvdW50RGVzYy5uYW1lKTtcbiAgICAgICAgICAgIC8vIFBEQSBkZXJpdmVkIGZyb20gSURMIHNlZWRzLlxuICAgICAgICAgICAgaWYgKGFjY291bnREZXNjQ2FzdGVkLnBkYSAmJlxuICAgICAgICAgICAgICAgIGFjY291bnREZXNjQ2FzdGVkLnBkYS5zZWVkcy5sZW5ndGggPiAwICYmXG4gICAgICAgICAgICAgICAgIXRoaXMuZ2V0KFsuLi5wYXRoLCBhY2NvdW50RGVzY05hbWVdKSkge1xuICAgICAgICAgICAgICAgIGlmIChCb29sZWFuKGF3YWl0IHRoaXMuYXV0b1BvcHVsYXRlUGRhKGFjY291bnREZXNjQ2FzdGVkLCBwYXRoKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgZm91bmQgKz0gMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZvdW5kO1xuICAgIH1cbiAgICBhc3luYyByZXNvbHZlUmVsYXRpb25zKGFjY291bnRzLCBwYXRoID0gW10pIHtcbiAgICAgICAgbGV0IGZvdW5kID0gMDtcbiAgICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCBhY2NvdW50cy5sZW5ndGg7IGsgKz0gMSkge1xuICAgICAgICAgICAgY29uc3QgYWNjb3VudERlc2MgPSBhY2NvdW50c1trXTtcbiAgICAgICAgICAgIGNvbnN0IHN1YkFjY291bnRzID0gYWNjb3VudERlc2MuYWNjb3VudHM7XG4gICAgICAgICAgICBpZiAoc3ViQWNjb3VudHMpIHtcbiAgICAgICAgICAgICAgICBmb3VuZCArPSBhd2FpdCB0aGlzLnJlc29sdmVSZWxhdGlvbnMoc3ViQWNjb3VudHMsIFtcbiAgICAgICAgICAgICAgICAgICAgLi4ucGF0aCxcbiAgICAgICAgICAgICAgICAgICAgY2FtZWxDYXNlKGFjY291bnREZXNjLm5hbWUpLFxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcmVsYXRpb25zID0gYWNjb3VudERlc2MucmVsYXRpb25zIHx8IFtdO1xuICAgICAgICAgICAgY29uc3QgYWNjb3VudERlc2NOYW1lID0gY2FtZWxDYXNlKGFjY291bnREZXNjLm5hbWUpO1xuICAgICAgICAgICAgY29uc3QgbmV3UGF0aCA9IFsuLi5wYXRoLCBhY2NvdW50RGVzY05hbWVdO1xuICAgICAgICAgICAgLy8gSWYgd2UgaGF2ZSB0aGlzIGFjY291bnQgYW5kIHRoZXJlJ3Mgc29tZSBtaXNzaW5nIGFjY291bnRzIHRoYXQgYXJlIHJlbGF0aW9ucyB0byB0aGlzIGFjY291bnQsIGZldGNoIHRoZW1cbiAgICAgICAgICAgIGNvbnN0IGFjY291bnRLZXkgPSB0aGlzLmdldChuZXdQYXRoKTtcbiAgICAgICAgICAgIGlmIChhY2NvdW50S2V5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbWF0Y2hpbmcgPSByZWxhdGlvbnMuZmlsdGVyKChyZWwpID0+ICF0aGlzLmdldChbLi4ucGF0aCwgY2FtZWxDYXNlKHJlbCldKSk7XG4gICAgICAgICAgICAgICAgZm91bmQgKz0gbWF0Y2hpbmcubGVuZ3RoO1xuICAgICAgICAgICAgICAgIGlmIChtYXRjaGluZy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGFjY291bnQgPSBhd2FpdCB0aGlzLl9hY2NvdW50U3RvcmUuZmV0Y2hBY2NvdW50KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHB1YmxpY0tleTogYWNjb3VudEtleSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IFByb21pc2UuYWxsKG1hdGNoaW5nLm1hcChhc3luYyAocmVsKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZWxOYW1lID0gY2FtZWxDYXNlKHJlbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldChbLi4ucGF0aCwgcmVsTmFtZV0sIGFjY291bnRbcmVsTmFtZV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFjY291bnRbcmVsTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZvdW5kO1xuICAgIH1cbiAgICBhc3luYyBhdXRvUG9wdWxhdGVQZGEoYWNjb3VudERlc2MsIHBhdGggPSBbXSkge1xuICAgICAgICBpZiAoIWFjY291bnREZXNjLnBkYSB8fCAhYWNjb3VudERlc2MucGRhLnNlZWRzKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTXVzdCBoYXZlIHNlZWRzXCIpO1xuICAgICAgICBjb25zdCBzZWVkcyA9IGF3YWl0IFByb21pc2UuYWxsKGFjY291bnREZXNjLnBkYS5zZWVkcy5tYXAoKHNlZWREZXNjKSA9PiB0aGlzLnRvQnVmZmVyKHNlZWREZXNjLCBwYXRoKSkpO1xuICAgICAgICBpZiAoc2VlZHMuc29tZSgoc2VlZCkgPT4gdHlwZW9mIHNlZWQgPT0gXCJ1bmRlZmluZWRcIikpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwcm9ncmFtSWQgPSBhd2FpdCB0aGlzLnBhcnNlUHJvZ3JhbUlkKGFjY291bnREZXNjLCBwYXRoKTtcbiAgICAgICAgaWYgKCFwcm9ncmFtSWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbcHVia2V5XSA9IGF3YWl0IFB1YmxpY0tleS5maW5kUHJvZ3JhbUFkZHJlc3Moc2VlZHMsIHByb2dyYW1JZCk7XG4gICAgICAgIHRoaXMuc2V0KFsuLi5wYXRoLCBjYW1lbENhc2UoYWNjb3VudERlc2MubmFtZSldLCBwdWJrZXkpO1xuICAgIH1cbiAgICBhc3luYyBwYXJzZVByb2dyYW1JZChhY2NvdW50RGVzYywgcGF0aCA9IFtdKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKCEoKF9hID0gYWNjb3VudERlc2MucGRhKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucHJvZ3JhbUlkKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3Byb2dyYW1JZDtcbiAgICAgICAgfVxuICAgICAgICBzd2l0Y2ggKGFjY291bnREZXNjLnBkYS5wcm9ncmFtSWQua2luZCkge1xuICAgICAgICAgICAgY2FzZSBcImNvbnN0XCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQdWJsaWNLZXkodGhpcy50b0J1ZmZlckNvbnN0KGFjY291bnREZXNjLnBkYS5wcm9ncmFtSWQudmFsdWUpKTtcbiAgICAgICAgICAgIGNhc2UgXCJhcmdcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5hcmdWYWx1ZShhY2NvdW50RGVzYy5wZGEucHJvZ3JhbUlkKTtcbiAgICAgICAgICAgIGNhc2UgXCJhY2NvdW50XCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuYWNjb3VudFZhbHVlKGFjY291bnREZXNjLnBkYS5wcm9ncmFtSWQsIHBhdGgpO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgcHJvZ3JhbSBzZWVkIGtpbmQ6ICR7YWNjb3VudERlc2MucGRhLnByb2dyYW1JZC5raW5kfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIHRvQnVmZmVyKHNlZWREZXNjLCBwYXRoID0gW10pIHtcbiAgICAgICAgc3dpdGNoIChzZWVkRGVzYy5raW5kKSB7XG4gICAgICAgICAgICBjYXNlIFwiY29uc3RcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy50b0J1ZmZlckNvbnN0KHNlZWREZXNjKTtcbiAgICAgICAgICAgIGNhc2UgXCJhcmdcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy50b0J1ZmZlckFyZyhzZWVkRGVzYyk7XG4gICAgICAgICAgICBjYXNlIFwiYWNjb3VudFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnRvQnVmZmVyQWNjb3VudChzZWVkRGVzYywgcGF0aCk7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCBzZWVkIGtpbmQ6ICR7c2VlZERlc2Mua2luZH1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWN1cnNpdmVseSBnZXQgdGhlIHR5cGUgYXQgc29tZSBwYXRoIG9mIGVpdGhlciBhIHByaW1pdGl2ZSBvciBhIHVzZXIgZGVmaW5lZCBzdHJ1Y3QuXG4gICAgICovXG4gICAgZ2V0VHlwZSh0eXBlLCBwYXRoID0gW10pIHtcbiAgICAgICAgaWYgKHBhdGgubGVuZ3RoID4gMCAmJiB0eXBlLmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IHN1YlR5cGUgPSB0aGlzLl9pZGxUeXBlcy5maW5kKCh0KSA9PiB0Lm5hbWUgPT09IHR5cGUuZGVmaW5lZCk7XG4gICAgICAgICAgICBpZiAoIXN1YlR5cGUpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBmaW5kIHR5cGUgJHt0eXBlLmRlZmluZWR9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBzdHJ1Y3RUeXBlID0gc3ViVHlwZS50eXBlOyAvLyBlbnVtIG5vdCBzdXBwb3J0ZWQgeWV0XG4gICAgICAgICAgICBjb25zdCBmaWVsZCA9IHN0cnVjdFR5cGUuZmllbGRzLmZpbmQoKGZpZWxkKSA9PiBmaWVsZC5uYW1lID09PSBwYXRoWzBdKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFR5cGUoZmllbGQudHlwZSwgcGF0aC5zbGljZSgxKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgfVxuICAgIHRvQnVmZmVyQ29uc3Qoc2VlZERlc2MpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudG9CdWZmZXJWYWx1ZSh0aGlzLmdldFR5cGUoc2VlZERlc2MudHlwZSwgKHNlZWREZXNjLnBhdGggfHwgXCJcIikuc3BsaXQoXCIuXCIpLnNsaWNlKDEpKSwgc2VlZERlc2MudmFsdWUpO1xuICAgIH1cbiAgICBhc3luYyB0b0J1ZmZlckFyZyhzZWVkRGVzYykge1xuICAgICAgICBjb25zdCBhcmdWYWx1ZSA9IHRoaXMuYXJnVmFsdWUoc2VlZERlc2MpO1xuICAgICAgICBpZiAodHlwZW9mIGFyZ1ZhbHVlID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMudG9CdWZmZXJWYWx1ZSh0aGlzLmdldFR5cGUoc2VlZERlc2MudHlwZSwgKHNlZWREZXNjLnBhdGggfHwgXCJcIikuc3BsaXQoXCIuXCIpLnNsaWNlKDEpKSwgYXJnVmFsdWUpO1xuICAgIH1cbiAgICBhcmdWYWx1ZShzZWVkRGVzYykge1xuICAgICAgICBjb25zdCBzcGxpdCA9IHNlZWREZXNjLnBhdGguc3BsaXQoXCIuXCIpO1xuICAgICAgICBjb25zdCBzZWVkQXJnTmFtZSA9IGNhbWVsQ2FzZShzcGxpdFswXSk7XG4gICAgICAgIGNvbnN0IGlkbEFyZ1Bvc2l0aW9uID0gdGhpcy5faWRsSXguYXJncy5maW5kSW5kZXgoKGFyZ0Rlc2MpID0+IGFyZ0Rlc2MubmFtZSA9PT0gc2VlZEFyZ05hbWUpO1xuICAgICAgICBpZiAoaWRsQXJnUG9zaXRpb24gPT09IC0xKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBmaW5kIGFyZ3VtZW50IGZvciBzZWVkOiAke3NlZWRBcmdOYW1lfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzcGxpdFxuICAgICAgICAgICAgLnNsaWNlKDEpXG4gICAgICAgICAgICAucmVkdWNlKChjdXJyLCBwYXRoKSA9PiAoY3VyciB8fCB7fSlbcGF0aF0sIHRoaXMuX2FyZ3NbaWRsQXJnUG9zaXRpb25dKTtcbiAgICB9XG4gICAgYXN5bmMgdG9CdWZmZXJBY2NvdW50KHNlZWREZXNjLCBwYXRoID0gW10pIHtcbiAgICAgICAgY29uc3QgYWNjb3VudFZhbHVlID0gYXdhaXQgdGhpcy5hY2NvdW50VmFsdWUoc2VlZERlc2MsIHBhdGgpO1xuICAgICAgICBpZiAoIWFjY291bnRWYWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnRvQnVmZmVyVmFsdWUoc2VlZERlc2MudHlwZSwgYWNjb3VudFZhbHVlKTtcbiAgICB9XG4gICAgYXN5bmMgYWNjb3VudFZhbHVlKHNlZWREZXNjLCBwYXRoID0gW10pIHtcbiAgICAgICAgY29uc3QgcGF0aENvbXBvbmVudHMgPSBzZWVkRGVzYy5wYXRoLnNwbGl0KFwiLlwiKTtcbiAgICAgICAgY29uc3QgZmllbGROYW1lID0gcGF0aENvbXBvbmVudHNbMF07XG4gICAgICAgIGNvbnN0IGZpZWxkUHVia2V5ID0gdGhpcy5nZXQoWy4uLnBhdGgsIGNhbWVsQ2FzZShmaWVsZE5hbWUpXSk7XG4gICAgICAgIGlmIChmaWVsZFB1YmtleSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBmaWVsZFB1YmtleSBpcyBudWxsYCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVGhlIHNlZWQgaXMgYSBwdWJrZXkgb2YgdGhlIGFjY291bnQuXG4gICAgICAgIGlmIChwYXRoQ29tcG9uZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIHJldHVybiBmaWVsZFB1YmtleTtcbiAgICAgICAgfVxuICAgICAgICAvLyBUaGUga2V5IGlzIGFjY291bnQgZGF0YS5cbiAgICAgICAgLy9cbiAgICAgICAgLy8gRmV0Y2ggYW5kIGRlc2VyaWFsaXplIGl0LlxuICAgICAgICBjb25zdCBhY2NvdW50ID0gYXdhaXQgdGhpcy5fYWNjb3VudFN0b3JlLmZldGNoQWNjb3VudCh7XG4gICAgICAgICAgICBwdWJsaWNLZXk6IGZpZWxkUHVia2V5LFxuICAgICAgICAgICAgbmFtZTogc2VlZERlc2MuYWNjb3VudCxcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIERlcmVmZXJlbmNlIGFsbCBmaWVsZHMgaW4gdGhlIHBhdGggdG8gZ2V0IHRoZSBmaWVsZCB2YWx1ZVxuICAgICAgICAvLyB1c2VkIGluIHRoZSBzZWVkLlxuICAgICAgICBjb25zdCBmaWVsZFZhbHVlID0gdGhpcy5wYXJzZUFjY291bnRWYWx1ZShhY2NvdW50LCBwYXRoQ29tcG9uZW50cy5zbGljZSgxKSk7XG4gICAgICAgIHJldHVybiBmaWVsZFZhbHVlO1xuICAgIH1cbiAgICBwYXJzZUFjY291bnRWYWx1ZShhY2NvdW50LCBwYXRoKSB7XG4gICAgICAgIGxldCBhY2NvdW50RmllbGQ7XG4gICAgICAgIHdoaWxlIChwYXRoLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGFjY291bnRGaWVsZCA9IGFjY291bnRbY2FtZWxDYXNlKHBhdGhbMF0pXTtcbiAgICAgICAgICAgIHBhdGggPSBwYXRoLnNsaWNlKDEpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2NvdW50RmllbGQ7XG4gICAgfVxuICAgIC8vIENvbnZlcnRzIHRoZSBnaXZlbiBpZGwgdmFsYXVlIGludG8gYSBCdWZmZXIuIFRoZSB2YWx1ZXMgaGVyZSBtdXN0IGJlXG4gICAgLy8gcHJpbWl0aXZlcy4gRS5nLiBubyBzdHJ1Y3RzLlxuICAgIC8vXG4gICAgLy8gVE9ETzogYWRkIG1vcmUgdHlwZXMgaGVyZSBhcyBuZWVkZWQuXG4gICAgdG9CdWZmZXJWYWx1ZSh0eXBlLCB2YWx1ZSkge1xuICAgICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJ1OFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShbdmFsdWVdKTtcbiAgICAgICAgICAgIGNhc2UgXCJ1MTZcIjpcbiAgICAgICAgICAgICAgICBsZXQgYiA9IEJ1ZmZlci5hbGxvYygyKTtcbiAgICAgICAgICAgICAgICBiLndyaXRlVUludDE2TEUodmFsdWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBiO1xuICAgICAgICAgICAgY2FzZSBcInUzMlwiOlxuICAgICAgICAgICAgICAgIGxldCBidWYgPSBCdWZmZXIuYWxsb2MoNCk7XG4gICAgICAgICAgICAgICAgYnVmLndyaXRlVUludDMyTEUodmFsdWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBidWY7XG4gICAgICAgICAgICBjYXNlIFwidTY0XCI6XG4gICAgICAgICAgICAgICAgbGV0IGJVNjQgPSBCdWZmZXIuYWxsb2MoOCk7XG4gICAgICAgICAgICAgICAgYlU2NC53cml0ZUJpZ1VJbnQ2NExFKEJpZ0ludCh2YWx1ZSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBiVTY0O1xuICAgICAgICAgICAgY2FzZSBcInN0cmluZ1wiOlxuICAgICAgICAgICAgICAgIHJldHVybiBCdWZmZXIuZnJvbSh1dGY4LmVuY29kZSh2YWx1ZSkpO1xuICAgICAgICAgICAgY2FzZSBcInB1YmxpY0tleVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZS50b0J1ZmZlcigpO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBpZiAodHlwZS5hcnJheSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20odmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgc2VlZCB0eXBlOiAke3R5cGV9YCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5BY2NvdW50c1Jlc29sdmVyLkNPTlNUX0FDQ09VTlRTID0ge1xuICAgIGFzc29jaWF0ZWRUb2tlblByb2dyYW06IEFTU09DSUFURURfUFJPR1JBTV9JRCxcbiAgICByZW50OiBTWVNWQVJfUkVOVF9QVUJLRVksXG4gICAgc3lzdGVtUHJvZ3JhbTogU3lzdGVtUHJvZ3JhbS5wcm9ncmFtSWQsXG4gICAgdG9rZW5Qcm9ncmFtOiBUT0tFTl9QUk9HUkFNX0lELFxuICAgIGNsb2NrOiBTWVNWQVJfQ0xPQ0tfUFVCS0VZLFxufTtcbi8vIFRPRE86IHRoaXMgc2hvdWxkIGJlIGNvbmZpZ3VyZWFibGUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgcmVxdWVzdHMuXG5leHBvcnQgY2xhc3MgQWNjb3VudFN0b3JlIHtcbiAgICAvLyB0b2RvOiBkb24ndCB1c2UgdGhlIHByb2dybWEgdXNlIHRoZSBhY2NvdW50IG5hbWVzcGFjZS5cbiAgICBjb25zdHJ1Y3RvcihfcHJvdmlkZXIsIF9hY2NvdW50cywgX3Byb2dyYW1JZCkge1xuICAgICAgICB0aGlzLl9wcm92aWRlciA9IF9wcm92aWRlcjtcbiAgICAgICAgdGhpcy5fcHJvZ3JhbUlkID0gX3Byb2dyYW1JZDtcbiAgICAgICAgdGhpcy5fY2FjaGUgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuX2lkbHMgPSB7fTtcbiAgICAgICAgdGhpcy5faWRsc1tfcHJvZ3JhbUlkLnRvQmFzZTU4KCldID0gX2FjY291bnRzO1xuICAgIH1cbiAgICBhc3luYyBlbnN1cmVJZGwocHJvZ3JhbUlkKSB7XG4gICAgICAgIGlmICghdGhpcy5faWRsc1twcm9ncmFtSWQudG9CYXNlNTgoKV0pIHtcbiAgICAgICAgICAgIGNvbnN0IGlkbCA9IGF3YWl0IFByb2dyYW0uZmV0Y2hJZGwocHJvZ3JhbUlkLCB0aGlzLl9wcm92aWRlcik7XG4gICAgICAgICAgICBpZiAoaWRsKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcHJvZ3JhbSA9IG5ldyBQcm9ncmFtKGlkbCwgcHJvZ3JhbUlkLCB0aGlzLl9wcm92aWRlcik7XG4gICAgICAgICAgICAgICAgdGhpcy5faWRsc1twcm9ncmFtSWQudG9CYXNlNTgoKV0gPSBwcm9ncmFtLmFjY291bnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2lkbHNbcHJvZ3JhbUlkLnRvQmFzZTU4KCldO1xuICAgIH1cbiAgICBhc3luYyBmZXRjaEFjY291bnQoeyBwdWJsaWNLZXksIG5hbWUsIHByb2dyYW1JZCA9IHRoaXMuX3Byb2dyYW1JZCwgfSkge1xuICAgICAgICBjb25zdCBhZGRyZXNzID0gcHVibGljS2V5LnRvU3RyaW5nKCk7XG4gICAgICAgIGlmICghdGhpcy5fY2FjaGUuaGFzKGFkZHJlc3MpKSB7XG4gICAgICAgICAgICBpZiAobmFtZSA9PT0gXCJUb2tlbkFjY291bnRcIikge1xuICAgICAgICAgICAgICAgIGNvbnN0IGFjY291bnRJbmZvID0gYXdhaXQgdGhpcy5fcHJvdmlkZXIuY29ubmVjdGlvbi5nZXRBY2NvdW50SW5mbyhwdWJsaWNLZXkpO1xuICAgICAgICAgICAgICAgIGlmIChhY2NvdW50SW5mbyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGludmFsaWQgYWNjb3VudCBpbmZvIGZvciAke2FkZHJlc3N9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBkZWNvZGVUb2tlbkFjY291bnQoYWNjb3VudEluZm8uZGF0YSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2FjaGUuc2V0KGFkZHJlc3MsIGRhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAobmFtZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgdGhpcy5lbnN1cmVJZGwocHJvZ3JhbUlkKTtcbiAgICAgICAgICAgICAgICBpZiAoYWNjb3VudHMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYWNjb3VudEZldGNoZXIgPSBhY2NvdW50c1tjYW1lbENhc2UobmFtZSldO1xuICAgICAgICAgICAgICAgICAgICBpZiAoYWNjb3VudEZldGNoZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFjY291bnQgPSBhd2FpdCBhY2NvdW50RmV0Y2hlci5mZXRjaChwdWJsaWNLZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FjaGUuc2V0KGFkZHJlc3MsIGFjY291bnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYWNjb3VudCA9IGF3YWl0IHRoaXMuX3Byb3ZpZGVyLmNvbm5lY3Rpb24uZ2V0QWNjb3VudEluZm8ocHVibGljS2V5KTtcbiAgICAgICAgICAgICAgICBpZiAoYWNjb3VudCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGludmFsaWQgYWNjb3VudCBpbmZvIGZvciAke2FkZHJlc3N9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhY2NvdW50LmRhdGE7XG4gICAgICAgICAgICAgICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCB0aGlzLmVuc3VyZUlkbChhY2NvdW50Lm93bmVyKTtcbiAgICAgICAgICAgICAgICBpZiAoYWNjb3VudHMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmlyc3RBY2NvdW50TGF5b3V0ID0gT2JqZWN0LnZhbHVlcyhhY2NvdW50cylbMF07XG4gICAgICAgICAgICAgICAgICAgIGlmICghZmlyc3RBY2NvdW50TGF5b3V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBhY2NvdW50cyBmb3IgdGhpcyBwcm9ncmFtXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGZpcnN0QWNjb3VudExheW91dC5jb2Rlci5hY2NvdW50cy5kZWNvZGVBbnkoZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NhY2hlLnNldChhZGRyZXNzLCByZXN1bHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2FjaGUuZ2V0KGFkZHJlc3MpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFjY291bnRzLXJlc29sdmVyLmpzLm1hcCJdLCJuYW1lcyI6WyJjYW1lbENhc2UiLCJQdWJsaWNLZXkiLCJTeXN0ZW1Qcm9ncmFtIiwiU1lTVkFSX0NMT0NLX1BVQktFWSIsIlNZU1ZBUl9SRU5UX1BVQktFWSIsImlzSWRsQWNjb3VudHMiLCJ1dGY4IiwiVE9LRU5fUFJPR1JBTV9JRCIsIkFTU09DSUFURURfUFJPR1JBTV9JRCIsImRlY29kZVRva2VuQWNjb3VudCIsIlByb2dyYW0iLCJ0cmFuc2xhdGVBZGRyZXNzIiwiZmxhdHRlblBhcnRpYWxBY2NvdW50cyIsImlzUGFydGlhbEFjY291bnRzIiwiaXNBY2NvdW50c0dlbmVyaWMiLCJhY2NvdW50cyIsIkFjY291bnRzUmVzb2x2ZXIiLCJjb25zdHJ1Y3RvciIsIl9hcmdzIiwiX2FjY291bnRzIiwiX3Byb3ZpZGVyIiwiX3Byb2dyYW1JZCIsIl9pZGxJeCIsIl9hY2NvdW50TmFtZXNwYWNlIiwiX2lkbFR5cGVzIiwiX2N1c3RvbVJlc29sdmVyIiwiX2FjY291bnRTdG9yZSIsIkFjY291bnRTdG9yZSIsImFyZ3MiLCJyZXNvbHZlIiwicmVzb2x2ZUNvbnN0IiwicmVzb2x2ZVBkYXMiLCJyZXNvbHZlUmVsYXRpb25zIiwicmVzb2x2ZUN1c3RvbSIsInJlc29sdmVkIiwicHJvdmlkZXIiLCJwcm9ncmFtSWQiLCJpZGxJeCIsInJlc29sdmVPcHRpb25hbHNIZWxwZXIiLCJwYXJ0aWFsQWNjb3VudHMiLCJhY2NvdW50SXRlbXMiLCJuZXN0ZWRBY2NvdW50c0dlbmVyaWMiLCJhY2NvdW50SXRlbSIsImFjY291bnROYW1lIiwibmFtZSIsInBhcnRpYWxBY2NvdW50IiwidW5kZWZpbmVkIiwicmVzb2x2ZU9wdGlvbmFscyIsIk9iamVjdCIsImFzc2lnbiIsImdldCIsInBhdGgiLCJyZXQiLCJyZWR1Y2UiLCJhY2MiLCJzdWJQYXRoIiwidG9CYXNlNTgiLCJzZXQiLCJ2YWx1ZSIsImN1cnIiLCJmb3JFYWNoIiwicCIsImlkeCIsImlzTGFzdCIsImxlbmd0aCIsImsiLCJhY2NvdW50RGVzY09yQWNjb3VudHMiLCJzdWJBY2NvdW50cyIsImFjY291bnREZXNjIiwiYWNjb3VudERlc2NOYW1lIiwiaXNTaWduZXIiLCJ3YWxsZXQiLCJFcnJvciIsInB1YmxpY0tleSIsIlJlZmxlY3QiLCJoYXMiLCJDT05TVF9BQ0NPVU5UUyIsImZvdW5kIiwiYWNjb3VudERlc2NDYXN0ZWQiLCJwZGEiLCJzZWVkcyIsIkJvb2xlYW4iLCJhdXRvUG9wdWxhdGVQZGEiLCJyZWxhdGlvbnMiLCJuZXdQYXRoIiwiYWNjb3VudEtleSIsIm1hdGNoaW5nIiwiZmlsdGVyIiwicmVsIiwiYWNjb3VudCIsImZldGNoQWNjb3VudCIsIlByb21pc2UiLCJhbGwiLCJtYXAiLCJyZWxOYW1lIiwic2VlZERlc2MiLCJ0b0J1ZmZlciIsInNvbWUiLCJzZWVkIiwicGFyc2VQcm9ncmFtSWQiLCJwdWJrZXkiLCJmaW5kUHJvZ3JhbUFkZHJlc3MiLCJfYSIsImtpbmQiLCJ0b0J1ZmZlckNvbnN0IiwiYXJnVmFsdWUiLCJhY2NvdW50VmFsdWUiLCJ0b0J1ZmZlckFyZyIsInRvQnVmZmVyQWNjb3VudCIsImdldFR5cGUiLCJ0eXBlIiwiZGVmaW5lZCIsInN1YlR5cGUiLCJmaW5kIiwidCIsInN0cnVjdFR5cGUiLCJmaWVsZCIsImZpZWxkcyIsInNsaWNlIiwidG9CdWZmZXJWYWx1ZSIsInNwbGl0Iiwic2VlZEFyZ05hbWUiLCJpZGxBcmdQb3NpdGlvbiIsImZpbmRJbmRleCIsImFyZ0Rlc2MiLCJwYXRoQ29tcG9uZW50cyIsImZpZWxkTmFtZSIsImZpZWxkUHVia2V5IiwiZmllbGRWYWx1ZSIsInBhcnNlQWNjb3VudFZhbHVlIiwiYWNjb3VudEZpZWxkIiwiQnVmZmVyIiwiZnJvbSIsImIiLCJhbGxvYyIsIndyaXRlVUludDE2TEUiLCJidWYiLCJ3cml0ZVVJbnQzMkxFIiwiYlU2NCIsIndyaXRlQmlnVUludDY0TEUiLCJCaWdJbnQiLCJlbmNvZGUiLCJhcnJheSIsImFzc29jaWF0ZWRUb2tlblByb2dyYW0iLCJyZW50Iiwic3lzdGVtUHJvZ3JhbSIsInRva2VuUHJvZ3JhbSIsImNsb2NrIiwiX2NhY2hlIiwiTWFwIiwiX2lkbHMiLCJlbnN1cmVJZGwiLCJpZGwiLCJmZXRjaElkbCIsInByb2dyYW0iLCJhZGRyZXNzIiwidG9TdHJpbmciLCJhY2NvdW50SW5mbyIsImNvbm5lY3Rpb24iLCJnZXRBY2NvdW50SW5mbyIsImRhdGEiLCJhY2NvdW50RmV0Y2hlciIsImZldGNoIiwib3duZXIiLCJmaXJzdEFjY291bnRMYXlvdXQiLCJ2YWx1ZXMiLCJyZXN1bHQiLCJjb2RlciIsImRlY29kZUFueSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/accounts-resolver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/common.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/common.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseIdlErrors: () => (/* binding */ parseIdlErrors),\n/* harmony export */   toInstruction: () => (/* binding */ toInstruction),\n/* harmony export */   translateAddress: () => (/* binding */ translateAddress),\n/* harmony export */   validateAccounts: () => (/* binding */ validateAccounts)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n\nfunction parseIdlErrors(idl) {\n    const errors = new Map();\n    if (idl.errors) {\n        idl.errors.forEach((e)=>{\n            var _a;\n            let msg = (_a = e.msg) !== null && _a !== void 0 ? _a : e.name;\n            errors.set(e.code, msg);\n        });\n    }\n    return errors;\n}\n// Allow either IdLInstruction or IdlStateMethod since the types share fields.\nfunction toInstruction(idlIx, ...args) {\n    if (idlIx.args.length != args.length) {\n        throw new Error(\"Invalid argument length\");\n    }\n    const ix = {};\n    let idx = 0;\n    idlIx.args.forEach((ixArg)=>{\n        ix[ixArg.name] = args[idx];\n        idx += 1;\n    });\n    return ix;\n}\n// Throws error if any account required for the `ix` is not given.\nfunction validateAccounts(ixAccounts, accounts = {}) {\n    ixAccounts.forEach((acc)=>{\n        if (\"accounts\" in acc) {\n            validateAccounts(acc.accounts, accounts[acc.name]);\n        } else {\n            if (accounts[acc.name] === undefined) {\n                throw new Error(`Invalid arguments: ${acc.name} not provided.`);\n            }\n        }\n    });\n}\n// Translates an address to a Pubkey.\nfunction translateAddress(address) {\n    return address instanceof _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey ? address : new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(address);\n} //# sourceMappingURL=common.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vY29tbW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTRDO0FBQ3JDLFNBQVNDLGVBQWVDLEdBQUc7SUFDOUIsTUFBTUMsU0FBUyxJQUFJQztJQUNuQixJQUFJRixJQUFJQyxNQUFNLEVBQUU7UUFDWkQsSUFBSUMsTUFBTSxDQUFDRSxPQUFPLENBQUMsQ0FBQ0M7WUFDaEIsSUFBSUM7WUFDSixJQUFJQyxNQUFNLENBQUNELEtBQUtELEVBQUVFLEdBQUcsTUFBTSxRQUFRRCxPQUFPLEtBQUssSUFBSUEsS0FBS0QsRUFBRUcsSUFBSTtZQUM5RE4sT0FBT08sR0FBRyxDQUFDSixFQUFFSyxJQUFJLEVBQUVIO1FBQ3ZCO0lBQ0o7SUFDQSxPQUFPTDtBQUNYO0FBQ0EsOEVBQThFO0FBQ3ZFLFNBQVNTLGNBQWNDLEtBQUssRUFBRSxHQUFHQyxJQUFJO0lBQ3hDLElBQUlELE1BQU1DLElBQUksQ0FBQ0MsTUFBTSxJQUFJRCxLQUFLQyxNQUFNLEVBQUU7UUFDbEMsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBQ0EsTUFBTUMsS0FBSyxDQUFDO0lBQ1osSUFBSUMsTUFBTTtJQUNWTCxNQUFNQyxJQUFJLENBQUNULE9BQU8sQ0FBQyxDQUFDYztRQUNoQkYsRUFBRSxDQUFDRSxNQUFNVixJQUFJLENBQUMsR0FBR0ssSUFBSSxDQUFDSSxJQUFJO1FBQzFCQSxPQUFPO0lBQ1g7SUFDQSxPQUFPRDtBQUNYO0FBQ0Esa0VBQWtFO0FBQzNELFNBQVNHLGlCQUFpQkMsVUFBVSxFQUFFQyxXQUFXLENBQUMsQ0FBQztJQUN0REQsV0FBV2hCLE9BQU8sQ0FBQyxDQUFDa0I7UUFDaEIsSUFBSSxjQUFjQSxLQUFLO1lBQ25CSCxpQkFBaUJHLElBQUlELFFBQVEsRUFBRUEsUUFBUSxDQUFDQyxJQUFJZCxJQUFJLENBQUM7UUFDckQsT0FDSztZQUNELElBQUlhLFFBQVEsQ0FBQ0MsSUFBSWQsSUFBSSxDQUFDLEtBQUtlLFdBQVc7Z0JBQ2xDLE1BQU0sSUFBSVIsTUFBTSxDQUFDLG1CQUFtQixFQUFFTyxJQUFJZCxJQUFJLENBQUMsY0FBYyxDQUFDO1lBQ2xFO1FBQ0o7SUFDSjtBQUNKO0FBQ0EscUNBQXFDO0FBQzlCLFNBQVNnQixpQkFBaUJDLE9BQU87SUFDcEMsT0FBT0EsbUJBQW1CMUIsc0RBQVNBLEdBQUcwQixVQUFVLElBQUkxQixzREFBU0EsQ0FBQzBCO0FBQ2xFLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL0Bwcm9qZWN0LXNlcnVtL2FuY2hvci9kaXN0L2VzbS9wcm9ncmFtL2NvbW1vbi5qcz82MmE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFB1YmxpY0tleSB9IGZyb20gXCJAc29sYW5hL3dlYjMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUlkbEVycm9ycyhpZGwpIHtcbiAgICBjb25zdCBlcnJvcnMgPSBuZXcgTWFwKCk7XG4gICAgaWYgKGlkbC5lcnJvcnMpIHtcbiAgICAgICAgaWRsLmVycm9ycy5mb3JFYWNoKChlKSA9PiB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBsZXQgbXNnID0gKF9hID0gZS5tc2cpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGUubmFtZTtcbiAgICAgICAgICAgIGVycm9ycy5zZXQoZS5jb2RlLCBtc2cpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGVycm9ycztcbn1cbi8vIEFsbG93IGVpdGhlciBJZExJbnN0cnVjdGlvbiBvciBJZGxTdGF0ZU1ldGhvZCBzaW5jZSB0aGUgdHlwZXMgc2hhcmUgZmllbGRzLlxuZXhwb3J0IGZ1bmN0aW9uIHRvSW5zdHJ1Y3Rpb24oaWRsSXgsIC4uLmFyZ3MpIHtcbiAgICBpZiAoaWRsSXguYXJncy5sZW5ndGggIT0gYXJncy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudCBsZW5ndGhcIik7XG4gICAgfVxuICAgIGNvbnN0IGl4ID0ge307XG4gICAgbGV0IGlkeCA9IDA7XG4gICAgaWRsSXguYXJncy5mb3JFYWNoKChpeEFyZykgPT4ge1xuICAgICAgICBpeFtpeEFyZy5uYW1lXSA9IGFyZ3NbaWR4XTtcbiAgICAgICAgaWR4ICs9IDE7XG4gICAgfSk7XG4gICAgcmV0dXJuIGl4O1xufVxuLy8gVGhyb3dzIGVycm9yIGlmIGFueSBhY2NvdW50IHJlcXVpcmVkIGZvciB0aGUgYGl4YCBpcyBub3QgZ2l2ZW4uXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVBY2NvdW50cyhpeEFjY291bnRzLCBhY2NvdW50cyA9IHt9KSB7XG4gICAgaXhBY2NvdW50cy5mb3JFYWNoKChhY2MpID0+IHtcbiAgICAgICAgaWYgKFwiYWNjb3VudHNcIiBpbiBhY2MpIHtcbiAgICAgICAgICAgIHZhbGlkYXRlQWNjb3VudHMoYWNjLmFjY291bnRzLCBhY2NvdW50c1thY2MubmFtZV0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKGFjY291bnRzW2FjYy5uYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGFyZ3VtZW50czogJHthY2MubmFtZX0gbm90IHByb3ZpZGVkLmApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59XG4vLyBUcmFuc2xhdGVzIGFuIGFkZHJlc3MgdG8gYSBQdWJrZXkuXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNsYXRlQWRkcmVzcyhhZGRyZXNzKSB7XG4gICAgcmV0dXJuIGFkZHJlc3MgaW5zdGFuY2VvZiBQdWJsaWNLZXkgPyBhZGRyZXNzIDogbmV3IFB1YmxpY0tleShhZGRyZXNzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbW1vbi5qcy5tYXAiXSwibmFtZXMiOlsiUHVibGljS2V5IiwicGFyc2VJZGxFcnJvcnMiLCJpZGwiLCJlcnJvcnMiLCJNYXAiLCJmb3JFYWNoIiwiZSIsIl9hIiwibXNnIiwibmFtZSIsInNldCIsImNvZGUiLCJ0b0luc3RydWN0aW9uIiwiaWRsSXgiLCJhcmdzIiwibGVuZ3RoIiwiRXJyb3IiLCJpeCIsImlkeCIsIml4QXJnIiwidmFsaWRhdGVBY2NvdW50cyIsIml4QWNjb3VudHMiLCJhY2NvdW50cyIsImFjYyIsInVuZGVmaW5lZCIsInRyYW5zbGF0ZUFkZHJlc3MiLCJhZGRyZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/context.js":
/*!************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/context.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   splitArgsAndCtx: () => (/* binding */ splitArgsAndCtx)\n/* harmony export */ });\nfunction splitArgsAndCtx(idlIx, args) {\n    var _a, _b;\n    let options = {};\n    const inputLen = idlIx.args ? idlIx.args.length : 0;\n    if (args.length > inputLen) {\n        if (args.length !== inputLen + 1) {\n            throw new Error(`provided too many arguments ${args} to instruction ${idlIx === null || idlIx === void 0 ? void 0 : idlIx.name} expecting: ${(_b = (_a = idlIx.args) === null || _a === void 0 ? void 0 : _a.map((a)=>a.name)) !== null && _b !== void 0 ? _b : []}`);\n        }\n        options = args.pop();\n    }\n    return [\n        args,\n        options\n    ];\n} //# sourceMappingURL=context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vY29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsZ0JBQWdCQyxLQUFLLEVBQUVDLElBQUk7SUFDdkMsSUFBSUMsSUFBSUM7SUFDUixJQUFJQyxVQUFVLENBQUM7SUFDZixNQUFNQyxXQUFXTCxNQUFNQyxJQUFJLEdBQUdELE1BQU1DLElBQUksQ0FBQ0ssTUFBTSxHQUFHO0lBQ2xELElBQUlMLEtBQUtLLE1BQU0sR0FBR0QsVUFBVTtRQUN4QixJQUFJSixLQUFLSyxNQUFNLEtBQUtELFdBQVcsR0FBRztZQUM5QixNQUFNLElBQUlFLE1BQU0sQ0FBQyw0QkFBNEIsRUFBRU4sS0FBSyxnQkFBZ0IsRUFBRUQsVUFBVSxRQUFRQSxVQUFVLEtBQUssSUFBSSxLQUFLLElBQUlBLE1BQU1RLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQ0wsS0FBSyxDQUFDRCxLQUFLRixNQUFNQyxJQUFJLE1BQU0sUUFBUUMsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHTyxHQUFHLENBQUMsQ0FBQ0MsSUFBTUEsRUFBRUYsSUFBSSxPQUFPLFFBQVFMLE9BQU8sS0FBSyxJQUFJQSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQzFRO1FBQ0FDLFVBQVVILEtBQUtVLEdBQUc7SUFDdEI7SUFDQSxPQUFPO1FBQUNWO1FBQU1HO0tBQVE7QUFDMUIsRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vY29udGV4dC5qcz80MzdlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBzcGxpdEFyZ3NBbmRDdHgoaWRsSXgsIGFyZ3MpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGxldCBvcHRpb25zID0ge307XG4gICAgY29uc3QgaW5wdXRMZW4gPSBpZGxJeC5hcmdzID8gaWRsSXguYXJncy5sZW5ndGggOiAwO1xuICAgIGlmIChhcmdzLmxlbmd0aCA+IGlucHV0TGVuKSB7XG4gICAgICAgIGlmIChhcmdzLmxlbmd0aCAhPT0gaW5wdXRMZW4gKyAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYHByb3ZpZGVkIHRvbyBtYW55IGFyZ3VtZW50cyAke2FyZ3N9IHRvIGluc3RydWN0aW9uICR7aWRsSXggPT09IG51bGwgfHwgaWRsSXggPT09IHZvaWQgMCA/IHZvaWQgMCA6IGlkbEl4Lm5hbWV9IGV4cGVjdGluZzogJHsoX2IgPSAoX2EgPSBpZGxJeC5hcmdzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubWFwKChhKSA9PiBhLm5hbWUpKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBbXX1gKTtcbiAgICAgICAgfVxuICAgICAgICBvcHRpb25zID0gYXJncy5wb3AoKTtcbiAgICB9XG4gICAgcmV0dXJuIFthcmdzLCBvcHRpb25zXTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRleHQuanMubWFwIl0sIm5hbWVzIjpbInNwbGl0QXJnc0FuZEN0eCIsImlkbEl4IiwiYXJncyIsIl9hIiwiX2IiLCJvcHRpb25zIiwiaW5wdXRMZW4iLCJsZW5ndGgiLCJFcnJvciIsIm5hbWUiLCJtYXAiLCJhIiwicG9wIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/context.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/event.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/event.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventManager: () => (/* binding */ EventManager),\n/* harmony export */   EventParser: () => (/* binding */ EventParser)\n/* harmony export */ });\n/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! assert */ \"assert\");\n/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_0__);\n\nconst PROGRAM_LOG = \"Program log: \";\nconst PROGRAM_DATA = \"Program data: \";\nconst PROGRAM_LOG_START_INDEX = PROGRAM_LOG.length;\nconst PROGRAM_DATA_START_INDEX = PROGRAM_DATA.length;\nclass EventManager {\n    constructor(programId, provider, coder){\n        this._programId = programId;\n        this._provider = provider;\n        this._eventParser = new EventParser(programId, coder);\n        this._eventCallbacks = new Map();\n        this._eventListeners = new Map();\n        this._listenerIdCount = 0;\n    }\n    addEventListener(eventName, callback) {\n        var _a;\n        let listener = this._listenerIdCount;\n        this._listenerIdCount += 1;\n        // Store the listener into the event map.\n        if (!this._eventListeners.has(eventName)) {\n            this._eventListeners.set(eventName, []);\n        }\n        this._eventListeners.set(eventName, ((_a = this._eventListeners.get(eventName)) !== null && _a !== void 0 ? _a : []).concat(listener));\n        // Store the callback into the listener map.\n        this._eventCallbacks.set(listener, [\n            eventName,\n            callback\n        ]);\n        // Create the subscription singleton, if needed.\n        if (this._onLogsSubscriptionId !== undefined) {\n            return listener;\n        }\n        this._onLogsSubscriptionId = this._provider.connection.onLogs(this._programId, (logs, ctx)=>{\n            if (logs.err) {\n                return;\n            }\n            for (const event of this._eventParser.parseLogs(logs.logs)){\n                const allListeners = this._eventListeners.get(event.name);\n                if (allListeners) {\n                    allListeners.forEach((listener)=>{\n                        const listenerCb = this._eventCallbacks.get(listener);\n                        if (listenerCb) {\n                            const [, callback] = listenerCb;\n                            callback(event.data, ctx.slot, logs.signature);\n                        }\n                    });\n                }\n            }\n        });\n        return listener;\n    }\n    async removeEventListener(listener) {\n        // Get the callback.\n        const callback = this._eventCallbacks.get(listener);\n        if (!callback) {\n            throw new Error(`Event listener ${listener} doesn't exist!`);\n        }\n        const [eventName] = callback;\n        // Get the listeners.\n        let listeners = this._eventListeners.get(eventName);\n        if (!listeners) {\n            throw new Error(`Event listeners don't exist for ${eventName}!`);\n        }\n        // Update both maps.\n        this._eventCallbacks.delete(listener);\n        listeners = listeners.filter((l)=>l !== listener);\n        this._eventListeners.set(eventName, listeners);\n        if (listeners.length === 0) {\n            this._eventListeners.delete(eventName);\n        }\n        // Kill the websocket connection if all listeners have been removed.\n        if (this._eventCallbacks.size == 0) {\n            assert__WEBPACK_IMPORTED_MODULE_0__.ok(this._eventListeners.size === 0);\n            if (this._onLogsSubscriptionId !== undefined) {\n                await this._provider.connection.removeOnLogsListener(this._onLogsSubscriptionId);\n                this._onLogsSubscriptionId = undefined;\n            }\n        }\n    }\n}\nclass EventParser {\n    constructor(programId, coder){\n        this.coder = coder;\n        this.programId = programId;\n    }\n    // Each log given, represents an array of messages emitted by\n    // a single transaction, which can execute many different programs across\n    // CPI boundaries. However, the subscription is only interested in the\n    // events emitted by *this* program. In achieving this, we keep track of the\n    // program execution context by parsing each log and looking for a CPI\n    // `invoke` call. If one exists, we know a new program is executing. So we\n    // push the programId onto a stack and switch the program context. This\n    // allows us to track, for a given log, which program was executing during\n    // its emission, thereby allowing us to know if a given log event was\n    // emitted by *this* program. If it was, then we parse the raw string and\n    // emit the event if the string matches the event being subscribed to.\n    *parseLogs(logs, errorOnDecodeFailure = false) {\n        const logScanner = new LogScanner(logs);\n        const execution = new ExecutionContext();\n        let log = logScanner.next();\n        while(log !== null){\n            let [event, newProgram, didPop] = this.handleLog(execution, log, errorOnDecodeFailure);\n            if (event) {\n                yield event;\n            }\n            if (newProgram) {\n                execution.push(newProgram);\n            }\n            if (didPop) {\n                execution.pop();\n            }\n            log = logScanner.next();\n        }\n    }\n    // Main log handler. Returns a three element array of the event, the\n    // next program that was invoked for CPI, and a boolean indicating if\n    // a program has completed execution (and thus should be popped off the\n    // execution stack).\n    handleLog(execution, log, errorOnDecodeFailure) {\n        // Executing program is this program.\n        if (execution.stack.length > 0 && execution.program() === this.programId.toString()) {\n            return this.handleProgramLog(log, errorOnDecodeFailure);\n        } else {\n            return [\n                null,\n                ...this.handleSystemLog(log)\n            ];\n        }\n    }\n    // Handles logs from *this* program.\n    handleProgramLog(log, errorOnDecodeFailure) {\n        // This is a `msg!` log or a `sol_log_data` log.\n        if (log.startsWith(PROGRAM_LOG) || log.startsWith(PROGRAM_DATA)) {\n            const logStr = log.startsWith(PROGRAM_LOG) ? log.slice(PROGRAM_LOG_START_INDEX) : log.slice(PROGRAM_DATA_START_INDEX);\n            const event = this.coder.events.decode(logStr);\n            if (errorOnDecodeFailure && event === null) {\n                throw new Error(`Unable to decode event ${logStr}`);\n            }\n            return [\n                event,\n                null,\n                false\n            ];\n        } else {\n            return [\n                null,\n                ...this.handleSystemLog(log)\n            ];\n        }\n    }\n    // Handles logs when the current program being executing is *not* this.\n    handleSystemLog(log) {\n        // System component.\n        const logStart = log.split(\":\")[0];\n        // Did the program finish executing?\n        if (logStart.match(/^Program (.*) success/g) !== null) {\n            return [\n                null,\n                true\n            ];\n        // Recursive call.\n        } else if (logStart.startsWith(`Program ${this.programId.toString()} invoke`)) {\n            return [\n                this.programId.toString(),\n                false\n            ];\n        } else if (logStart.includes(\"invoke\")) {\n            return [\n                \"cpi\",\n                false\n            ]; // Any string will do.\n        } else {\n            return [\n                null,\n                false\n            ];\n        }\n    }\n}\n// Stack frame execution context, allowing one to track what program is\n// executing for a given log.\nclass ExecutionContext {\n    constructor(){\n        this.stack = [];\n    }\n    program() {\n        assert__WEBPACK_IMPORTED_MODULE_0__.ok(this.stack.length > 0);\n        return this.stack[this.stack.length - 1];\n    }\n    push(newProgram) {\n        this.stack.push(newProgram);\n    }\n    pop() {\n        assert__WEBPACK_IMPORTED_MODULE_0__.ok(this.stack.length > 0);\n        this.stack.pop();\n    }\n}\nclass LogScanner {\n    constructor(logs){\n        this.logs = logs;\n    }\n    next() {\n        if (this.logs.length === 0) {\n            return null;\n        }\n        let l = this.logs[0];\n        this.logs = this.logs.slice(1);\n        return l;\n    }\n} //# sourceMappingURL=event.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/event.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountClient: () => (/* reexport safe */ _namespace_index_js__WEBPACK_IMPORTED_MODULE_4__.AccountClient),\n/* harmony export */   EventManager: () => (/* reexport safe */ _event_js__WEBPACK_IMPORTED_MODULE_6__.EventManager),\n/* harmony export */   EventParser: () => (/* reexport safe */ _event_js__WEBPACK_IMPORTED_MODULE_6__.EventParser),\n/* harmony export */   MethodsBuilderFactory: () => (/* reexport safe */ _namespace_index_js__WEBPACK_IMPORTED_MODULE_4__.MethodsBuilderFactory),\n/* harmony export */   Program: () => (/* binding */ Program),\n/* harmony export */   StateClient: () => (/* reexport safe */ _namespace_index_js__WEBPACK_IMPORTED_MODULE_4__.StateClient),\n/* harmony export */   parseIdlErrors: () => (/* reexport safe */ _common_js__WEBPACK_IMPORTED_MODULE_7__.parseIdlErrors),\n/* harmony export */   splitArgsAndCtx: () => (/* reexport safe */ _context_js__WEBPACK_IMPORTED_MODULE_8__.splitArgsAndCtx),\n/* harmony export */   toInstruction: () => (/* reexport safe */ _common_js__WEBPACK_IMPORTED_MODULE_7__.toInstruction),\n/* harmony export */   translateAddress: () => (/* reexport safe */ _common_js__WEBPACK_IMPORTED_MODULE_7__.translateAddress),\n/* harmony export */   validateAccounts: () => (/* reexport safe */ _common_js__WEBPACK_IMPORTED_MODULE_7__.validateAccounts)\n/* harmony export */ });\n/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pako */ \"(ssr)/./node_modules/pako/dist/pako.esm.mjs\");\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../provider.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/provider.js\");\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../idl.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/idl.js\");\n/* harmony import */ var _coder_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../coder/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/index.js\");\n/* harmony import */ var _namespace_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./namespace/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/index.js\");\n/* harmony import */ var _utils_bytes_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/bytes/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/index.js\");\n/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./event.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/event.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/common.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./context.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/context.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * ## Program\n *\n * Program provides the IDL deserialized client representation of an Anchor\n * program.\n *\n * This API is the one stop shop for all things related to communicating with\n * on-chain programs. Among other things, one can send transactions, fetch\n * deserialized accounts, decode instruction data, subscribe to account\n * changes, and listen to events.\n *\n * In addition to field accessors and methods, the object provides a set of\n * dynamically generated properties, also known as namespaces, that\n * map one-to-one to program methods and accounts. These namespaces generally\n *  can be used as follows:\n *\n * ## Usage\n *\n * ```javascript\n * program.<namespace>.<program-specific-method>\n * ```\n *\n * API specifics are namespace dependent. The examples used in the documentation\n * below will refer to the two counter examples found\n * [here](https://github.com/coral-xyz/anchor#examples).\n */ class Program {\n    /**\n     * Address of the program.\n     */ get programId() {\n        return this._programId;\n    }\n    /**\n     * IDL defining the program's interface.\n     */ get idl() {\n        return this._idl;\n    }\n    /**\n     * Coder for serializing requests.\n     */ get coder() {\n        return this._coder;\n    }\n    /**\n     * Wallet and network provider.\n     */ get provider() {\n        return this._provider;\n    }\n    /**\n     * @param idl       The interface definition.\n     * @param programId The on-chain address of the program.\n     * @param provider  The network and wallet context to use. If not provided\n     *                  then uses [[getProvider]].\n     * @param getCustomResolver A function that returns a custom account resolver\n     *                          for the given instruction. This is useful for resolving\n     *                          public keys of missing accounts when building instructions\n     */ constructor(idl, programId, provider, coder, getCustomResolver){\n        programId = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.translateAddress)(programId);\n        if (!provider) {\n            provider = (0,_provider_js__WEBPACK_IMPORTED_MODULE_1__.getProvider)();\n        }\n        // Fields.\n        this._idl = idl;\n        this._provider = provider;\n        this._programId = programId;\n        this._coder = coder !== null && coder !== void 0 ? coder : new _coder_index_js__WEBPACK_IMPORTED_MODULE_3__.BorshCoder(idl);\n        this._events = new _event_js__WEBPACK_IMPORTED_MODULE_6__.EventManager(this._programId, provider, this._coder);\n        // Dynamic namespaces.\n        const [rpc, instruction, transaction, account, simulate, methods, state, views] = _namespace_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].build(idl, this._coder, programId, provider, getCustomResolver !== null && getCustomResolver !== void 0 ? getCustomResolver : ()=>undefined);\n        this.rpc = rpc;\n        this.instruction = instruction;\n        this.transaction = transaction;\n        this.account = account;\n        this.simulate = simulate;\n        this.methods = methods;\n        this.state = state;\n        this.views = views;\n    }\n    /**\n     * Generates a Program client by fetching the IDL from the network.\n     *\n     * In order to use this method, an IDL must have been previously initialized\n     * via the anchor CLI's `anchor idl init` command.\n     *\n     * @param programId The on-chain address of the program.\n     * @param provider  The network and wallet context.\n     */ static async at(address, provider) {\n        const programId = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.translateAddress)(address);\n        const idl = await Program.fetchIdl(programId, provider);\n        if (!idl) {\n            throw new Error(`IDL not found for program: ${address.toString()}`);\n        }\n        return new Program(idl, programId, provider);\n    }\n    /**\n     * Fetches an idl from the blockchain.\n     *\n     * In order to use this method, an IDL must have been previously initialized\n     * via the anchor CLI's `anchor idl init` command.\n     *\n     * @param programId The on-chain address of the program.\n     * @param provider  The network and wallet context.\n     */ static async fetchIdl(address, provider) {\n        provider = provider !== null && provider !== void 0 ? provider : (0,_provider_js__WEBPACK_IMPORTED_MODULE_1__.getProvider)();\n        const programId = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.translateAddress)(address);\n        const idlAddr = await (0,_idl_js__WEBPACK_IMPORTED_MODULE_2__.idlAddress)(programId);\n        const accountInfo = await provider.connection.getAccountInfo(idlAddr);\n        if (!accountInfo) {\n            return null;\n        }\n        // Chop off account discriminator.\n        let idlAccount = (0,_idl_js__WEBPACK_IMPORTED_MODULE_2__.decodeIdlAccount)(accountInfo.data.slice(8));\n        const inflatedIdl = (0,pako__WEBPACK_IMPORTED_MODULE_0__.inflate)(idlAccount.data);\n        return JSON.parse(_utils_bytes_index_js__WEBPACK_IMPORTED_MODULE_5__.utf8.decode(inflatedIdl));\n    }\n    /**\n     * Invokes the given callback every time the given event is emitted.\n     *\n     * @param eventName The PascalCase name of the event, provided by the IDL.\n     * @param callback  The function to invoke whenever the event is emitted from\n     *                  program logs.\n     */ addEventListener(eventName, callback) {\n        return this._events.addEventListener(eventName, callback);\n    }\n    /**\n     * Unsubscribes from the given eventName.\n     */ async removeEventListener(listener) {\n        return await this._events.removeEventListener(listener);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/account.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/namespace/account.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountClient: () => (/* binding */ AccountClient),\n/* harmony export */   \"default\": () => (/* binding */ AccountFactory)\n/* harmony export */ });\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! camelcase */ \"(ssr)/./node_modules/camelcase/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(camelcase__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/eventemitter3/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../provider.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/provider.js\");\n/* harmony import */ var _coder_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../coder/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/index.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/common.js\");\n/* harmony import */ var _utils_pubkey_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/pubkey.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/pubkey.js\");\n/* harmony import */ var _utils_rpc_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/rpc.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/rpc.js\");\n\n\n\n\n\n\n\n\nclass AccountFactory {\n    static build(idl, coder, programId, provider) {\n        var _a;\n        const accountFns = {};\n        (_a = idl.accounts) === null || _a === void 0 ? void 0 : _a.forEach((idlAccount)=>{\n            const name = camelcase__WEBPACK_IMPORTED_MODULE_0___default()(idlAccount.name);\n            accountFns[name] = new AccountClient(idl, idlAccount, programId, provider, coder);\n        });\n        return accountFns;\n    }\n}\nclass AccountClient {\n    /**\n     * Returns the number of bytes in this account.\n     */ get size() {\n        return this._size;\n    }\n    /**\n     * Returns the program ID owning all accounts.\n     */ get programId() {\n        return this._programId;\n    }\n    /**\n     * Returns the client's wallet and network provider.\n     */ get provider() {\n        return this._provider;\n    }\n    /**\n     * Returns the coder.\n     */ get coder() {\n        return this._coder;\n    }\n    constructor(idl, idlAccount, programId, provider, coder){\n        this._idlAccount = idlAccount;\n        this._programId = programId;\n        this._provider = provider !== null && provider !== void 0 ? provider : (0,_provider_js__WEBPACK_IMPORTED_MODULE_3__.getProvider)();\n        this._coder = coder !== null && coder !== void 0 ? coder : new _coder_index_js__WEBPACK_IMPORTED_MODULE_4__.BorshCoder(idl);\n        this._size = this._coder.accounts.size(idlAccount);\n    }\n    /**\n     * Returns a deserialized account, returning null if it doesn't exist.\n     *\n     * @param address The address of the account to fetch.\n     */ async fetchNullable(address, commitment) {\n        const { data } = await this.fetchNullableAndContext(address, commitment);\n        return data;\n    }\n    /**\n     * Returns a deserialized account along with the associated rpc response context, returning null if it doesn't exist.\n     *\n     * @param address The address of the account to fetch.\n     */ async fetchNullableAndContext(address, commitment) {\n        const accountInfo = await this.getAccountInfoAndContext(address, commitment);\n        const { value, context } = accountInfo;\n        return {\n            data: value && value.data.length !== 0 ? this._coder.accounts.decode(this._idlAccount.name, value.data) : null,\n            context\n        };\n    }\n    /**\n     * Returns a deserialized account.\n     *\n     * @param address The address of the account to fetch.\n     */ async fetch(address, commitment) {\n        const { data } = await this.fetchNullableAndContext(address, commitment);\n        if (data === null) {\n            throw new Error(`Account does not exist or has no data ${address.toString()}`);\n        }\n        return data;\n    }\n    /**\n     * Returns a deserialized account along with the associated rpc response context.\n     *\n     * @param address The address of the account to fetch.\n     */ async fetchAndContext(address, commitment) {\n        const { data, context } = await this.fetchNullableAndContext(address, commitment);\n        if (data === null) {\n            throw new Error(`Account does not exist ${address.toString()}`);\n        }\n        return {\n            data,\n            context\n        };\n    }\n    /**\n     * Returns multiple deserialized accounts.\n     * Accounts not found or with wrong discriminator are returned as null.\n     *\n     * @param addresses The addresses of the accounts to fetch.\n     */ async fetchMultiple(addresses, commitment) {\n        const accounts = await this.fetchMultipleAndContext(addresses, commitment);\n        return accounts.map((account)=>account ? account.data : null);\n    }\n    /**\n     * Returns multiple deserialized accounts.\n     * Accounts not found or with wrong discriminator are returned as null.\n     *\n     * @param addresses The addresses of the accounts to fetch.\n     */ async fetchMultipleAndContext(addresses, commitment) {\n        const accounts = await _utils_rpc_js__WEBPACK_IMPORTED_MODULE_7__.getMultipleAccountsAndContext(this._provider.connection, addresses.map((address)=>(0,_common_js__WEBPACK_IMPORTED_MODULE_5__.translateAddress)(address)), commitment);\n        // Decode accounts where discriminator is correct, null otherwise\n        return accounts.map((result)=>{\n            if (result == null) {\n                return null;\n            }\n            const { account, context } = result;\n            return {\n                data: this._coder.accounts.decode(this._idlAccount.name, account.data),\n                context\n            };\n        });\n    }\n    /**\n     * Returns all instances of this account type for the program.\n     *\n     * @param filters User-provided filters to narrow the results from `connection.getProgramAccounts`.\n     *\n     *                When filters are not defined this method returns all\n     *                the account instances.\n     *\n     *                When filters are of type `Buffer`, the filters are appended\n     *                after the discriminator.\n     *\n     *                When filters are of type `GetProgramAccountsFilter[]`,\n     *                filters are appended after the discriminator filter.\n     */ async all(filters) {\n        const filter = this.coder.accounts.memcmp(this._idlAccount.name, filters instanceof Buffer ? filters : undefined);\n        const coderFilters = [];\n        if ((filter === null || filter === void 0 ? void 0 : filter.offset) != undefined && (filter === null || filter === void 0 ? void 0 : filter.bytes) != undefined) {\n            coderFilters.push({\n                memcmp: {\n                    offset: filter.offset,\n                    bytes: filter.bytes\n                }\n            });\n        }\n        if ((filter === null || filter === void 0 ? void 0 : filter.dataSize) != undefined) {\n            coderFilters.push({\n                dataSize: filter.dataSize\n            });\n        }\n        let resp = await this._provider.connection.getProgramAccounts(this._programId, {\n            commitment: this._provider.connection.commitment,\n            filters: [\n                ...coderFilters,\n                ...Array.isArray(filters) ? filters : []\n            ]\n        });\n        return resp.map(({ pubkey, account })=>{\n            return {\n                publicKey: pubkey,\n                account: this._coder.accounts.decode(this._idlAccount.name, account.data)\n            };\n        });\n    }\n    /**\n     * Returns an `EventEmitter` emitting a \"change\" event whenever the account\n     * changes.\n     */ subscribe(address, commitment) {\n        const sub = subscriptions.get(address.toString());\n        if (sub) {\n            return sub.ee;\n        }\n        const ee = new (eventemitter3__WEBPACK_IMPORTED_MODULE_1___default())();\n        address = (0,_common_js__WEBPACK_IMPORTED_MODULE_5__.translateAddress)(address);\n        const listener = this._provider.connection.onAccountChange(address, (acc)=>{\n            const account = this._coder.accounts.decode(this._idlAccount.name, acc.data);\n            ee.emit(\"change\", account);\n        }, commitment);\n        subscriptions.set(address.toString(), {\n            ee,\n            listener\n        });\n        return ee;\n    }\n    /**\n     * Unsubscribes from the account at the given address.\n     */ async unsubscribe(address) {\n        let sub = subscriptions.get(address.toString());\n        if (!sub) {\n            console.warn(\"Address is not subscribed\");\n            return;\n        }\n        if (subscriptions) {\n            await this._provider.connection.removeAccountChangeListener(sub.listener).then(()=>{\n                subscriptions.delete(address.toString());\n            }).catch(console.error);\n        }\n    }\n    /**\n     * Returns an instruction for creating this account.\n     */ async createInstruction(signer, sizeOverride) {\n        const size = this.size;\n        if (this._provider.publicKey === undefined) {\n            throw new Error(\"This function requires the Provider interface implementor to have a 'publicKey' field.\");\n        }\n        return _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.SystemProgram.createAccount({\n            fromPubkey: this._provider.publicKey,\n            newAccountPubkey: signer.publicKey,\n            space: sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size,\n            lamports: await this._provider.connection.getMinimumBalanceForRentExemption(sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size),\n            programId: this._programId\n        });\n    }\n    /**\n     * @deprecated since version 14.0.\n     *\n     * Function returning the associated account. Args are keys to associate.\n     * Order matters.\n     */ async associated(...args) {\n        const addr = await this.associatedAddress(...args);\n        return await this.fetch(addr);\n    }\n    /**\n     * @deprecated since version 14.0.\n     *\n     * Function returning the associated address. Args are keys to associate.\n     * Order matters.\n     */ async associatedAddress(...args) {\n        return await _utils_pubkey_js__WEBPACK_IMPORTED_MODULE_6__.associated(this._programId, ...args);\n    }\n    async getAccountInfo(address, commitment) {\n        return await this._provider.connection.getAccountInfo((0,_common_js__WEBPACK_IMPORTED_MODULE_5__.translateAddress)(address), commitment);\n    }\n    async getAccountInfoAndContext(address, commitment) {\n        return await this._provider.connection.getAccountInfoAndContext((0,_common_js__WEBPACK_IMPORTED_MODULE_5__.translateAddress)(address), commitment);\n    }\n}\n// Tracks all subscriptions.\nconst subscriptions = new Map(); //# sourceMappingURL=account.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/account.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/namespace/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountClient: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_5__.AccountClient),\n/* harmony export */   MethodsBuilderFactory: () => (/* reexport safe */ _methods__WEBPACK_IMPORTED_MODULE_8__.MethodsBuilderFactory),\n/* harmony export */   StateClient: () => (/* reexport safe */ _state_js__WEBPACK_IMPORTED_MODULE_1__.StateClient),\n/* harmony export */   \"default\": () => (/* binding */ NamespaceFactory)\n/* harmony export */ });\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! camelcase */ \"(ssr)/./node_modules/camelcase/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(camelcase__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./state.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/state.js\");\n/* harmony import */ var _instruction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./instruction.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/instruction.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transaction.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/transaction.js\");\n/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rpc.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/rpc.js\");\n/* harmony import */ var _account_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./account.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/account.js\");\n/* harmony import */ var _simulate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./simulate.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/simulate.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/common.js\");\n/* harmony import */ var _methods__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./methods */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/methods.js\");\n/* harmony import */ var _views__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./views */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/views.js\");\n\n\n\n\n\n\n\n\n\n\n// Re-exports.\n\n\n\nclass NamespaceFactory {\n    /**\n     * Generates all namespaces for a given program.\n     */ static build(idl, coder, programId, provider, getCustomResolver) {\n        const rpc = {};\n        const instruction = {};\n        const transaction = {};\n        const simulate = {};\n        const methods = {};\n        const view = {};\n        const idlErrors = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.parseIdlErrors)(idl);\n        const account = idl.accounts ? _account_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].build(idl, coder, programId, provider) : {};\n        const state = _state_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].build(idl, coder, programId, provider);\n        idl.instructions.forEach((idlIx)=>{\n            const ixItem = _instruction_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].build(idlIx, (ixName, ix)=>coder.instruction.encode(ixName, ix), programId);\n            const txItem = _transaction_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].build(idlIx, ixItem);\n            const rpcItem = _rpc_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].build(idlIx, txItem, idlErrors, provider);\n            const simulateItem = _simulate_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].build(idlIx, txItem, idlErrors, provider, coder, programId, idl);\n            const viewItem = _views__WEBPACK_IMPORTED_MODULE_9__[\"default\"].build(programId, idlIx, simulateItem, idl);\n            const methodItem = _methods__WEBPACK_IMPORTED_MODULE_8__.MethodsBuilderFactory.build(provider, programId, idlIx, ixItem, txItem, rpcItem, simulateItem, viewItem, account, idl.types || [], getCustomResolver && getCustomResolver(idlIx));\n            const name = camelcase__WEBPACK_IMPORTED_MODULE_0___default()(idlIx.name);\n            instruction[name] = ixItem;\n            transaction[name] = txItem;\n            rpc[name] = rpcItem;\n            simulate[name] = simulateItem;\n            methods[name] = methodItem;\n            if (viewItem) {\n                view[name] = viewItem;\n            }\n        });\n        return [\n            rpc,\n            instruction,\n            transaction,\n            account,\n            simulate,\n            methods,\n            state,\n            view\n        ];\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFrQztBQUNJO0FBQ1k7QUFDQTtBQUNoQjtBQUNRO0FBQ0U7QUFDRTtBQUNJO0FBQ2hCO0FBQ2xDLGNBQWM7QUFDMkI7QUFDSTtBQUNLO0FBQ25DLE1BQU1ZO0lBQ2pCOztLQUVDLEdBQ0QsT0FBT0MsTUFBTUMsR0FBRyxFQUFFQyxLQUFLLEVBQUVDLFNBQVMsRUFBRUMsUUFBUSxFQUFFQyxpQkFBaUIsRUFBRTtRQUM3RCxNQUFNQyxNQUFNLENBQUM7UUFDYixNQUFNQyxjQUFjLENBQUM7UUFDckIsTUFBTUMsY0FBYyxDQUFDO1FBQ3JCLE1BQU1DLFdBQVcsQ0FBQztRQUNsQixNQUFNQyxVQUFVLENBQUM7UUFDakIsTUFBTUMsT0FBTyxDQUFDO1FBQ2QsTUFBTUMsWUFBWWxCLDBEQUFjQSxDQUFDTztRQUNqQyxNQUFNWSxVQUFVWixJQUFJYSxRQUFRLEdBQ3RCdEIsbURBQWNBLENBQUNRLEtBQUssQ0FBQ0MsS0FBS0MsT0FBT0MsV0FBV0MsWUFDNUMsQ0FBQztRQUNQLE1BQU1XLFFBQVEzQixpREFBWUEsQ0FBQ1ksS0FBSyxDQUFDQyxLQUFLQyxPQUFPQyxXQUFXQztRQUN4REgsSUFBSWUsWUFBWSxDQUFDQyxPQUFPLENBQUMsQ0FBQ0M7WUFDdEIsTUFBTUMsU0FBUzlCLHVEQUFrQkEsQ0FBQ1csS0FBSyxDQUFDa0IsT0FBTyxDQUFDRSxRQUFRQyxLQUFPbkIsTUFBTUssV0FBVyxDQUFDZSxNQUFNLENBQUNGLFFBQVFDLEtBQUtsQjtZQUNyRyxNQUFNb0IsU0FBU2pDLHVEQUFrQkEsQ0FBQ1UsS0FBSyxDQUFDa0IsT0FBT0M7WUFDL0MsTUFBTUssVUFBVWpDLCtDQUFVQSxDQUFDUyxLQUFLLENBQUNrQixPQUFPSyxRQUFRWCxXQUFXUjtZQUMzRCxNQUFNcUIsZUFBZWhDLG9EQUFlQSxDQUFDTyxLQUFLLENBQUNrQixPQUFPSyxRQUFRWCxXQUFXUixVQUFVRixPQUFPQyxXQUFXRjtZQUNqRyxNQUFNeUIsV0FBVzlCLDhDQUFXQSxDQUFDSSxLQUFLLENBQUNHLFdBQVdlLE9BQU9PLGNBQWN4QjtZQUNuRSxNQUFNMEIsYUFBYWhDLDJEQUFxQkEsQ0FBQ0ssS0FBSyxDQUFDSSxVQUFVRCxXQUFXZSxPQUFPQyxRQUFRSSxRQUFRQyxTQUFTQyxjQUFjQyxVQUFVYixTQUFTWixJQUFJMkIsS0FBSyxJQUFJLEVBQUUsRUFBRXZCLHFCQUFxQkEsa0JBQWtCYTtZQUM3TCxNQUFNVyxPQUFPMUMsZ0RBQVNBLENBQUMrQixNQUFNVyxJQUFJO1lBQ2pDdEIsV0FBVyxDQUFDc0IsS0FBSyxHQUFHVjtZQUNwQlgsV0FBVyxDQUFDcUIsS0FBSyxHQUFHTjtZQUNwQmpCLEdBQUcsQ0FBQ3VCLEtBQUssR0FBR0w7WUFDWmYsUUFBUSxDQUFDb0IsS0FBSyxHQUFHSjtZQUNqQmYsT0FBTyxDQUFDbUIsS0FBSyxHQUFHRjtZQUNoQixJQUFJRCxVQUFVO2dCQUNWZixJQUFJLENBQUNrQixLQUFLLEdBQUdIO1lBQ2pCO1FBQ0o7UUFDQSxPQUFPO1lBQ0hwQjtZQUNBQztZQUNBQztZQUNBSztZQUNBSjtZQUNBQztZQUNBSztZQUNBSjtTQUNIO0lBQ0w7QUFDSixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9AcHJvamVjdC1zZXJ1bS9hbmNob3IvZGlzdC9lc20vcHJvZ3JhbS9uYW1lc3BhY2UvaW5kZXguanM/ZDY0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2FtZWxDYXNlIGZyb20gXCJjYW1lbGNhc2VcIjtcbmltcG9ydCBTdGF0ZUZhY3RvcnkgZnJvbSBcIi4vc3RhdGUuanNcIjtcbmltcG9ydCBJbnN0cnVjdGlvbkZhY3RvcnkgZnJvbSBcIi4vaW5zdHJ1Y3Rpb24uanNcIjtcbmltcG9ydCBUcmFuc2FjdGlvbkZhY3RvcnkgZnJvbSBcIi4vdHJhbnNhY3Rpb24uanNcIjtcbmltcG9ydCBScGNGYWN0b3J5IGZyb20gXCIuL3JwYy5qc1wiO1xuaW1wb3J0IEFjY291bnRGYWN0b3J5IGZyb20gXCIuL2FjY291bnQuanNcIjtcbmltcG9ydCBTaW11bGF0ZUZhY3RvcnkgZnJvbSBcIi4vc2ltdWxhdGUuanNcIjtcbmltcG9ydCB7IHBhcnNlSWRsRXJyb3JzIH0gZnJvbSBcIi4uL2NvbW1vbi5qc1wiO1xuaW1wb3J0IHsgTWV0aG9kc0J1aWxkZXJGYWN0b3J5IH0gZnJvbSBcIi4vbWV0aG9kc1wiO1xuaW1wb3J0IFZpZXdGYWN0b3J5IGZyb20gXCIuL3ZpZXdzXCI7XG4vLyBSZS1leHBvcnRzLlxuZXhwb3J0IHsgU3RhdGVDbGllbnQgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiO1xuZXhwb3J0IHsgQWNjb3VudENsaWVudCB9IGZyb20gXCIuL2FjY291bnQuanNcIjtcbmV4cG9ydCB7IE1ldGhvZHNCdWlsZGVyRmFjdG9yeSB9IGZyb20gXCIuL21ldGhvZHNcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5hbWVzcGFjZUZhY3Rvcnkge1xuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyBhbGwgbmFtZXNwYWNlcyBmb3IgYSBnaXZlbiBwcm9ncmFtLlxuICAgICAqL1xuICAgIHN0YXRpYyBidWlsZChpZGwsIGNvZGVyLCBwcm9ncmFtSWQsIHByb3ZpZGVyLCBnZXRDdXN0b21SZXNvbHZlcikge1xuICAgICAgICBjb25zdCBycGMgPSB7fTtcbiAgICAgICAgY29uc3QgaW5zdHJ1Y3Rpb24gPSB7fTtcbiAgICAgICAgY29uc3QgdHJhbnNhY3Rpb24gPSB7fTtcbiAgICAgICAgY29uc3Qgc2ltdWxhdGUgPSB7fTtcbiAgICAgICAgY29uc3QgbWV0aG9kcyA9IHt9O1xuICAgICAgICBjb25zdCB2aWV3ID0ge307XG4gICAgICAgIGNvbnN0IGlkbEVycm9ycyA9IHBhcnNlSWRsRXJyb3JzKGlkbCk7XG4gICAgICAgIGNvbnN0IGFjY291bnQgPSBpZGwuYWNjb3VudHNcbiAgICAgICAgICAgID8gQWNjb3VudEZhY3RvcnkuYnVpbGQoaWRsLCBjb2RlciwgcHJvZ3JhbUlkLCBwcm92aWRlcilcbiAgICAgICAgICAgIDoge307XG4gICAgICAgIGNvbnN0IHN0YXRlID0gU3RhdGVGYWN0b3J5LmJ1aWxkKGlkbCwgY29kZXIsIHByb2dyYW1JZCwgcHJvdmlkZXIpO1xuICAgICAgICBpZGwuaW5zdHJ1Y3Rpb25zLmZvckVhY2goKGlkbEl4KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpeEl0ZW0gPSBJbnN0cnVjdGlvbkZhY3RvcnkuYnVpbGQoaWRsSXgsIChpeE5hbWUsIGl4KSA9PiBjb2Rlci5pbnN0cnVjdGlvbi5lbmNvZGUoaXhOYW1lLCBpeCksIHByb2dyYW1JZCk7XG4gICAgICAgICAgICBjb25zdCB0eEl0ZW0gPSBUcmFuc2FjdGlvbkZhY3RvcnkuYnVpbGQoaWRsSXgsIGl4SXRlbSk7XG4gICAgICAgICAgICBjb25zdCBycGNJdGVtID0gUnBjRmFjdG9yeS5idWlsZChpZGxJeCwgdHhJdGVtLCBpZGxFcnJvcnMsIHByb3ZpZGVyKTtcbiAgICAgICAgICAgIGNvbnN0IHNpbXVsYXRlSXRlbSA9IFNpbXVsYXRlRmFjdG9yeS5idWlsZChpZGxJeCwgdHhJdGVtLCBpZGxFcnJvcnMsIHByb3ZpZGVyLCBjb2RlciwgcHJvZ3JhbUlkLCBpZGwpO1xuICAgICAgICAgICAgY29uc3Qgdmlld0l0ZW0gPSBWaWV3RmFjdG9yeS5idWlsZChwcm9ncmFtSWQsIGlkbEl4LCBzaW11bGF0ZUl0ZW0sIGlkbCk7XG4gICAgICAgICAgICBjb25zdCBtZXRob2RJdGVtID0gTWV0aG9kc0J1aWxkZXJGYWN0b3J5LmJ1aWxkKHByb3ZpZGVyLCBwcm9ncmFtSWQsIGlkbEl4LCBpeEl0ZW0sIHR4SXRlbSwgcnBjSXRlbSwgc2ltdWxhdGVJdGVtLCB2aWV3SXRlbSwgYWNjb3VudCwgaWRsLnR5cGVzIHx8IFtdLCBnZXRDdXN0b21SZXNvbHZlciAmJiBnZXRDdXN0b21SZXNvbHZlcihpZGxJeCkpO1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGNhbWVsQ2FzZShpZGxJeC5uYW1lKTtcbiAgICAgICAgICAgIGluc3RydWN0aW9uW25hbWVdID0gaXhJdGVtO1xuICAgICAgICAgICAgdHJhbnNhY3Rpb25bbmFtZV0gPSB0eEl0ZW07XG4gICAgICAgICAgICBycGNbbmFtZV0gPSBycGNJdGVtO1xuICAgICAgICAgICAgc2ltdWxhdGVbbmFtZV0gPSBzaW11bGF0ZUl0ZW07XG4gICAgICAgICAgICBtZXRob2RzW25hbWVdID0gbWV0aG9kSXRlbTtcbiAgICAgICAgICAgIGlmICh2aWV3SXRlbSkge1xuICAgICAgICAgICAgICAgIHZpZXdbbmFtZV0gPSB2aWV3SXRlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBycGMsXG4gICAgICAgICAgICBpbnN0cnVjdGlvbixcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uLFxuICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgICAgIHNpbXVsYXRlLFxuICAgICAgICAgICAgbWV0aG9kcyxcbiAgICAgICAgICAgIHN0YXRlLFxuICAgICAgICAgICAgdmlldyxcbiAgICAgICAgXTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiY2FtZWxDYXNlIiwiU3RhdGVGYWN0b3J5IiwiSW5zdHJ1Y3Rpb25GYWN0b3J5IiwiVHJhbnNhY3Rpb25GYWN0b3J5IiwiUnBjRmFjdG9yeSIsIkFjY291bnRGYWN0b3J5IiwiU2ltdWxhdGVGYWN0b3J5IiwicGFyc2VJZGxFcnJvcnMiLCJNZXRob2RzQnVpbGRlckZhY3RvcnkiLCJWaWV3RmFjdG9yeSIsIlN0YXRlQ2xpZW50IiwiQWNjb3VudENsaWVudCIsIk5hbWVzcGFjZUZhY3RvcnkiLCJidWlsZCIsImlkbCIsImNvZGVyIiwicHJvZ3JhbUlkIiwicHJvdmlkZXIiLCJnZXRDdXN0b21SZXNvbHZlciIsInJwYyIsImluc3RydWN0aW9uIiwidHJhbnNhY3Rpb24iLCJzaW11bGF0ZSIsIm1ldGhvZHMiLCJ2aWV3IiwiaWRsRXJyb3JzIiwiYWNjb3VudCIsImFjY291bnRzIiwic3RhdGUiLCJpbnN0cnVjdGlvbnMiLCJmb3JFYWNoIiwiaWRsSXgiLCJpeEl0ZW0iLCJpeE5hbWUiLCJpeCIsImVuY29kZSIsInR4SXRlbSIsInJwY0l0ZW0iLCJzaW11bGF0ZUl0ZW0iLCJ2aWV3SXRlbSIsIm1ldGhvZEl0ZW0iLCJ0eXBlcyIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/instruction.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/namespace/instruction.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InstructionNamespaceFactory)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/error.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/common.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/context.js\");\n/* harmony import */ var _utils_features_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/features.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/features.js\");\n\n\n\n\n\nclass InstructionNamespaceFactory {\n    static build(idlIx, encodeFn, programId) {\n        if (idlIx.name === \"_inner\") {\n            throw new _error_js__WEBPACK_IMPORTED_MODULE_1__.IdlError(\"the _inner name is reserved\");\n        }\n        const ix = (...args)=>{\n            const [ixArgs, ctx] = (0,_context_js__WEBPACK_IMPORTED_MODULE_3__.splitArgsAndCtx)(idlIx, [\n                ...args\n            ]);\n            (0,_common_js__WEBPACK_IMPORTED_MODULE_2__.validateAccounts)(idlIx.accounts, ctx.accounts);\n            validateInstruction(idlIx, ...args);\n            const keys = ix.accounts(ctx.accounts);\n            if (ctx.remainingAccounts !== undefined) {\n                keys.push(...ctx.remainingAccounts);\n            }\n            if (_utils_features_js__WEBPACK_IMPORTED_MODULE_4__.isSet(\"debug-logs\")) {\n                console.log(\"Outgoing account metas:\", keys);\n            }\n            return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({\n                keys,\n                programId,\n                data: encodeFn(idlIx.name, (0,_common_js__WEBPACK_IMPORTED_MODULE_2__.toInstruction)(idlIx, ...ixArgs))\n            });\n        };\n        // Utility fn for ordering the accounts for this instruction.\n        ix[\"accounts\"] = (accs)=>{\n            return InstructionNamespaceFactory.accountsArray(accs, idlIx.accounts, programId, idlIx.name);\n        };\n        return ix;\n    }\n    static accountsArray(ctx, accounts, programId, ixName) {\n        if (!ctx) {\n            return [];\n        }\n        return accounts.map((acc)=>{\n            // Nested accounts.\n            const nestedAccounts = \"accounts\" in acc ? acc.accounts : undefined;\n            if (nestedAccounts !== undefined) {\n                const rpcAccs = ctx[acc.name];\n                return InstructionNamespaceFactory.accountsArray(rpcAccs, acc.accounts, programId, ixName).flat();\n            } else {\n                const account = acc;\n                let pubkey;\n                try {\n                    pubkey = (0,_common_js__WEBPACK_IMPORTED_MODULE_2__.translateAddress)(ctx[acc.name]);\n                } catch (err) {\n                    throw new Error(`Wrong input type for account \"${acc.name}\" in the instruction accounts object${ixName !== undefined ? ' for instruction \"' + ixName + '\"' : \"\"}. Expected PublicKey or string.`);\n                }\n                const optional = account.isOptional && pubkey.equals(programId);\n                const isWritable = account.isMut && !optional;\n                const isSigner = account.isSigner && !optional;\n                return {\n                    pubkey,\n                    isWritable,\n                    isSigner\n                };\n            }\n        }).flat();\n    }\n}\n// Throws error if any argument required for the `ix` is not given.\nfunction validateInstruction(ix, ...args) {\n// todo\n} //# sourceMappingURL=instruction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL2luc3RydWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwRDtBQUNoQjtBQUN3QztBQUNsQztBQUNJO0FBQ3JDLE1BQU1PO0lBQ2pCLE9BQU9DLE1BQU1DLEtBQUssRUFBRUMsUUFBUSxFQUFFQyxTQUFTLEVBQUU7UUFDckMsSUFBSUYsTUFBTUcsSUFBSSxLQUFLLFVBQVU7WUFDekIsTUFBTSxJQUFJWCwrQ0FBUUEsQ0FBQztRQUN2QjtRQUNBLE1BQU1ZLEtBQUssQ0FBQyxHQUFHQztZQUNYLE1BQU0sQ0FBQ0MsUUFBUUMsSUFBSSxHQUFHWCw0REFBZUEsQ0FBQ0ksT0FBTzttQkFBSUs7YUFBSztZQUN0RFYsNERBQWdCQSxDQUFDSyxNQUFNUSxRQUFRLEVBQUVELElBQUlDLFFBQVE7WUFDN0NDLG9CQUFvQlQsVUFBVUs7WUFDOUIsTUFBTUssT0FBT04sR0FBR0ksUUFBUSxDQUFDRCxJQUFJQyxRQUFRO1lBQ3JDLElBQUlELElBQUlJLGlCQUFpQixLQUFLQyxXQUFXO2dCQUNyQ0YsS0FBS0csSUFBSSxJQUFJTixJQUFJSSxpQkFBaUI7WUFDdEM7WUFDQSxJQUFJZCxxREFBYyxDQUFDLGVBQWU7Z0JBQzlCa0IsUUFBUUMsR0FBRyxDQUFDLDJCQUEyQk47WUFDM0M7WUFDQSxPQUFPLElBQUluQixtRUFBc0JBLENBQUM7Z0JBQzlCbUI7Z0JBQ0FSO2dCQUNBZSxNQUFNaEIsU0FBU0QsTUFBTUcsSUFBSSxFQUFFVix5REFBYUEsQ0FBQ08sVUFBVU07WUFDdkQ7UUFDSjtRQUNBLDZEQUE2RDtRQUM3REYsRUFBRSxDQUFDLFdBQVcsR0FBRyxDQUFDYztZQUNkLE9BQU9wQiw0QkFBNEJxQixhQUFhLENBQUNELE1BQU1sQixNQUFNUSxRQUFRLEVBQUVOLFdBQVdGLE1BQU1HLElBQUk7UUFDaEc7UUFDQSxPQUFPQztJQUNYO0lBQ0EsT0FBT2UsY0FBY1osR0FBRyxFQUFFQyxRQUFRLEVBQUVOLFNBQVMsRUFBRWtCLE1BQU0sRUFBRTtRQUNuRCxJQUFJLENBQUNiLEtBQUs7WUFDTixPQUFPLEVBQUU7UUFDYjtRQUNBLE9BQU9DLFNBQ0ZhLEdBQUcsQ0FBQyxDQUFDQztZQUNOLG1CQUFtQjtZQUNuQixNQUFNQyxpQkFBaUIsY0FBY0QsTUFBTUEsSUFBSWQsUUFBUSxHQUFHSTtZQUMxRCxJQUFJVyxtQkFBbUJYLFdBQVc7Z0JBQzlCLE1BQU1ZLFVBQVVqQixHQUFHLENBQUNlLElBQUluQixJQUFJLENBQUM7Z0JBQzdCLE9BQU9MLDRCQUE0QnFCLGFBQWEsQ0FBQ0ssU0FBU0YsSUFBSWQsUUFBUSxFQUFFTixXQUFXa0IsUUFBUUssSUFBSTtZQUNuRyxPQUNLO2dCQUNELE1BQU1DLFVBQVVKO2dCQUNoQixJQUFJSztnQkFDSixJQUFJO29CQUNBQSxTQUFTakMsNERBQWdCQSxDQUFDYSxHQUFHLENBQUNlLElBQUluQixJQUFJLENBQUM7Z0JBQzNDLEVBQ0EsT0FBT3lCLEtBQUs7b0JBQ1IsTUFBTSxJQUFJQyxNQUFNLENBQUMsOEJBQThCLEVBQUVQLElBQUluQixJQUFJLENBQUMsb0NBQW9DLEVBQUVpQixXQUFXUixZQUFZLHVCQUF1QlEsU0FBUyxNQUFNLEdBQUcsK0JBQStCLENBQUM7Z0JBQ3BNO2dCQUNBLE1BQU1VLFdBQVdKLFFBQVFLLFVBQVUsSUFBSUosT0FBT0ssTUFBTSxDQUFDOUI7Z0JBQ3JELE1BQU0rQixhQUFhUCxRQUFRUSxLQUFLLElBQUksQ0FBQ0o7Z0JBQ3JDLE1BQU1LLFdBQVdULFFBQVFTLFFBQVEsSUFBSSxDQUFDTDtnQkFDdEMsT0FBTztvQkFDSEg7b0JBQ0FNO29CQUNBRTtnQkFDSjtZQUNKO1FBQ0osR0FDS1YsSUFBSTtJQUNiO0FBQ0o7QUFDQSxtRUFBbUU7QUFDbkUsU0FBU2hCLG9CQUFvQkwsRUFBRSxFQUFFLEdBQUdDLElBQUk7QUFDcEMsT0FBTztBQUNYLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL0Bwcm9qZWN0LXNlcnVtL2FuY2hvci9kaXN0L2VzbS9wcm9ncmFtL25hbWVzcGFjZS9pbnN0cnVjdGlvbi5qcz8xYTkxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24sIH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiO1xuaW1wb3J0IHsgSWRsRXJyb3IgfSBmcm9tIFwiLi4vLi4vZXJyb3IuanNcIjtcbmltcG9ydCB7IHRvSW5zdHJ1Y3Rpb24sIHRyYW5zbGF0ZUFkZHJlc3MsIHZhbGlkYXRlQWNjb3VudHMsIH0gZnJvbSBcIi4uL2NvbW1vbi5qc1wiO1xuaW1wb3J0IHsgc3BsaXRBcmdzQW5kQ3R4IH0gZnJvbSBcIi4uL2NvbnRleHQuanNcIjtcbmltcG9ydCAqIGFzIGZlYXR1cmVzIGZyb20gXCIuLi8uLi91dGlscy9mZWF0dXJlcy5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5zdHJ1Y3Rpb25OYW1lc3BhY2VGYWN0b3J5IHtcbiAgICBzdGF0aWMgYnVpbGQoaWRsSXgsIGVuY29kZUZuLCBwcm9ncmFtSWQpIHtcbiAgICAgICAgaWYgKGlkbEl4Lm5hbWUgPT09IFwiX2lubmVyXCIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBJZGxFcnJvcihcInRoZSBfaW5uZXIgbmFtZSBpcyByZXNlcnZlZFwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpeCA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBbaXhBcmdzLCBjdHhdID0gc3BsaXRBcmdzQW5kQ3R4KGlkbEl4LCBbLi4uYXJnc10pO1xuICAgICAgICAgICAgdmFsaWRhdGVBY2NvdW50cyhpZGxJeC5hY2NvdW50cywgY3R4LmFjY291bnRzKTtcbiAgICAgICAgICAgIHZhbGlkYXRlSW5zdHJ1Y3Rpb24oaWRsSXgsIC4uLmFyZ3MpO1xuICAgICAgICAgICAgY29uc3Qga2V5cyA9IGl4LmFjY291bnRzKGN0eC5hY2NvdW50cyk7XG4gICAgICAgICAgICBpZiAoY3R4LnJlbWFpbmluZ0FjY291bnRzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBrZXlzLnB1c2goLi4uY3R4LnJlbWFpbmluZ0FjY291bnRzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChmZWF0dXJlcy5pc1NldChcImRlYnVnLWxvZ3NcIikpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk91dGdvaW5nIGFjY291bnQgbWV0YXM6XCIsIGtleXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkluc3RydWN0aW9uKHtcbiAgICAgICAgICAgICAgICBrZXlzLFxuICAgICAgICAgICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAgICAgICAgICBkYXRhOiBlbmNvZGVGbihpZGxJeC5uYW1lLCB0b0luc3RydWN0aW9uKGlkbEl4LCAuLi5peEFyZ3MpKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICAvLyBVdGlsaXR5IGZuIGZvciBvcmRlcmluZyB0aGUgYWNjb3VudHMgZm9yIHRoaXMgaW5zdHJ1Y3Rpb24uXG4gICAgICAgIGl4W1wiYWNjb3VudHNcIl0gPSAoYWNjcykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIEluc3RydWN0aW9uTmFtZXNwYWNlRmFjdG9yeS5hY2NvdW50c0FycmF5KGFjY3MsIGlkbEl4LmFjY291bnRzLCBwcm9ncmFtSWQsIGlkbEl4Lm5hbWUpO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gaXg7XG4gICAgfVxuICAgIHN0YXRpYyBhY2NvdW50c0FycmF5KGN0eCwgYWNjb3VudHMsIHByb2dyYW1JZCwgaXhOYW1lKSB7XG4gICAgICAgIGlmICghY3R4KSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFjY291bnRzXG4gICAgICAgICAgICAubWFwKChhY2MpID0+IHtcbiAgICAgICAgICAgIC8vIE5lc3RlZCBhY2NvdW50cy5cbiAgICAgICAgICAgIGNvbnN0IG5lc3RlZEFjY291bnRzID0gXCJhY2NvdW50c1wiIGluIGFjYyA/IGFjYy5hY2NvdW50cyA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIGlmIChuZXN0ZWRBY2NvdW50cyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcnBjQWNjcyA9IGN0eFthY2MubmFtZV07XG4gICAgICAgICAgICAgICAgcmV0dXJuIEluc3RydWN0aW9uTmFtZXNwYWNlRmFjdG9yeS5hY2NvdW50c0FycmF5KHJwY0FjY3MsIGFjYy5hY2NvdW50cywgcHJvZ3JhbUlkLCBpeE5hbWUpLmZsYXQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IGFjY291bnQgPSBhY2M7XG4gICAgICAgICAgICAgICAgbGV0IHB1YmtleTtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBwdWJrZXkgPSB0cmFuc2xhdGVBZGRyZXNzKGN0eFthY2MubmFtZV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgV3JvbmcgaW5wdXQgdHlwZSBmb3IgYWNjb3VudCBcIiR7YWNjLm5hbWV9XCIgaW4gdGhlIGluc3RydWN0aW9uIGFjY291bnRzIG9iamVjdCR7aXhOYW1lICE9PSB1bmRlZmluZWQgPyAnIGZvciBpbnN0cnVjdGlvbiBcIicgKyBpeE5hbWUgKyAnXCInIDogXCJcIn0uIEV4cGVjdGVkIFB1YmxpY0tleSBvciBzdHJpbmcuYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IG9wdGlvbmFsID0gYWNjb3VudC5pc09wdGlvbmFsICYmIHB1YmtleS5lcXVhbHMocHJvZ3JhbUlkKTtcbiAgICAgICAgICAgICAgICBjb25zdCBpc1dyaXRhYmxlID0gYWNjb3VudC5pc011dCAmJiAhb3B0aW9uYWw7XG4gICAgICAgICAgICAgICAgY29uc3QgaXNTaWduZXIgPSBhY2NvdW50LmlzU2lnbmVyICYmICFvcHRpb25hbDtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBwdWJrZXksXG4gICAgICAgICAgICAgICAgICAgIGlzV3JpdGFibGUsXG4gICAgICAgICAgICAgICAgICAgIGlzU2lnbmVyLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuZmxhdCgpO1xuICAgIH1cbn1cbi8vIFRocm93cyBlcnJvciBpZiBhbnkgYXJndW1lbnQgcmVxdWlyZWQgZm9yIHRoZSBgaXhgIGlzIG5vdCBnaXZlbi5cbmZ1bmN0aW9uIHZhbGlkYXRlSW5zdHJ1Y3Rpb24oaXgsIC4uLmFyZ3MpIHtcbiAgICAvLyB0b2RvXG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnN0cnVjdGlvbi5qcy5tYXAiXSwibmFtZXMiOlsiVHJhbnNhY3Rpb25JbnN0cnVjdGlvbiIsIklkbEVycm9yIiwidG9JbnN0cnVjdGlvbiIsInRyYW5zbGF0ZUFkZHJlc3MiLCJ2YWxpZGF0ZUFjY291bnRzIiwic3BsaXRBcmdzQW5kQ3R4IiwiZmVhdHVyZXMiLCJJbnN0cnVjdGlvbk5hbWVzcGFjZUZhY3RvcnkiLCJidWlsZCIsImlkbEl4IiwiZW5jb2RlRm4iLCJwcm9ncmFtSWQiLCJuYW1lIiwiaXgiLCJhcmdzIiwiaXhBcmdzIiwiY3R4IiwiYWNjb3VudHMiLCJ2YWxpZGF0ZUluc3RydWN0aW9uIiwia2V5cyIsInJlbWFpbmluZ0FjY291bnRzIiwidW5kZWZpbmVkIiwicHVzaCIsImlzU2V0IiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJhY2NzIiwiYWNjb3VudHNBcnJheSIsIml4TmFtZSIsIm1hcCIsImFjYyIsIm5lc3RlZEFjY291bnRzIiwicnBjQWNjcyIsImZsYXQiLCJhY2NvdW50IiwicHVia2V5IiwiZXJyIiwiRXJyb3IiLCJvcHRpb25hbCIsImlzT3B0aW9uYWwiLCJlcXVhbHMiLCJpc1dyaXRhYmxlIiwiaXNNdXQiLCJpc1NpZ25lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/instruction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/methods.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/namespace/methods.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MethodsBuilder: () => (/* binding */ MethodsBuilder),\n/* harmony export */   MethodsBuilderFactory: () => (/* binding */ MethodsBuilderFactory),\n/* harmony export */   flattenPartialAccounts: () => (/* binding */ flattenPartialAccounts),\n/* harmony export */   isPartialAccounts: () => (/* binding */ isPartialAccounts)\n/* harmony export */ });\n/* harmony import */ var _accounts_resolver_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../accounts-resolver.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/accounts-resolver.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/common.js\");\n\n\nclass MethodsBuilderFactory {\n    static build(provider, programId, idlIx, ixFn, txFn, rpcFn, simulateFn, viewFn, accountNamespace, idlTypes, customResolver) {\n        return (...args)=>new MethodsBuilder(args, ixFn, txFn, rpcFn, simulateFn, viewFn, provider, programId, idlIx, accountNamespace, idlTypes, customResolver);\n    }\n}\nfunction isPartialAccounts(partialAccount) {\n    return typeof partialAccount === \"object\" && partialAccount !== null && !(\"_bn\" in partialAccount // Ensures not a pubkey\n    );\n}\nfunction flattenPartialAccounts(partialAccounts, throwOnNull) {\n    const toReturn = {};\n    for(const accountName in partialAccounts){\n        const account = partialAccounts[accountName];\n        if (account === null) {\n            if (throwOnNull) throw new Error(\"Failed to resolve optionals due to IDL type mismatch with input accounts!\");\n            continue;\n        }\n        toReturn[accountName] = isPartialAccounts(account) ? flattenPartialAccounts(account, true) : (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.translateAddress)(account);\n    }\n    return toReturn;\n}\nclass MethodsBuilder {\n    constructor(_args, _ixFn, _txFn, _rpcFn, _simulateFn, _viewFn, _provider, _programId, _idlIx, _accountNamespace, _idlTypes, _customResolver){\n        this._ixFn = _ixFn;\n        this._txFn = _txFn;\n        this._rpcFn = _rpcFn;\n        this._simulateFn = _simulateFn;\n        this._viewFn = _viewFn;\n        this._programId = _programId;\n        this._accounts = {};\n        this._remainingAccounts = [];\n        this._signers = [];\n        this._preInstructions = [];\n        this._postInstructions = [];\n        this._autoResolveAccounts = true;\n        this._args = _args;\n        this._accountsResolver = new _accounts_resolver_js__WEBPACK_IMPORTED_MODULE_0__.AccountsResolver(_args, this._accounts, _provider, _programId, _idlIx, _accountNamespace, _idlTypes, _customResolver);\n    }\n    args(_args) {\n        this._args = _args;\n        this._accountsResolver.args(_args);\n    }\n    async pubkeys() {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        return this._accounts;\n    }\n    accounts(accounts) {\n        this._autoResolveAccounts = true;\n        this._accountsResolver.resolveOptionals(accounts);\n        return this;\n    }\n    accountsStrict(accounts) {\n        this._autoResolveAccounts = false;\n        this._accountsResolver.resolveOptionals(accounts);\n        return this;\n    }\n    signers(signers) {\n        this._signers = this._signers.concat(signers);\n        return this;\n    }\n    remainingAccounts(accounts) {\n        this._remainingAccounts = this._remainingAccounts.concat(accounts);\n        return this;\n    }\n    preInstructions(ixs) {\n        this._preInstructions = this._preInstructions.concat(ixs);\n        return this;\n    }\n    postInstructions(ixs) {\n        this._postInstructions = this._postInstructions.concat(ixs);\n        return this;\n    }\n    async rpc(options) {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._rpcFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options: options\n        });\n    }\n    async rpcAndKeys(options) {\n        const pubkeys = await this.pubkeys();\n        return {\n            pubkeys,\n            signature: await this.rpc(options)\n        };\n    }\n    async view(options) {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        if (!this._viewFn) {\n            throw new Error(\"Method does not support views\");\n        }\n        // @ts-ignore\n        return this._viewFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options: options\n        });\n    }\n    async simulate(options) {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._simulateFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options: options\n        });\n    }\n    async instruction() {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._ixFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions\n        });\n    }\n    /**\n     * Convenient shortcut to get instructions and pubkeys via\n     * const { pubkeys, instructions } = await prepare();\n     */ async prepare() {\n        return {\n            instruction: await this.instruction(),\n            pubkeys: await this.pubkeys(),\n            signers: await this._signers\n        };\n    }\n    async transaction() {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._txFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions\n        });\n    }\n} //# sourceMappingURL=methods.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/methods.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/rpc.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/namespace/rpc.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RpcFactory)\n/* harmony export */ });\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/context.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/error.js\");\n\n\nclass RpcFactory {\n    static build(idlIx, txFn, idlErrors, provider) {\n        const rpc = async (...args)=>{\n            var _a;\n            const tx = txFn(...args);\n            const [, ctx] = (0,_context_js__WEBPACK_IMPORTED_MODULE_0__.splitArgsAndCtx)(idlIx, [\n                ...args\n            ]);\n            if (provider.sendAndConfirm === undefined) {\n                throw new Error(\"This function requires 'Provider.sendAndConfirm' to be implemented.\");\n            }\n            try {\n                return await provider.sendAndConfirm(tx, (_a = ctx.signers) !== null && _a !== void 0 ? _a : [], ctx.options);\n            } catch (err) {\n                throw (0,_error_js__WEBPACK_IMPORTED_MODULE_1__.translateError)(err, idlErrors);\n            }\n        };\n        return rpc;\n    }\n} //# sourceMappingURL=rpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL3JwYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0Q7QUFDQTtBQUNqQyxNQUFNRTtJQUNqQixPQUFPQyxNQUFNQyxLQUFLLEVBQUVDLElBQUksRUFBRUMsU0FBUyxFQUFFQyxRQUFRLEVBQUU7UUFDM0MsTUFBTUMsTUFBTSxPQUFPLEdBQUdDO1lBQ2xCLElBQUlDO1lBQ0osTUFBTUMsS0FBS04sUUFBUUk7WUFDbkIsTUFBTSxHQUFHRyxJQUFJLEdBQUdaLDREQUFlQSxDQUFDSSxPQUFPO21CQUFJSzthQUFLO1lBQ2hELElBQUlGLFNBQVNNLGNBQWMsS0FBS0MsV0FBVztnQkFDdkMsTUFBTSxJQUFJQyxNQUFNO1lBQ3BCO1lBQ0EsSUFBSTtnQkFDQSxPQUFPLE1BQU1SLFNBQVNNLGNBQWMsQ0FBQ0YsSUFBSSxDQUFDRCxLQUFLRSxJQUFJSSxPQUFPLE1BQU0sUUFBUU4sT0FBTyxLQUFLLElBQUlBLEtBQUssRUFBRSxFQUFFRSxJQUFJSyxPQUFPO1lBQ2hILEVBQ0EsT0FBT0MsS0FBSztnQkFDUixNQUFNakIseURBQWNBLENBQUNpQixLQUFLWjtZQUM5QjtRQUNKO1FBQ0EsT0FBT0U7SUFDWDtBQUNKLEVBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL0Bwcm9qZWN0LXNlcnVtL2FuY2hvci9kaXN0L2VzbS9wcm9ncmFtL25hbWVzcGFjZS9ycGMuanM/ZDQ3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzcGxpdEFyZ3NBbmRDdHggfSBmcm9tIFwiLi4vY29udGV4dC5qc1wiO1xuaW1wb3J0IHsgdHJhbnNsYXRlRXJyb3IgfSBmcm9tIFwiLi4vLi4vZXJyb3IuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJwY0ZhY3Rvcnkge1xuICAgIHN0YXRpYyBidWlsZChpZGxJeCwgdHhGbiwgaWRsRXJyb3JzLCBwcm92aWRlcikge1xuICAgICAgICBjb25zdCBycGMgPSBhc3luYyAoLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgY29uc3QgdHggPSB0eEZuKC4uLmFyZ3MpO1xuICAgICAgICAgICAgY29uc3QgWywgY3R4XSA9IHNwbGl0QXJnc0FuZEN0eChpZGxJeCwgWy4uLmFyZ3NdKTtcbiAgICAgICAgICAgIGlmIChwcm92aWRlci5zZW5kQW5kQ29uZmlybSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyBmdW5jdGlvbiByZXF1aXJlcyAnUHJvdmlkZXIuc2VuZEFuZENvbmZpcm0nIHRvIGJlIGltcGxlbWVudGVkLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHByb3ZpZGVyLnNlbmRBbmRDb25maXJtKHR4LCAoX2EgPSBjdHguc2lnbmVycykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW10sIGN0eC5vcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyB0cmFuc2xhdGVFcnJvcihlcnIsIGlkbEVycm9ycyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBycGM7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cnBjLmpzLm1hcCJdLCJuYW1lcyI6WyJzcGxpdEFyZ3NBbmRDdHgiLCJ0cmFuc2xhdGVFcnJvciIsIlJwY0ZhY3RvcnkiLCJidWlsZCIsImlkbEl4IiwidHhGbiIsImlkbEVycm9ycyIsInByb3ZpZGVyIiwicnBjIiwiYXJncyIsIl9hIiwidHgiLCJjdHgiLCJzZW5kQW5kQ29uZmlybSIsInVuZGVmaW5lZCIsIkVycm9yIiwic2lnbmVycyIsIm9wdGlvbnMiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/rpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/simulate.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/namespace/simulate.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SimulateFactory)\n/* harmony export */ });\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/context.js\");\n/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../event.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/event.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/error.js\");\n\n\n\nclass SimulateFactory {\n    static build(idlIx, txFn, idlErrors, provider, coder, programId, idl) {\n        const simulate = async (...args)=>{\n            var _a;\n            const tx = txFn(...args);\n            const [, ctx] = (0,_context_js__WEBPACK_IMPORTED_MODULE_0__.splitArgsAndCtx)(idlIx, [\n                ...args\n            ]);\n            let resp = undefined;\n            if (provider.simulate === undefined) {\n                throw new Error(\"This function requires 'Provider.simulate' to be implemented.\");\n            }\n            try {\n                resp = await provider.simulate(tx, ctx.signers, (_a = ctx.options) === null || _a === void 0 ? void 0 : _a.commitment);\n            } catch (err) {\n                throw (0,_error_js__WEBPACK_IMPORTED_MODULE_2__.translateError)(err, idlErrors);\n            }\n            if (resp === undefined) {\n                throw new Error(\"Unable to simulate transaction\");\n            }\n            const logs = resp.logs;\n            if (!logs) {\n                throw new Error(\"Simulated logs not found\");\n            }\n            const events = [];\n            if (idl.events) {\n                let parser = new _event_js__WEBPACK_IMPORTED_MODULE_1__.EventParser(programId, coder);\n                for (const event of parser.parseLogs(logs)){\n                    events.push(event);\n                }\n            }\n            return {\n                events,\n                raw: logs\n            };\n        };\n        return simulate;\n    }\n} //# sourceMappingURL=simulate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL3NpbXVsYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0Q7QUFDTjtBQUNNO0FBQ2pDLE1BQU1HO0lBQ2pCLE9BQU9DLE1BQU1DLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxTQUFTLEVBQUVDLFFBQVEsRUFBRUMsS0FBSyxFQUFFQyxTQUFTLEVBQUVDLEdBQUcsRUFBRTtRQUNsRSxNQUFNQyxXQUFXLE9BQU8sR0FBR0M7WUFDdkIsSUFBSUM7WUFDSixNQUFNQyxLQUFLVCxRQUFRTztZQUNuQixNQUFNLEdBQUdHLElBQUksR0FBR2hCLDREQUFlQSxDQUFDSyxPQUFPO21CQUFJUTthQUFLO1lBQ2hELElBQUlJLE9BQU9DO1lBQ1gsSUFBSVYsU0FBU0ksUUFBUSxLQUFLTSxXQUFXO2dCQUNqQyxNQUFNLElBQUlDLE1BQU07WUFDcEI7WUFDQSxJQUFJO2dCQUNBRixPQUFPLE1BQU1ULFNBQVNJLFFBQVEsQ0FBQ0csSUFBSUMsSUFBSUksT0FBTyxFQUFFLENBQUNOLEtBQUtFLElBQUlLLE9BQU8sTUFBTSxRQUFRUCxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdRLFVBQVU7WUFDekgsRUFDQSxPQUFPQyxLQUFLO2dCQUNSLE1BQU1yQix5REFBY0EsQ0FBQ3FCLEtBQUtoQjtZQUM5QjtZQUNBLElBQUlVLFNBQVNDLFdBQVc7Z0JBQ3BCLE1BQU0sSUFBSUMsTUFBTTtZQUNwQjtZQUNBLE1BQU1LLE9BQU9QLEtBQUtPLElBQUk7WUFDdEIsSUFBSSxDQUFDQSxNQUFNO2dCQUNQLE1BQU0sSUFBSUwsTUFBTTtZQUNwQjtZQUNBLE1BQU1NLFNBQVMsRUFBRTtZQUNqQixJQUFJZCxJQUFJYyxNQUFNLEVBQUU7Z0JBQ1osSUFBSUMsU0FBUyxJQUFJekIsa0RBQVdBLENBQUNTLFdBQVdEO2dCQUN4QyxLQUFLLE1BQU1rQixTQUFTRCxPQUFPRSxTQUFTLENBQUNKLE1BQU87b0JBQ3hDQyxPQUFPSSxJQUFJLENBQUNGO2dCQUNoQjtZQUNKO1lBQ0EsT0FBTztnQkFBRUY7Z0JBQVFLLEtBQUtOO1lBQUs7UUFDL0I7UUFDQSxPQUFPWjtJQUNYO0FBQ0osRUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL3NpbXVsYXRlLmpzPzk5ZGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3BsaXRBcmdzQW5kQ3R4IH0gZnJvbSBcIi4uL2NvbnRleHQuanNcIjtcbmltcG9ydCB7IEV2ZW50UGFyc2VyIH0gZnJvbSBcIi4uL2V2ZW50LmpzXCI7XG5pbXBvcnQgeyB0cmFuc2xhdGVFcnJvciB9IGZyb20gXCIuLi8uLi9lcnJvci5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2ltdWxhdGVGYWN0b3J5IHtcbiAgICBzdGF0aWMgYnVpbGQoaWRsSXgsIHR4Rm4sIGlkbEVycm9ycywgcHJvdmlkZXIsIGNvZGVyLCBwcm9ncmFtSWQsIGlkbCkge1xuICAgICAgICBjb25zdCBzaW11bGF0ZSA9IGFzeW5jICguLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBjb25zdCB0eCA9IHR4Rm4oLi4uYXJncyk7XG4gICAgICAgICAgICBjb25zdCBbLCBjdHhdID0gc3BsaXRBcmdzQW5kQ3R4KGlkbEl4LCBbLi4uYXJnc10pO1xuICAgICAgICAgICAgbGV0IHJlc3AgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICBpZiAocHJvdmlkZXIuc2ltdWxhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoaXMgZnVuY3Rpb24gcmVxdWlyZXMgJ1Byb3ZpZGVyLnNpbXVsYXRlJyB0byBiZSBpbXBsZW1lbnRlZC5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJlc3AgPSBhd2FpdCBwcm92aWRlci5zaW11bGF0ZSh0eCwgY3R4LnNpZ25lcnMsIChfYSA9IGN0eC5vcHRpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY29tbWl0bWVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgdHJhbnNsYXRlRXJyb3IoZXJyLCBpZGxFcnJvcnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlc3AgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byBzaW11bGF0ZSB0cmFuc2FjdGlvblwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGxvZ3MgPSByZXNwLmxvZ3M7XG4gICAgICAgICAgICBpZiAoIWxvZ3MpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTaW11bGF0ZWQgbG9ncyBub3QgZm91bmRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBldmVudHMgPSBbXTtcbiAgICAgICAgICAgIGlmIChpZGwuZXZlbnRzKSB7XG4gICAgICAgICAgICAgICAgbGV0IHBhcnNlciA9IG5ldyBFdmVudFBhcnNlcihwcm9ncmFtSWQsIGNvZGVyKTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIHBhcnNlci5wYXJzZUxvZ3MobG9ncykpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnRzLnB1c2goZXZlbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7IGV2ZW50cywgcmF3OiBsb2dzIH07XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBzaW11bGF0ZTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaW11bGF0ZS5qcy5tYXAiXSwibmFtZXMiOlsic3BsaXRBcmdzQW5kQ3R4IiwiRXZlbnRQYXJzZXIiLCJ0cmFuc2xhdGVFcnJvciIsIlNpbXVsYXRlRmFjdG9yeSIsImJ1aWxkIiwiaWRsSXgiLCJ0eEZuIiwiaWRsRXJyb3JzIiwicHJvdmlkZXIiLCJjb2RlciIsInByb2dyYW1JZCIsImlkbCIsInNpbXVsYXRlIiwiYXJncyIsIl9hIiwidHgiLCJjdHgiLCJyZXNwIiwidW5kZWZpbmVkIiwiRXJyb3IiLCJzaWduZXJzIiwib3B0aW9ucyIsImNvbW1pdG1lbnQiLCJlcnIiLCJsb2dzIiwiZXZlbnRzIiwicGFyc2VyIiwiZXZlbnQiLCJwYXJzZUxvZ3MiLCJwdXNoIiwicmF3Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/simulate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/state.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/namespace/state.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StateClient: () => (/* binding */ StateClient),\n/* harmony export */   \"default\": () => (/* binding */ StateFactory)\n/* harmony export */ });\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/eventemitter3/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! camelcase */ \"(ssr)/./node_modules/camelcase/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(camelcase__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../provider.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/provider.js\");\n/* harmony import */ var _coder_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../coder/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/index.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/common.js\");\n/* harmony import */ var _utils_pubkey_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/pubkey.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/pubkey.js\");\n/* harmony import */ var _instruction_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./instruction.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/instruction.js\");\n/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rpc.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/rpc.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./transaction.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/transaction.js\");\n\n\n\n\n\n\n\n\n\n\nclass StateFactory {\n    static build(idl, coder, programId, provider) {\n        if (idl.state === undefined) {\n            return undefined;\n        }\n        return new StateClient(idl, programId, provider, coder);\n    }\n}\n/**\n * A client for the program state. Similar to the base [[Program]] client,\n * one can use this to send transactions and read accounts for the state\n * abstraction.\n */ class StateClient {\n    /**\n     * Returns the program ID owning the state.\n     */ get programId() {\n        return this._programId;\n    }\n    constructor(idl, programId, /**\n     * Returns the client's wallet and network provider.\n     */ provider = (0,_provider_js__WEBPACK_IMPORTED_MODULE_3__.getProvider)(), /**\n     * Returns the coder.\n     */ coder = new _coder_index_js__WEBPACK_IMPORTED_MODULE_4__.BorshCoder(idl)){\n        this.provider = provider;\n        this.coder = coder;\n        this._idl = idl;\n        this._programId = programId;\n        this._address = programStateAddress(programId);\n        this._sub = null;\n        // Build namespaces.\n        const [instruction, transaction, rpc] = (()=>{\n            var _a;\n            let instruction = {};\n            let transaction = {};\n            let rpc = {};\n            (_a = idl.state) === null || _a === void 0 ? void 0 : _a.methods.forEach((m)=>{\n                // Build instruction method.\n                const ixItem = _instruction_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].build(m, (ixName, ix)=>coder.instruction.encodeState(ixName, ix), programId);\n                ixItem[\"accounts\"] = (accounts)=>{\n                    const keys = stateInstructionKeys(programId, provider, m, accounts);\n                    return keys.concat(_instruction_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].accountsArray(accounts, m.accounts, programId, m.name));\n                };\n                // Build transaction method.\n                const txItem = _transaction_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].build(m, ixItem);\n                // Build RPC method.\n                const rpcItem = _rpc_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].build(m, txItem, (0,_common_js__WEBPACK_IMPORTED_MODULE_5__.parseIdlErrors)(idl), provider);\n                // Attach them all to their respective namespaces.\n                const name = camelcase__WEBPACK_IMPORTED_MODULE_1___default()(m.name);\n                instruction[name] = ixItem;\n                transaction[name] = txItem;\n                rpc[name] = rpcItem;\n            });\n            return [\n                instruction,\n                transaction,\n                rpc\n            ];\n        })();\n        this.instruction = instruction;\n        this.transaction = transaction;\n        this.rpc = rpc;\n    }\n    /**\n     * Returns the deserialized state account.\n     */ async fetch() {\n        const addr = this.address();\n        const accountInfo = await this.provider.connection.getAccountInfo(addr);\n        if (accountInfo === null) {\n            throw new Error(`Account does not exist ${addr.toString()}`);\n        }\n        // Assert the account discriminator is correct.\n        const state = this._idl.state;\n        if (!state) {\n            throw new Error(\"State is not specified in IDL.\");\n        }\n        const expectedDiscriminator = await (0,_coder_index_js__WEBPACK_IMPORTED_MODULE_4__.stateDiscriminator)(state.struct.name);\n        if (expectedDiscriminator.compare(accountInfo.data.slice(0, 8))) {\n            throw new Error(\"Invalid account discriminator\");\n        }\n        return this.coder.state.decode(accountInfo.data);\n    }\n    /**\n     * Returns the state address.\n     */ address() {\n        return this._address;\n    }\n    /**\n     * Returns an `EventEmitter` with a `\"change\"` event that's fired whenever\n     * the state account cahnges.\n     */ subscribe(commitment) {\n        if (this._sub !== null) {\n            return this._sub.ee;\n        }\n        const ee = new (eventemitter3__WEBPACK_IMPORTED_MODULE_0___default())();\n        const listener = this.provider.connection.onAccountChange(this.address(), (acc)=>{\n            const account = this.coder.state.decode(acc.data);\n            ee.emit(\"change\", account);\n        }, commitment);\n        this._sub = {\n            ee,\n            listener\n        };\n        return ee;\n    }\n    /**\n     * Unsubscribes to state changes.\n     */ unsubscribe() {\n        if (this._sub !== null) {\n            this.provider.connection.removeAccountChangeListener(this._sub.listener).then(async ()=>{\n                this._sub = null;\n            }).catch(console.error);\n        }\n    }\n}\n// Calculates the deterministic address of the program's \"state\" account.\nfunction programStateAddress(programId) {\n    let [registrySigner] = (0,_utils_pubkey_js__WEBPACK_IMPORTED_MODULE_6__.findProgramAddressSync)([], programId);\n    return (0,_utils_pubkey_js__WEBPACK_IMPORTED_MODULE_6__.createWithSeedSync)(registrySigner, \"unversioned\", programId);\n}\n// Returns the common keys that are prepended to all instructions targeting\n// the \"state\" of a program.\nfunction stateInstructionKeys(programId, provider, m, accounts) {\n    if (m.name === \"new\") {\n        // Ctor `new` method.\n        const [programSigner] = (0,_utils_pubkey_js__WEBPACK_IMPORTED_MODULE_6__.findProgramAddressSync)([], programId);\n        // @ts-expect-error\n        if (provider.wallet === undefined) {\n            throw new Error(\"This function requires the Provider interface implementor to have a 'wallet' field.\");\n        }\n        return [\n            {\n                // @ts-expect-error\n                pubkey: provider.wallet.publicKey,\n                isWritable: false,\n                isSigner: true\n            },\n            {\n                pubkey: programStateAddress(programId),\n                isWritable: true,\n                isSigner: false\n            },\n            {\n                pubkey: programSigner,\n                isWritable: false,\n                isSigner: false\n            },\n            {\n                pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.SystemProgram.programId,\n                isWritable: false,\n                isSigner: false\n            },\n            {\n                pubkey: programId,\n                isWritable: false,\n                isSigner: false\n            }\n        ];\n    } else {\n        (0,_common_js__WEBPACK_IMPORTED_MODULE_5__.validateAccounts)(m.accounts, accounts);\n        return [\n            {\n                pubkey: programStateAddress(programId),\n                isWritable: true,\n                isSigner: false\n            }\n        ];\n    }\n} //# sourceMappingURL=state.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/transaction.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/namespace/transaction.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TransactionFactory)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../context.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/context.js\");\n\n\nclass TransactionFactory {\n    static build(idlIx, ixFn) {\n        const txFn = (...args)=>{\n            var _a, _b, _c;\n            const [, ctx] = (0,_context_js__WEBPACK_IMPORTED_MODULE_1__.splitArgsAndCtx)(idlIx, [\n                ...args\n            ]);\n            const tx = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction();\n            if (ctx.preInstructions && ctx.instructions) {\n                throw new Error(\"instructions is deprecated, use preInstructions\");\n            }\n            (_a = ctx.preInstructions) === null || _a === void 0 ? void 0 : _a.forEach((ix)=>tx.add(ix));\n            (_b = ctx.instructions) === null || _b === void 0 ? void 0 : _b.forEach((ix)=>tx.add(ix));\n            tx.add(ixFn(...args));\n            (_c = ctx.postInstructions) === null || _c === void 0 ? void 0 : _c.forEach((ix)=>tx.add(ix));\n            return tx;\n        };\n        return txFn;\n    }\n} //# sourceMappingURL=transaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL3RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QztBQUNFO0FBQ2pDLE1BQU1FO0lBQ2pCLE9BQU9DLE1BQU1DLEtBQUssRUFBRUMsSUFBSSxFQUFFO1FBQ3RCLE1BQU1DLE9BQU8sQ0FBQyxHQUFHQztZQUNiLElBQUlDLElBQUlDLElBQUlDO1lBQ1osTUFBTSxHQUFHQyxJQUFJLEdBQUdWLDREQUFlQSxDQUFDRyxPQUFPO21CQUFJRzthQUFLO1lBQ2hELE1BQU1LLEtBQUssSUFBSVosd0RBQVdBO1lBQzFCLElBQUlXLElBQUlFLGVBQWUsSUFBSUYsSUFBSUcsWUFBWSxFQUFFO2dCQUN6QyxNQUFNLElBQUlDLE1BQU07WUFDcEI7WUFDQ1AsQ0FBQUEsS0FBS0csSUFBSUUsZUFBZSxNQUFNLFFBQVFMLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR1EsT0FBTyxDQUFDLENBQUNDLEtBQU9MLEdBQUdNLEdBQUcsQ0FBQ0Q7WUFDekZSLENBQUFBLEtBQUtFLElBQUlHLFlBQVksTUFBTSxRQUFRTCxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdPLE9BQU8sQ0FBQyxDQUFDQyxLQUFPTCxHQUFHTSxHQUFHLENBQUNEO1lBQ3ZGTCxHQUFHTSxHQUFHLENBQUNiLFFBQVFFO1lBQ2RHLENBQUFBLEtBQUtDLElBQUlRLGdCQUFnQixNQUFNLFFBQVFULE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR00sT0FBTyxDQUFDLENBQUNDLEtBQU9MLEdBQUdNLEdBQUcsQ0FBQ0Q7WUFDM0YsT0FBT0w7UUFDWDtRQUNBLE9BQU9OO0lBQ1g7QUFDSixFQUNBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9AcHJvamVjdC1zZXJ1bS9hbmNob3IvZGlzdC9lc20vcHJvZ3JhbS9uYW1lc3BhY2UvdHJhbnNhY3Rpb24uanM/NzM0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUcmFuc2FjdGlvbiB9IGZyb20gXCJAc29sYW5hL3dlYjMuanNcIjtcbmltcG9ydCB7IHNwbGl0QXJnc0FuZEN0eCB9IGZyb20gXCIuLi9jb250ZXh0LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUcmFuc2FjdGlvbkZhY3Rvcnkge1xuICAgIHN0YXRpYyBidWlsZChpZGxJeCwgaXhGbikge1xuICAgICAgICBjb25zdCB0eEZuID0gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgIHZhciBfYSwgX2IsIF9jO1xuICAgICAgICAgICAgY29uc3QgWywgY3R4XSA9IHNwbGl0QXJnc0FuZEN0eChpZGxJeCwgWy4uLmFyZ3NdKTtcbiAgICAgICAgICAgIGNvbnN0IHR4ID0gbmV3IFRyYW5zYWN0aW9uKCk7XG4gICAgICAgICAgICBpZiAoY3R4LnByZUluc3RydWN0aW9ucyAmJiBjdHguaW5zdHJ1Y3Rpb25zKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaW5zdHJ1Y3Rpb25zIGlzIGRlcHJlY2F0ZWQsIHVzZSBwcmVJbnN0cnVjdGlvbnNcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAoX2EgPSBjdHgucHJlSW5zdHJ1Y3Rpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZm9yRWFjaCgoaXgpID0+IHR4LmFkZChpeCkpO1xuICAgICAgICAgICAgKF9iID0gY3R4Lmluc3RydWN0aW9ucykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmZvckVhY2goKGl4KSA9PiB0eC5hZGQoaXgpKTtcbiAgICAgICAgICAgIHR4LmFkZChpeEZuKC4uLmFyZ3MpKTtcbiAgICAgICAgICAgIChfYyA9IGN0eC5wb3N0SW5zdHJ1Y3Rpb25zKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuZm9yRWFjaCgoaXgpID0+IHR4LmFkZChpeCkpO1xuICAgICAgICAgICAgcmV0dXJuIHR4O1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdHhGbjtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2FjdGlvbi5qcy5tYXAiXSwibmFtZXMiOlsiVHJhbnNhY3Rpb24iLCJzcGxpdEFyZ3NBbmRDdHgiLCJUcmFuc2FjdGlvbkZhY3RvcnkiLCJidWlsZCIsImlkbEl4IiwiaXhGbiIsInR4Rm4iLCJhcmdzIiwiX2EiLCJfYiIsIl9jIiwiY3R4IiwidHgiLCJwcmVJbnN0cnVjdGlvbnMiLCJpbnN0cnVjdGlvbnMiLCJFcnJvciIsImZvckVhY2giLCJpeCIsImFkZCIsInBvc3RJbnN0cnVjdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/views.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/namespace/views.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ViewFactory)\n/* harmony export */ });\n/* harmony import */ var _coder_borsh_idl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../coder/borsh/idl */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/coder/borsh/idl.js\");\n/* harmony import */ var _utils_bytes_base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/bytes/base64 */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/base64.js\");\n\n\nclass ViewFactory {\n    static build(programId, idlIx, simulateFn, idl) {\n        const isMut = idlIx.accounts.find((a)=>a.isMut);\n        const hasReturn = !!idlIx.returns;\n        if (isMut || !hasReturn) return;\n        const view = async (...args)=>{\n            var _a, _b;\n            let simulationResult = await simulateFn(...args);\n            const returnPrefix = `Program return: ${programId} `;\n            let returnLog = simulationResult.raw.find((l)=>l.startsWith(returnPrefix));\n            if (!returnLog) {\n                throw new Error(\"View expected return log\");\n            }\n            let returnData = (0,_utils_bytes_base64__WEBPACK_IMPORTED_MODULE_1__.decode)(returnLog.slice(returnPrefix.length));\n            let returnType = idlIx.returns;\n            if (!returnType) {\n                throw new Error(\"View expected return type\");\n            }\n            const coder = _coder_borsh_idl__WEBPACK_IMPORTED_MODULE_0__.IdlCoder.fieldLayout({\n                type: returnType\n            }, Array.from([\n                ...(_a = idl.accounts) !== null && _a !== void 0 ? _a : [],\n                ...(_b = idl.types) !== null && _b !== void 0 ? _b : []\n            ]));\n            return coder.decode(returnData);\n        };\n        return view;\n    }\n} //# sourceMappingURL=views.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL3ZpZXdzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRDtBQUNDO0FBQ25DLE1BQU1FO0lBQ2pCLE9BQU9DLE1BQU1DLFNBQVMsRUFBRUMsS0FBSyxFQUFFQyxVQUFVLEVBQUVDLEdBQUcsRUFBRTtRQUM1QyxNQUFNQyxRQUFRSCxNQUFNSSxRQUFRLENBQUNDLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFSCxLQUFLO1FBQ2hELE1BQU1JLFlBQVksQ0FBQyxDQUFDUCxNQUFNUSxPQUFPO1FBQ2pDLElBQUlMLFNBQVMsQ0FBQ0ksV0FDVjtRQUNKLE1BQU1FLE9BQU8sT0FBTyxHQUFHQztZQUNuQixJQUFJQyxJQUFJQztZQUNSLElBQUlDLG1CQUFtQixNQUFNWixjQUFjUztZQUMzQyxNQUFNSSxlQUFlLENBQUMsZ0JBQWdCLEVBQUVmLFVBQVUsQ0FBQyxDQUFDO1lBQ3BELElBQUlnQixZQUFZRixpQkFBaUJHLEdBQUcsQ0FBQ1gsSUFBSSxDQUFDLENBQUNZLElBQU1BLEVBQUVDLFVBQVUsQ0FBQ0o7WUFDOUQsSUFBSSxDQUFDQyxXQUFXO2dCQUNaLE1BQU0sSUFBSUksTUFBTTtZQUNwQjtZQUNBLElBQUlDLGFBQWF4QiwyREFBTUEsQ0FBQ21CLFVBQVVNLEtBQUssQ0FBQ1AsYUFBYVEsTUFBTTtZQUMzRCxJQUFJQyxhQUFhdkIsTUFBTVEsT0FBTztZQUM5QixJQUFJLENBQUNlLFlBQVk7Z0JBQ2IsTUFBTSxJQUFJSixNQUFNO1lBQ3BCO1lBQ0EsTUFBTUssUUFBUTdCLHNEQUFRQSxDQUFDOEIsV0FBVyxDQUFDO2dCQUFFQyxNQUFNSDtZQUFXLEdBQUdJLE1BQU1DLElBQUksQ0FBQzttQkFBSyxDQUFDakIsS0FBS1QsSUFBSUUsUUFBUSxNQUFNLFFBQVFPLE9BQU8sS0FBSyxJQUFJQSxLQUFLLEVBQUU7bUJBQU8sQ0FBQ0MsS0FBS1YsSUFBSTJCLEtBQUssTUFBTSxRQUFRakIsT0FBTyxLQUFLLElBQUlBLEtBQUssRUFBRTthQUFFO1lBQzdMLE9BQU9ZLE1BQU01QixNQUFNLENBQUN3QjtRQUN4QjtRQUNBLE9BQU9YO0lBQ1g7QUFDSixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9AcHJvamVjdC1zZXJ1bS9hbmNob3IvZGlzdC9lc20vcHJvZ3JhbS9uYW1lc3BhY2Uvdmlld3MuanM/ZDI4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJZGxDb2RlciB9IGZyb20gXCIuLi8uLi9jb2Rlci9ib3JzaC9pZGxcIjtcbmltcG9ydCB7IGRlY29kZSB9IGZyb20gXCIuLi8uLi91dGlscy9ieXRlcy9iYXNlNjRcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZpZXdGYWN0b3J5IHtcbiAgICBzdGF0aWMgYnVpbGQocHJvZ3JhbUlkLCBpZGxJeCwgc2ltdWxhdGVGbiwgaWRsKSB7XG4gICAgICAgIGNvbnN0IGlzTXV0ID0gaWRsSXguYWNjb3VudHMuZmluZCgoYSkgPT4gYS5pc011dCk7XG4gICAgICAgIGNvbnN0IGhhc1JldHVybiA9ICEhaWRsSXgucmV0dXJucztcbiAgICAgICAgaWYgKGlzTXV0IHx8ICFoYXNSZXR1cm4pXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IHZpZXcgPSBhc3luYyAoLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgIGxldCBzaW11bGF0aW9uUmVzdWx0ID0gYXdhaXQgc2ltdWxhdGVGbiguLi5hcmdzKTtcbiAgICAgICAgICAgIGNvbnN0IHJldHVyblByZWZpeCA9IGBQcm9ncmFtIHJldHVybjogJHtwcm9ncmFtSWR9IGA7XG4gICAgICAgICAgICBsZXQgcmV0dXJuTG9nID0gc2ltdWxhdGlvblJlc3VsdC5yYXcuZmluZCgobCkgPT4gbC5zdGFydHNXaXRoKHJldHVyblByZWZpeCkpO1xuICAgICAgICAgICAgaWYgKCFyZXR1cm5Mb2cpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJWaWV3IGV4cGVjdGVkIHJldHVybiBsb2dcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgcmV0dXJuRGF0YSA9IGRlY29kZShyZXR1cm5Mb2cuc2xpY2UocmV0dXJuUHJlZml4Lmxlbmd0aCkpO1xuICAgICAgICAgICAgbGV0IHJldHVyblR5cGUgPSBpZGxJeC5yZXR1cm5zO1xuICAgICAgICAgICAgaWYgKCFyZXR1cm5UeXBlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVmlldyBleHBlY3RlZCByZXR1cm4gdHlwZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGNvZGVyID0gSWRsQ29kZXIuZmllbGRMYXlvdXQoeyB0eXBlOiByZXR1cm5UeXBlIH0sIEFycmF5LmZyb20oWy4uLigoX2EgPSBpZGwuYWNjb3VudHMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdKSwgLi4uKChfYiA9IGlkbC50eXBlcykgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogW10pXSkpO1xuICAgICAgICAgICAgcmV0dXJuIGNvZGVyLmRlY29kZShyZXR1cm5EYXRhKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHZpZXc7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmlld3MuanMubWFwIl0sIm5hbWVzIjpbIklkbENvZGVyIiwiZGVjb2RlIiwiVmlld0ZhY3RvcnkiLCJidWlsZCIsInByb2dyYW1JZCIsImlkbEl4Iiwic2ltdWxhdGVGbiIsImlkbCIsImlzTXV0IiwiYWNjb3VudHMiLCJmaW5kIiwiYSIsImhhc1JldHVybiIsInJldHVybnMiLCJ2aWV3IiwiYXJncyIsIl9hIiwiX2IiLCJzaW11bGF0aW9uUmVzdWx0IiwicmV0dXJuUHJlZml4IiwicmV0dXJuTG9nIiwicmF3IiwibCIsInN0YXJ0c1dpdGgiLCJFcnJvciIsInJldHVybkRhdGEiLCJzbGljZSIsImxlbmd0aCIsInJldHVyblR5cGUiLCJjb2RlciIsImZpZWxkTGF5b3V0IiwidHlwZSIsIkFycmF5IiwiZnJvbSIsInR5cGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/namespace/views.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/token-account-layout.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/program/token-account-layout.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeTokenAccount: () => (/* binding */ decodeTokenAccount)\n/* harmony export */ });\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var buffer_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer-layout */ \"(ssr)/./node_modules/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n\n\n\n\nfunction uint64(property) {\n    return new WrappedLayout(buffer_layout__WEBPACK_IMPORTED_MODULE_1__.blob(8), (b)=>u64.fromBuffer(b), (n)=>n.toBuffer(), property);\n}\nfunction publicKey(property) {\n    return new WrappedLayout(buffer_layout__WEBPACK_IMPORTED_MODULE_1__.blob(32), (b)=>new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey(b), (key)=>key.toBuffer(), property);\n}\nfunction coption(layout, property) {\n    return new COptionLayout(layout, property);\n}\nclass WrappedLayout extends buffer_layout__WEBPACK_IMPORTED_MODULE_1__.Layout {\n    constructor(layout, decoder, encoder, property){\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nclass COptionLayout extends buffer_layout__WEBPACK_IMPORTED_MODULE_1__.Layout {\n    constructor(layout, property){\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.layout.span + this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 4) + 4;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        } else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 4);\n        }\n        throw new Error(\"Invalid coption \" + this.layout.property);\n    }\n    getSpan(b, offset = 0) {\n        return this.layout.getSpan(b, offset + 4) + 4;\n    }\n}\nclass u64 extends (bn_js__WEBPACK_IMPORTED_MODULE_0___default()) {\n    /**\n     * Convert to Buffer representation\n     */ toBuffer() {\n        const a = super.toArray().reverse();\n        const b = Buffer.from(a);\n        if (b.length === 8) {\n            return b;\n        }\n        if (b.length >= 8) {\n            throw new Error(\"u64 too large\");\n        }\n        const zeroPad = Buffer.alloc(8);\n        b.copy(zeroPad);\n        return zeroPad;\n    }\n    /**\n     * Construct a u64 from Buffer representation\n     */ static fromBuffer(buffer) {\n        if (buffer.length !== 8) {\n            throw new Error(`Invalid buffer length: ${buffer.length}`);\n        }\n        return new u64([\n            ...buffer\n        ].reverse().map((i)=>`00${i.toString(16)}`.slice(-2)).join(\"\"), 16);\n    }\n}\nconst TOKEN_ACCOUNT_LAYOUT = buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"mint\"),\n    publicKey(\"owner\"),\n    uint64(\"amount\"),\n    coption(publicKey(), \"delegate\"),\n    ((p)=>{\n        const U = buffer_layout__WEBPACK_IMPORTED_MODULE_1__.union(buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u8(\"discriminator\"), null, p);\n        U.addVariant(0, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([]), \"uninitialized\");\n        U.addVariant(1, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([]), \"initialized\");\n        U.addVariant(2, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([]), \"frozen\");\n        return U;\n    })(\"state\"),\n    coption(uint64(), \"isNative\"),\n    uint64(\"delegatedAmount\"),\n    coption(publicKey(), \"closeAuthority\")\n]);\nfunction decodeTokenAccount(b) {\n    return TOKEN_ACCOUNT_LAYOUT.decode(b);\n} //# sourceMappingURL=token-account-layout.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/token-account-layout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/provider.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/provider.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnchorProvider: () => (/* binding */ AnchorProvider),\n/* harmony export */   getProvider: () => (/* binding */ getProvider),\n/* harmony export */   setProvider: () => (/* binding */ setProvider)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _utils_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/bytes/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/index.js\");\n/* harmony import */ var _utils_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/common.js\");\n/* harmony import */ var _utils_rpc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/rpc.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/rpc.js\");\n\n\n\n\n/**\n * The network and wallet context used to send transactions paid for and signed\n * by the provider.\n */ class AnchorProvider {\n    /**\n     * @param connection The cluster connection where the program is deployed.\n     * @param wallet     The wallet used to pay for and sign all transactions.\n     * @param opts       Transaction confirmation options to use by default.\n     */ constructor(connection, wallet, opts){\n        this.connection = connection;\n        this.wallet = wallet;\n        this.opts = opts;\n        this.publicKey = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey;\n    }\n    static defaultOptions() {\n        return {\n            preflightCommitment: \"processed\",\n            commitment: \"processed\"\n        };\n    }\n    /**\n     * Returns a `Provider` with a wallet read from the local filesystem.\n     *\n     * @param url  The network cluster url.\n     * @param opts The default transaction confirmation options.\n     *\n     * (This api is for Node only.)\n     */ static local(url, opts) {\n        if (_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isBrowser) {\n            throw new Error(`Provider local is not available on browser.`);\n        }\n        opts = opts !== null && opts !== void 0 ? opts : AnchorProvider.defaultOptions();\n        const connection = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Connection(url !== null && url !== void 0 ? url : \"http://localhost:8899\", opts.preflightCommitment);\n        const NodeWallet = (__webpack_require__(/*! ./nodewallet.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/nodewallet.js\")[\"default\"]);\n        const wallet = NodeWallet.local();\n        return new AnchorProvider(connection, wallet, opts);\n    }\n    /**\n     * Returns a `Provider` read from the `ANCHOR_PROVIDER_URL` environment\n     * variable\n     *\n     * (This api is for Node only.)\n     */ static env() {\n        if (_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isBrowser) {\n            throw new Error(`Provider env is not available on browser.`);\n        }\n        const process = __webpack_require__(/*! process */ \"process\");\n        const url = process.env.ANCHOR_PROVIDER_URL;\n        if (url === undefined) {\n            throw new Error(\"ANCHOR_PROVIDER_URL is not defined\");\n        }\n        const options = AnchorProvider.defaultOptions();\n        const connection = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Connection(url, options.commitment);\n        const NodeWallet = (__webpack_require__(/*! ./nodewallet.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/nodewallet.js\")[\"default\"]);\n        const wallet = NodeWallet.local();\n        return new AnchorProvider(connection, wallet, options);\n    }\n    /**\n     * Sends the given transaction, paid for and signed by the provider's wallet.\n     *\n     * @param tx      The transaction to send.\n     * @param signers The signers of the transaction.\n     * @param opts    Transaction confirmation options.\n     */ async sendAndConfirm(tx, signers, opts) {\n        var _a;\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        tx.feePayer = tx.feePayer || this.wallet.publicKey;\n        tx.recentBlockhash = (await this.connection.getLatestBlockhash(opts.preflightCommitment)).blockhash;\n        tx = await this.wallet.signTransaction(tx);\n        (signers !== null && signers !== void 0 ? signers : []).forEach((kp)=>{\n            tx.partialSign(kp);\n        });\n        const rawTx = tx.serialize();\n        try {\n            return await sendAndConfirmRawTransaction(this.connection, rawTx, opts);\n        } catch (err) {\n            // thrown if the underlying 'confirmTransaction' encounters a failed tx\n            // the 'confirmTransaction' error does not return logs so we make another rpc call to get them\n            if (err instanceof ConfirmError) {\n                // choose the shortest available commitment for 'getTransaction'\n                // (the json RPC does not support any shorter than \"confirmed\" for 'getTransaction')\n                // because that will see the tx sent with `sendAndConfirmRawTransaction` no matter which\n                // commitment `sendAndConfirmRawTransaction` used\n                const failedTx = await this.connection.getTransaction(_utils_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__.bs58.encode(tx.signature), {\n                    commitment: \"confirmed\"\n                });\n                if (!failedTx) {\n                    throw err;\n                } else {\n                    const logs = (_a = failedTx.meta) === null || _a === void 0 ? void 0 : _a.logMessages;\n                    throw !logs ? err : new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SendTransactionError(err.message, logs);\n                }\n            } else {\n                throw err;\n            }\n        }\n    }\n    /**\n     * Similar to `send`, but for an array of transactions and signers.\n     *\n     * @param txWithSigners Array of transactions and signers.\n     * @param opts          Transaction confirmation options.\n     */ async sendAll(txWithSigners, opts) {\n        var _a;\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        const blockhash = await this.connection.getLatestBlockhash(opts.preflightCommitment);\n        let txs = txWithSigners.map((r)=>{\n            var _a;\n            let tx = r.tx;\n            let signers = (_a = r.signers) !== null && _a !== void 0 ? _a : [];\n            tx.feePayer = tx.feePayer || this.wallet.publicKey;\n            tx.recentBlockhash = blockhash.blockhash;\n            signers.forEach((kp)=>{\n                tx.partialSign(kp);\n            });\n            return tx;\n        });\n        const signedTxs = await this.wallet.signAllTransactions(txs);\n        const sigs = [];\n        for(let k = 0; k < txs.length; k += 1){\n            const tx = signedTxs[k];\n            const rawTx = tx.serialize();\n            try {\n                sigs.push(await sendAndConfirmRawTransaction(this.connection, rawTx, opts));\n            } catch (err) {\n                // thrown if the underlying 'confirmTransaction' encounters a failed tx\n                // the 'confirmTransaction' error does not return logs so we make another rpc call to get them\n                if (err instanceof ConfirmError) {\n                    // choose the shortest available commitment for 'getTransaction'\n                    // (the json RPC does not support any shorter than \"confirmed\" for 'getTransaction')\n                    // because that will see the tx sent with `sendAndConfirmRawTransaction` no matter which\n                    // commitment `sendAndConfirmRawTransaction` used\n                    const failedTx = await this.connection.getTransaction(_utils_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__.bs58.encode(tx.signature), {\n                        commitment: \"confirmed\"\n                    });\n                    if (!failedTx) {\n                        throw err;\n                    } else {\n                        const logs = (_a = failedTx.meta) === null || _a === void 0 ? void 0 : _a.logMessages;\n                        throw !logs ? err : new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SendTransactionError(err.message, logs);\n                    }\n                } else {\n                    throw err;\n                }\n            }\n        }\n        return sigs;\n    }\n    /**\n     * Simulates the given transaction, returning emitted logs from execution.\n     *\n     * @param tx      The transaction to send.\n     * @param signers The signers of the transaction.\n     * @param opts    Transaction confirmation options.\n     */ async simulate(tx, signers, commitment, includeAccounts) {\n        tx.feePayer = tx.feePayer || this.wallet.publicKey;\n        tx.recentBlockhash = (await this.connection.getLatestBlockhash(commitment !== null && commitment !== void 0 ? commitment : this.connection.commitment)).blockhash;\n        tx = await this.wallet.signTransaction(tx);\n        const result = await (0,_utils_rpc_js__WEBPACK_IMPORTED_MODULE_3__.simulateTransaction)(this.connection, tx, signers, commitment, includeAccounts);\n        if (result.value.err) {\n            throw new SimulateError(result.value);\n        }\n        return result.value;\n    }\n}\nclass SimulateError extends Error {\n    constructor(simulationResponse, message){\n        super(message);\n        this.simulationResponse = simulationResponse;\n    }\n}\n// Copy of Connection.sendAndConfirmRawTransaction that throws\n// a better error if 'confirmTransaction` returns an error status\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, options) {\n    const sendOptions = options && {\n        skipPreflight: options.skipPreflight,\n        preflightCommitment: options.preflightCommitment || options.commitment\n    };\n    const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n    const status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n    if (status.err) {\n        throw new ConfirmError(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n    }\n    return signature;\n}\nclass ConfirmError extends Error {\n    constructor(message){\n        super(message);\n    }\n}\n/**\n * Sets the default provider on the client.\n */ function setProvider(provider) {\n    _provider = provider;\n}\n/**\n * Returns the default provider being used by the client.\n */ function getProvider() {\n    if (_provider === null) {\n        return AnchorProvider.local();\n    }\n    return _provider;\n}\n// Global provider used as the default when a provider is not given.\nlet _provider = null; //# sourceMappingURL=provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/base64.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/utils/bytes/base64.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var base64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\");\n\n\nfunction encode(data) {\n    return base64_js__WEBPACK_IMPORTED_MODULE_1__.fromByteArray(data);\n}\nfunction decode(data) {\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(base64_js__WEBPACK_IMPORTED_MODULE_1__.toByteArray(data));\n} //# sourceMappingURL=base64.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2J5dGVzL2Jhc2U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnQztBQUNJO0FBQzdCLFNBQVNFLE9BQU9DLElBQUk7SUFDdkIsT0FBT0Ysb0RBQW9CLENBQUNFO0FBQ2hDO0FBQ08sU0FBU0UsT0FBT0YsSUFBSTtJQUN2QixPQUFPSCwwQ0FBTUEsQ0FBQ00sSUFBSSxDQUFDTCxrREFBa0IsQ0FBQ0U7QUFDMUMsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2J5dGVzL2Jhc2U2NC5qcz8wZGM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcbmltcG9ydCAqIGFzIGJhc2U2NCBmcm9tIFwiYmFzZTY0LWpzXCI7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGRhdGEpIHtcbiAgICByZXR1cm4gYmFzZTY0LmZyb21CeXRlQXJyYXkoZGF0YSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGRhdGEpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oYmFzZTY0LnRvQnl0ZUFycmF5KGRhdGEpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5qcy5tYXAiXSwibmFtZXMiOlsiQnVmZmVyIiwiYmFzZTY0IiwiZW5jb2RlIiwiZGF0YSIsImZyb21CeXRlQXJyYXkiLCJkZWNvZGUiLCJmcm9tIiwidG9CeXRlQXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/bs58.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/utils/bytes/bs58.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction encode(data) {\n    return bs58__WEBPACK_IMPORTED_MODULE_0___default().encode(data);\n}\nfunction decode(data) {\n    return bs58__WEBPACK_IMPORTED_MODULE_0___default().decode(data);\n} //# sourceMappingURL=bs58.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2J5dGVzL2JzNTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QjtBQUNqQixTQUFTQyxPQUFPQyxJQUFJO0lBQ3ZCLE9BQU9GLGtEQUFXLENBQUNFO0FBQ3ZCO0FBQ08sU0FBU0MsT0FBT0QsSUFBSTtJQUN2QixPQUFPRixrREFBVyxDQUFDRTtBQUN2QixFQUNBLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9AcHJvamVjdC1zZXJ1bS9hbmNob3IvZGlzdC9lc20vdXRpbHMvYnl0ZXMvYnM1OC5qcz8xNDEwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiczU4IGZyb20gXCJiczU4XCI7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGRhdGEpIHtcbiAgICByZXR1cm4gYnM1OC5lbmNvZGUoZGF0YSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGRhdGEpIHtcbiAgICByZXR1cm4gYnM1OC5kZWNvZGUoZGF0YSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iczU4LmpzLm1hcCJdLCJuYW1lcyI6WyJiczU4IiwiZW5jb2RlIiwiZGF0YSIsImRlY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/bs58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/hex.js":
/*!************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/utils/bytes/hex.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction encode(data) {\n    return data.reduce((str, byte)=>str + byte.toString(16).padStart(2, \"0\"), \"0x\");\n}\nfunction decode(data) {\n    if (data.indexOf(\"0x\") === 0) {\n        data = data.substr(2);\n    }\n    if (data.length % 2 === 1) {\n        data = \"0\" + data;\n    }\n    let key = data.match(/.{2}/g);\n    if (key === null) {\n        return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from([]);\n    }\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(key.map((byte)=>parseInt(byte, 16)));\n} //# sourceMappingURL=hex.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2J5dGVzL2hleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdDO0FBQ3pCLFNBQVNDLE9BQU9DLElBQUk7SUFDdkIsT0FBT0EsS0FBS0MsTUFBTSxDQUFDLENBQUNDLEtBQUtDLE9BQVNELE1BQU1DLEtBQUtDLFFBQVEsQ0FBQyxJQUFJQyxRQUFRLENBQUMsR0FBRyxNQUFNO0FBQ2hGO0FBQ08sU0FBU0MsT0FBT04sSUFBSTtJQUN2QixJQUFJQSxLQUFLTyxPQUFPLENBQUMsVUFBVSxHQUFHO1FBQzFCUCxPQUFPQSxLQUFLUSxNQUFNLENBQUM7SUFDdkI7SUFDQSxJQUFJUixLQUFLUyxNQUFNLEdBQUcsTUFBTSxHQUFHO1FBQ3ZCVCxPQUFPLE1BQU1BO0lBQ2pCO0lBQ0EsSUFBSVUsTUFBTVYsS0FBS1csS0FBSyxDQUFDO0lBQ3JCLElBQUlELFFBQVEsTUFBTTtRQUNkLE9BQU9aLDBDQUFNQSxDQUFDYyxJQUFJLENBQUMsRUFBRTtJQUN6QjtJQUNBLE9BQU9kLDBDQUFNQSxDQUFDYyxJQUFJLENBQUNGLElBQUlHLEdBQUcsQ0FBQyxDQUFDVixPQUFTVyxTQUFTWCxNQUFNO0FBQ3hELEVBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29sYW5hLWxpcXVpZGl0eS1wb29sLy4vbm9kZV9tb2R1bGVzL0Bwcm9qZWN0LXNlcnVtL2FuY2hvci9kaXN0L2VzbS91dGlscy9ieXRlcy9oZXguanM/MGZjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdWZmZXIgfSBmcm9tIFwiYnVmZmVyXCI7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGRhdGEpIHtcbiAgICByZXR1cm4gZGF0YS5yZWR1Y2UoKHN0ciwgYnl0ZSkgPT4gc3RyICsgYnl0ZS50b1N0cmluZygxNikucGFkU3RhcnQoMiwgXCIwXCIpLCBcIjB4XCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShkYXRhKSB7XG4gICAgaWYgKGRhdGEuaW5kZXhPZihcIjB4XCIpID09PSAwKSB7XG4gICAgICAgIGRhdGEgPSBkYXRhLnN1YnN0cigyKTtcbiAgICB9XG4gICAgaWYgKGRhdGEubGVuZ3RoICUgMiA9PT0gMSkge1xuICAgICAgICBkYXRhID0gXCIwXCIgKyBkYXRhO1xuICAgIH1cbiAgICBsZXQga2V5ID0gZGF0YS5tYXRjaCgvLnsyfS9nKTtcbiAgICBpZiAoa2V5ID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShbXSk7XG4gICAgfVxuICAgIHJldHVybiBCdWZmZXIuZnJvbShrZXkubWFwKChieXRlKSA9PiBwYXJzZUludChieXRlLCAxNikpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhleC5qcy5tYXAiXSwibmFtZXMiOlsiQnVmZmVyIiwiZW5jb2RlIiwiZGF0YSIsInJlZHVjZSIsInN0ciIsImJ5dGUiLCJ0b1N0cmluZyIsInBhZFN0YXJ0IiwiZGVjb2RlIiwiaW5kZXhPZiIsInN1YnN0ciIsImxlbmd0aCIsImtleSIsIm1hdGNoIiwiZnJvbSIsIm1hcCIsInBhcnNlSW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/hex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/utils/bytes/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64: () => (/* reexport module object */ _base64_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   bs58: () => (/* reexport module object */ _bs58_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   hex: () => (/* reexport module object */ _hex_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   utf8: () => (/* reexport module object */ _utf8_js__WEBPACK_IMPORTED_MODULE_1__)\n/* harmony export */ });\n/* harmony import */ var _hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hex.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/hex.js\");\n/* harmony import */ var _utf8_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utf8.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/utf8.js\");\n/* harmony import */ var _bs58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bs58.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/bs58.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/base64.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2J5dGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ0U7QUFDQTtBQUNJLENBQ3RDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9AcHJvamVjdC1zZXJ1bS9hbmNob3IvZGlzdC9lc20vdXRpbHMvYnl0ZXMvaW5kZXguanM/ZDc4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBhcyBoZXggZnJvbSBcIi4vaGV4LmpzXCI7XG5leHBvcnQgKiBhcyB1dGY4IGZyb20gXCIuL3V0ZjguanNcIjtcbmV4cG9ydCAqIGFzIGJzNTggZnJvbSBcIi4vYnM1OC5qc1wiO1xuZXhwb3J0ICogYXMgYmFzZTY0IGZyb20gXCIuL2Jhc2U2NC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImhleCIsInV0ZjgiLCJiczU4IiwiYmFzZTY0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/utf8.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/utils/bytes/utf8.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/common.js\");\n\nfunction decode(array) {\n    const decoder = _common__WEBPACK_IMPORTED_MODULE_0__.isBrowser ? new TextDecoder(\"utf-8\") // Browser https://caniuse.com/textencoder.\n     : new (__webpack_require__(/*! util */ \"util\").TextDecoder)(\"utf-8\"); // Node.\n    return decoder.decode(array);\n}\nfunction encode(input) {\n    const encoder = _common__WEBPACK_IMPORTED_MODULE_0__.isBrowser ? new TextEncoder() // Browser.\n     : new (__webpack_require__(/*! util */ \"util\").TextEncoder)(\"utf-8\"); // Node.\n    return encoder.encode(input);\n} //# sourceMappingURL=utf8.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2J5dGVzL3V0ZjguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNDO0FBQy9CLFNBQVNDLE9BQU9DLEtBQUs7SUFDeEIsTUFBTUMsVUFBVUgsOENBQVNBLEdBQ25CLElBQUlJLFlBQVksU0FBUywyQ0FBMkM7T0FDcEUsSUFBS0MscURBQTJCLENBQUUsVUFBVSxRQUFRO0lBQzFELE9BQU9GLFFBQVFGLE1BQU0sQ0FBQ0M7QUFDMUI7QUFDTyxTQUFTSSxPQUFPQyxLQUFLO0lBQ3hCLE1BQU1DLFVBQVVSLDhDQUFTQSxHQUNuQixJQUFJUyxjQUFjLFdBQVc7T0FDN0IsSUFBS0oscURBQTJCLENBQUUsVUFBVSxRQUFRO0lBQzFELE9BQU9HLFFBQVFGLE1BQU0sQ0FBQ0M7QUFDMUIsRUFDQSxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2J5dGVzL3V0ZjguanM/YTQ3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Jyb3dzZXIgfSBmcm9tIFwiLi4vY29tbW9uXCI7XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGFycmF5KSB7XG4gICAgY29uc3QgZGVjb2RlciA9IGlzQnJvd3NlclxuICAgICAgICA/IG5ldyBUZXh0RGVjb2RlcihcInV0Zi04XCIpIC8vIEJyb3dzZXIgaHR0cHM6Ly9jYW5pdXNlLmNvbS90ZXh0ZW5jb2Rlci5cbiAgICAgICAgOiBuZXcgKHJlcXVpcmUoXCJ1dGlsXCIpLlRleHREZWNvZGVyKShcInV0Zi04XCIpOyAvLyBOb2RlLlxuICAgIHJldHVybiBkZWNvZGVyLmRlY29kZShhcnJheSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGlucHV0KSB7XG4gICAgY29uc3QgZW5jb2RlciA9IGlzQnJvd3NlclxuICAgICAgICA/IG5ldyBUZXh0RW5jb2RlcigpIC8vIEJyb3dzZXIuXG4gICAgICAgIDogbmV3IChyZXF1aXJlKFwidXRpbFwiKS5UZXh0RW5jb2RlcikoXCJ1dGYtOFwiKTsgLy8gTm9kZS5cbiAgICByZXR1cm4gZW5jb2Rlci5lbmNvZGUoaW5wdXQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRmOC5qcy5tYXAiXSwibmFtZXMiOlsiaXNCcm93c2VyIiwiZGVjb2RlIiwiYXJyYXkiLCJkZWNvZGVyIiwiVGV4dERlY29kZXIiLCJyZXF1aXJlIiwiZW5jb2RlIiwiaW5wdXQiLCJlbmNvZGVyIiwiVGV4dEVuY29kZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/utf8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/common.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/utils/common.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chunks: () => (/* binding */ chunks),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser)\n/* harmony export */ });\nvar _a;\n/**\n * Returns true if being run inside a web browser,\n * false if in a Node process or electron app.\n */ const isBrowser = process.env.ANCHOR_BROWSER ||  false && 0;\n/**\n * Splits an array into chunks\n *\n * @param array Array of objects to chunk.\n * @param size The max size of a chunk.\n * @returns A two dimensional array where each T[] length is < the provided size.\n */ function chunks(array, size) {\n    return Array.apply(0, new Array(Math.ceil(array.length / size))).map((_, index)=>array.slice(index * size, (index + 1) * size));\n} //# sourceMappingURL=common.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2NvbW1vbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUlBO0FBQ0o7OztDQUdDLEdBQ00sTUFBTUMsWUFBWUMsUUFBUUMsR0FBRyxDQUFDQyxjQUFjLElBQzlDLE1BQTZCLElBQUksQ0FBc0YsQ0FBRztBQUMvSDs7Ozs7O0NBTUMsR0FDTSxTQUFTRyxPQUFPQyxLQUFLLEVBQUVDLElBQUk7SUFDOUIsT0FBT0MsTUFBTUMsS0FBSyxDQUFDLEdBQUcsSUFBSUQsTUFBTUUsS0FBS0MsSUFBSSxDQUFDTCxNQUFNTSxNQUFNLEdBQUdMLFFBQVFNLEdBQUcsQ0FBQyxDQUFDQyxHQUFHQyxRQUFVVCxNQUFNVSxLQUFLLENBQUNELFFBQVFSLE1BQU0sQ0FBQ1EsUUFBUSxLQUFLUjtBQUMvSCxFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9AcHJvamVjdC1zZXJ1bS9hbmNob3IvZGlzdC9lc20vdXRpbHMvY29tbW9uLmpzP2QxOTIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9hO1xuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYmVpbmcgcnVuIGluc2lkZSBhIHdlYiBicm93c2VyLFxuICogZmFsc2UgaWYgaW4gYSBOb2RlIHByb2Nlc3Mgb3IgZWxlY3Ryb24gYXBwLlxuICovXG5leHBvcnQgY29uc3QgaXNCcm93c2VyID0gcHJvY2Vzcy5lbnYuQU5DSE9SX0JST1dTRVIgfHxcbiAgICAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiAhKChfYSA9IHdpbmRvdy5wcm9jZXNzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuaGFzT3duUHJvcGVydHkoXCJ0eXBlXCIpKSk7XG4vKipcbiAqIFNwbGl0cyBhbiBhcnJheSBpbnRvIGNodW5rc1xuICpcbiAqIEBwYXJhbSBhcnJheSBBcnJheSBvZiBvYmplY3RzIHRvIGNodW5rLlxuICogQHBhcmFtIHNpemUgVGhlIG1heCBzaXplIG9mIGEgY2h1bmsuXG4gKiBAcmV0dXJucyBBIHR3byBkaW1lbnNpb25hbCBhcnJheSB3aGVyZSBlYWNoIFRbXSBsZW5ndGggaXMgPCB0aGUgcHJvdmlkZWQgc2l6ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNodW5rcyhhcnJheSwgc2l6ZSkge1xuICAgIHJldHVybiBBcnJheS5hcHBseSgwLCBuZXcgQXJyYXkoTWF0aC5jZWlsKGFycmF5Lmxlbmd0aCAvIHNpemUpKSkubWFwKChfLCBpbmRleCkgPT4gYXJyYXkuc2xpY2UoaW5kZXggKiBzaXplLCAoaW5kZXggKyAxKSAqIHNpemUpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbW1vbi5qcy5tYXAiXSwibmFtZXMiOlsiX2EiLCJpc0Jyb3dzZXIiLCJwcm9jZXNzIiwiZW52IiwiQU5DSE9SX0JST1dTRVIiLCJ3aW5kb3ciLCJoYXNPd25Qcm9wZXJ0eSIsImNodW5rcyIsImFycmF5Iiwic2l6ZSIsIkFycmF5IiwiYXBwbHkiLCJNYXRoIiwiY2VpbCIsImxlbmd0aCIsIm1hcCIsIl8iLCJpbmRleCIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/features.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/utils/features.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isSet: () => (/* binding */ isSet),\n/* harmony export */   set: () => (/* binding */ set)\n/* harmony export */ });\nconst _AVAILABLE_FEATURES = new Set([\n    \"anchor-deprecated-state\",\n    \"debug-logs\"\n]);\nconst _FEATURES = new Map();\nfunction set(key) {\n    if (!_AVAILABLE_FEATURES.has(key)) {\n        throw new Error(\"Invalid feature\");\n    }\n    _FEATURES.set(key, true);\n}\nfunction isSet(key) {\n    return _FEATURES.get(key) !== undefined;\n} //# sourceMappingURL=features.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2ZlYXR1cmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsc0JBQXNCLElBQUlDLElBQUk7SUFBQztJQUEyQjtDQUFhO0FBQzdFLE1BQU1DLFlBQVksSUFBSUM7QUFDZixTQUFTQyxJQUFJQyxHQUFHO0lBQ25CLElBQUksQ0FBQ0wsb0JBQW9CTSxHQUFHLENBQUNELE1BQU07UUFDL0IsTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0FMLFVBQVVFLEdBQUcsQ0FBQ0MsS0FBSztBQUN2QjtBQUNPLFNBQVNHLE1BQU1ILEdBQUc7SUFDckIsT0FBT0gsVUFBVU8sR0FBRyxDQUFDSixTQUFTSztBQUNsQyxFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9AcHJvamVjdC1zZXJ1bS9hbmNob3IvZGlzdC9lc20vdXRpbHMvZmVhdHVyZXMuanM/NmNjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBfQVZBSUxBQkxFX0ZFQVRVUkVTID0gbmV3IFNldChbXCJhbmNob3ItZGVwcmVjYXRlZC1zdGF0ZVwiLCBcImRlYnVnLWxvZ3NcIl0pO1xuY29uc3QgX0ZFQVRVUkVTID0gbmV3IE1hcCgpO1xuZXhwb3J0IGZ1bmN0aW9uIHNldChrZXkpIHtcbiAgICBpZiAoIV9BVkFJTEFCTEVfRkVBVFVSRVMuaGFzKGtleSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBmZWF0dXJlXCIpO1xuICAgIH1cbiAgICBfRkVBVFVSRVMuc2V0KGtleSwgdHJ1ZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNTZXQoa2V5KSB7XG4gICAgcmV0dXJuIF9GRUFUVVJFUy5nZXQoa2V5KSAhPT0gdW5kZWZpbmVkO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmVhdHVyZXMuanMubWFwIl0sIm5hbWVzIjpbIl9BVkFJTEFCTEVfRkVBVFVSRVMiLCJTZXQiLCJfRkVBVFVSRVMiLCJNYXAiLCJzZXQiLCJrZXkiLCJoYXMiLCJFcnJvciIsImlzU2V0IiwiZ2V0IiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/features.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/utils/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_index_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   features: () => (/* reexport module object */ _features_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   publicKey: () => (/* reexport module object */ _pubkey_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   registry: () => (/* reexport module object */ _registry_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   rpc: () => (/* reexport module object */ _rpc_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   sha256: () => (/* reexport module object */ _sha256_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   token: () => (/* reexport module object */ _token_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _sha256_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sha256.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/sha256.js\");\n/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rpc.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/rpc.js\");\n/* harmony import */ var _pubkey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pubkey.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/pubkey.js\");\n/* harmony import */ var _bytes_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bytes/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/bytes/index.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./token.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/token.js\");\n/* harmony import */ var _features_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./features.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/features.js\");\n/* harmony import */ var _registry_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./registry.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/registry.js\");\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNDO0FBQ047QUFDUztBQUNDO0FBQ047QUFDTTtBQUNBLENBQzFDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbGFuYS1saXF1aWRpdHktcG9vbC8uL25vZGVfbW9kdWxlcy9AcHJvamVjdC1zZXJ1bS9hbmNob3IvZGlzdC9lc20vdXRpbHMvaW5kZXguanM/OTk0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBhcyBzaGEyNTYgZnJvbSBcIi4vc2hhMjU2LmpzXCI7XG5leHBvcnQgKiBhcyBycGMgZnJvbSBcIi4vcnBjLmpzXCI7XG5leHBvcnQgKiBhcyBwdWJsaWNLZXkgZnJvbSBcIi4vcHVia2V5LmpzXCI7XG5leHBvcnQgKiBhcyBieXRlcyBmcm9tIFwiLi9ieXRlcy9pbmRleC5qc1wiO1xuZXhwb3J0ICogYXMgdG9rZW4gZnJvbSBcIi4vdG9rZW4uanNcIjtcbmV4cG9ydCAqIGFzIGZlYXR1cmVzIGZyb20gXCIuL2ZlYXR1cmVzLmpzXCI7XG5leHBvcnQgKiBhcyByZWdpc3RyeSBmcm9tIFwiLi9yZWdpc3RyeS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbInNoYTI1NiIsInJwYyIsInB1YmxpY0tleSIsImJ5dGVzIiwidG9rZW4iLCJmZWF0dXJlcyIsInJlZ2lzdHJ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/pubkey.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/utils/pubkey.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   associated: () => (/* binding */ associated),\n/* harmony export */   createProgramAddressSync: () => (/* binding */ createProgramAddressSync),\n/* harmony export */   createWithSeedSync: () => (/* binding */ createWithSeedSync),\n/* harmony export */   findProgramAddressSync: () => (/* binding */ findProgramAddressSync)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _program_common_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../program/common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/common.js\");\n\n\n\n\n\n// Sync version of web3.PublicKey.createWithSeed.\nfunction createWithSeedSync(fromPublicKey, seed, programId) {\n    const buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat([\n        fromPublicKey.toBuffer(),\n        buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(seed),\n        programId.toBuffer()\n    ]);\n    const hash = js_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256.digest(buffer);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_3__.PublicKey(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(hash));\n}\n// Sync version of web3.PublicKey.createProgramAddress.\nfunction createProgramAddressSync(seeds, programId) {\n    const MAX_SEED_LENGTH = 32;\n    let buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(0);\n    seeds.forEach(function(seed) {\n        if (seed.length > MAX_SEED_LENGTH) {\n            throw new TypeError(`Max seed length exceeded`);\n        }\n        buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat([\n            buffer,\n            toBuffer(seed)\n        ]);\n    });\n    buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat([\n        buffer,\n        programId.toBuffer(),\n        buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(\"ProgramDerivedAddress\")\n    ]);\n    let hash = (0,js_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(new Uint8Array(buffer));\n    let publicKeyBytes = new (bn_js__WEBPACK_IMPORTED_MODULE_1___default())(hash, 16).toArray(undefined, 32);\n    if (_solana_web3_js__WEBPACK_IMPORTED_MODULE_3__.PublicKey.isOnCurve(new Uint8Array(publicKeyBytes))) {\n        throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_3__.PublicKey(publicKeyBytes);\n}\n// Sync version of web3.PublicKey.findProgramAddress.\nfunction findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while(nonce != 0){\n        try {\n            const seedsWithNonce = seeds.concat(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from([\n                nonce\n            ]));\n            address = createProgramAddressSync(seedsWithNonce, programId);\n        } catch (err) {\n            if (err instanceof TypeError) {\n                throw err;\n            }\n            nonce--;\n            continue;\n        }\n        return [\n            address,\n            nonce\n        ];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n}\nconst toBuffer = (arr)=>{\n    if (arr instanceof buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer) {\n        return arr;\n    } else if (arr instanceof Uint8Array) {\n        return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n    } else {\n        return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(arr);\n    }\n};\nasync function associated(programId, ...args) {\n    let seeds = [\n        buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from([\n            97,\n            110,\n            99,\n            104,\n            111,\n            114\n        ])\n    ]; // b\"anchor\".\n    args.forEach((arg)=>{\n        seeds.push(arg instanceof buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer ? arg : (0,_program_common_js__WEBPACK_IMPORTED_MODULE_4__.translateAddress)(arg).toBuffer());\n    });\n    const [assoc] = await _solana_web3_js__WEBPACK_IMPORTED_MODULE_3__.PublicKey.findProgramAddress(seeds, (0,_program_common_js__WEBPACK_IMPORTED_MODULE_4__.translateAddress)(programId));\n    return assoc;\n} //# sourceMappingURL=pubkey.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3B1YmtleS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBZ0M7QUFDVDtBQUMwQjtBQUNMO0FBQ1k7QUFDeEQsaURBQWlEO0FBQzFDLFNBQVNNLG1CQUFtQkMsYUFBYSxFQUFFQyxJQUFJLEVBQUVDLFNBQVM7SUFDN0QsTUFBTUMsU0FBU1YsMENBQU1BLENBQUNXLE1BQU0sQ0FBQztRQUN6QkosY0FBY0ssUUFBUTtRQUN0QlosMENBQU1BLENBQUNhLElBQUksQ0FBQ0w7UUFDWkMsVUFBVUcsUUFBUTtLQUNyQjtJQUNELE1BQU1FLE9BQU9YLDZDQUFVQSxDQUFDWSxNQUFNLENBQUNMO0lBQy9CLE9BQU8sSUFBSU4sc0RBQVNBLENBQUNKLDBDQUFNQSxDQUFDYSxJQUFJLENBQUNDO0FBQ3JDO0FBQ0EsdURBQXVEO0FBQ2hELFNBQVNFLHlCQUF5QkMsS0FBSyxFQUFFUixTQUFTO0lBQ3JELE1BQU1TLGtCQUFrQjtJQUN4QixJQUFJUixTQUFTViwwQ0FBTUEsQ0FBQ21CLEtBQUssQ0FBQztJQUMxQkYsTUFBTUcsT0FBTyxDQUFDLFNBQVVaLElBQUk7UUFDeEIsSUFBSUEsS0FBS2EsTUFBTSxHQUFHSCxpQkFBaUI7WUFDL0IsTUFBTSxJQUFJSSxVQUFVLENBQUMsd0JBQXdCLENBQUM7UUFDbEQ7UUFDQVosU0FBU1YsMENBQU1BLENBQUNXLE1BQU0sQ0FBQztZQUFDRDtZQUFRRSxTQUFTSjtTQUFNO0lBQ25EO0lBQ0FFLFNBQVNWLDBDQUFNQSxDQUFDVyxNQUFNLENBQUM7UUFDbkJEO1FBQ0FELFVBQVVHLFFBQVE7UUFDbEJaLDBDQUFNQSxDQUFDYSxJQUFJLENBQUM7S0FDZjtJQUNELElBQUlDLE9BQU9YLGlEQUFVQSxDQUFDLElBQUlvQixXQUFXYjtJQUNyQyxJQUFJYyxpQkFBaUIsSUFBSXZCLDhDQUFFQSxDQUFDYSxNQUFNLElBQUlXLE9BQU8sQ0FBQ0MsV0FBVztJQUN6RCxJQUFJdEIsc0RBQVNBLENBQUN1QixTQUFTLENBQUMsSUFBSUosV0FBV0Msa0JBQWtCO1FBQ3JELE1BQU0sSUFBSUksTUFBTSxDQUFDLDhDQUE4QyxDQUFDO0lBQ3BFO0lBQ0EsT0FBTyxJQUFJeEIsc0RBQVNBLENBQUNvQjtBQUN6QjtBQUNBLHFEQUFxRDtBQUM5QyxTQUFTSyx1QkFBdUJaLEtBQUssRUFBRVIsU0FBUztJQUNuRCxJQUFJcUIsUUFBUTtJQUNaLElBQUlDO0lBQ0osTUFBT0QsU0FBUyxFQUFHO1FBQ2YsSUFBSTtZQUNBLE1BQU1FLGlCQUFpQmYsTUFBTU4sTUFBTSxDQUFDWCwwQ0FBTUEsQ0FBQ2EsSUFBSSxDQUFDO2dCQUFDaUI7YUFBTTtZQUN2REMsVUFBVWYseUJBQXlCZ0IsZ0JBQWdCdkI7UUFDdkQsRUFDQSxPQUFPd0IsS0FBSztZQUNSLElBQUlBLGVBQWVYLFdBQVc7Z0JBQzFCLE1BQU1XO1lBQ1Y7WUFDQUg7WUFDQTtRQUNKO1FBQ0EsT0FBTztZQUFDQztZQUFTRDtTQUFNO0lBQzNCO0lBQ0EsTUFBTSxJQUFJRixNQUFNLENBQUMsNkNBQTZDLENBQUM7QUFDbkU7QUFDQSxNQUFNaEIsV0FBVyxDQUFDc0I7SUFDZCxJQUFJQSxlQUFlbEMsMENBQU1BLEVBQUU7UUFDdkIsT0FBT2tDO0lBQ1gsT0FDSyxJQUFJQSxlQUFlWCxZQUFZO1FBQ2hDLE9BQU92QiwwQ0FBTUEsQ0FBQ2EsSUFBSSxDQUFDcUIsSUFBSXhCLE1BQU0sRUFBRXdCLElBQUlDLFVBQVUsRUFBRUQsSUFBSUUsVUFBVTtJQUNqRSxPQUNLO1FBQ0QsT0FBT3BDLDBDQUFNQSxDQUFDYSxJQUFJLENBQUNxQjtJQUN2QjtBQUNKO0FBQ08sZUFBZUcsV0FBVzVCLFNBQVMsRUFBRSxHQUFHNkIsSUFBSTtJQUMvQyxJQUFJckIsUUFBUTtRQUFDakIsMENBQU1BLENBQUNhLElBQUksQ0FBQztZQUFDO1lBQUk7WUFBSztZQUFJO1lBQUs7WUFBSztTQUFJO0tBQUUsRUFBRSxhQUFhO0lBQ3RFeUIsS0FBS2xCLE9BQU8sQ0FBQyxDQUFDbUI7UUFDVnRCLE1BQU11QixJQUFJLENBQUNELGVBQWV2QywwQ0FBTUEsR0FBR3VDLE1BQU1sQyxvRUFBZ0JBLENBQUNrQyxLQUFLM0IsUUFBUTtJQUMzRTtJQUNBLE1BQU0sQ0FBQzZCLE1BQU0sR0FBRyxNQUFNckMsc0RBQVNBLENBQUNzQyxrQkFBa0IsQ0FBQ3pCLE9BQU9aLG9FQUFnQkEsQ0FBQ0k7SUFDM0UsT0FBT2dDO0FBQ1gsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3B1YmtleS5qcz9kOTczIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcbmltcG9ydCBCTiBmcm9tIFwiYm4uanNcIjtcbmltcG9ydCB7IHNoYTI1NiBhcyBzaGEyNTZTeW5jIH0gZnJvbSBcImpzLXNoYTI1NlwiO1xuaW1wb3J0IHsgUHVibGljS2V5IH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiO1xuaW1wb3J0IHsgdHJhbnNsYXRlQWRkcmVzcyB9IGZyb20gXCIuLi9wcm9ncmFtL2NvbW1vbi5qc1wiO1xuLy8gU3luYyB2ZXJzaW9uIG9mIHdlYjMuUHVibGljS2V5LmNyZWF0ZVdpdGhTZWVkLlxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVdpdGhTZWVkU3luYyhmcm9tUHVibGljS2V5LCBzZWVkLCBwcm9ncmFtSWQpIHtcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuY29uY2F0KFtcbiAgICAgICAgZnJvbVB1YmxpY0tleS50b0J1ZmZlcigpLFxuICAgICAgICBCdWZmZXIuZnJvbShzZWVkKSxcbiAgICAgICAgcHJvZ3JhbUlkLnRvQnVmZmVyKCksXG4gICAgXSk7XG4gICAgY29uc3QgaGFzaCA9IHNoYTI1NlN5bmMuZGlnZXN0KGJ1ZmZlcik7XG4gICAgcmV0dXJuIG5ldyBQdWJsaWNLZXkoQnVmZmVyLmZyb20oaGFzaCkpO1xufVxuLy8gU3luYyB2ZXJzaW9uIG9mIHdlYjMuUHVibGljS2V5LmNyZWF0ZVByb2dyYW1BZGRyZXNzLlxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVByb2dyYW1BZGRyZXNzU3luYyhzZWVkcywgcHJvZ3JhbUlkKSB7XG4gICAgY29uc3QgTUFYX1NFRURfTEVOR1RIID0gMzI7XG4gICAgbGV0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvYygwKTtcbiAgICBzZWVkcy5mb3JFYWNoKGZ1bmN0aW9uIChzZWVkKSB7XG4gICAgICAgIGlmIChzZWVkLmxlbmd0aCA+IE1BWF9TRUVEX0xFTkdUSCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgTWF4IHNlZWQgbGVuZ3RoIGV4Y2VlZGVkYCk7XG4gICAgICAgIH1cbiAgICAgICAgYnVmZmVyID0gQnVmZmVyLmNvbmNhdChbYnVmZmVyLCB0b0J1ZmZlcihzZWVkKV0pO1xuICAgIH0pO1xuICAgIGJ1ZmZlciA9IEJ1ZmZlci5jb25jYXQoW1xuICAgICAgICBidWZmZXIsXG4gICAgICAgIHByb2dyYW1JZC50b0J1ZmZlcigpLFxuICAgICAgICBCdWZmZXIuZnJvbShcIlByb2dyYW1EZXJpdmVkQWRkcmVzc1wiKSxcbiAgICBdKTtcbiAgICBsZXQgaGFzaCA9IHNoYTI1NlN5bmMobmV3IFVpbnQ4QXJyYXkoYnVmZmVyKSk7XG4gICAgbGV0IHB1YmxpY0tleUJ5dGVzID0gbmV3IEJOKGhhc2gsIDE2KS50b0FycmF5KHVuZGVmaW5lZCwgMzIpO1xuICAgIGlmIChQdWJsaWNLZXkuaXNPbkN1cnZlKG5ldyBVaW50OEFycmF5KHB1YmxpY0tleUJ5dGVzKSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHNlZWRzLCBhZGRyZXNzIG11c3QgZmFsbCBvZmYgdGhlIGN1cnZlYCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUHVibGljS2V5KHB1YmxpY0tleUJ5dGVzKTtcbn1cbi8vIFN5bmMgdmVyc2lvbiBvZiB3ZWIzLlB1YmxpY0tleS5maW5kUHJvZ3JhbUFkZHJlc3MuXG5leHBvcnQgZnVuY3Rpb24gZmluZFByb2dyYW1BZGRyZXNzU3luYyhzZWVkcywgcHJvZ3JhbUlkKSB7XG4gICAgbGV0IG5vbmNlID0gMjU1O1xuICAgIGxldCBhZGRyZXNzO1xuICAgIHdoaWxlIChub25jZSAhPSAwKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBzZWVkc1dpdGhOb25jZSA9IHNlZWRzLmNvbmNhdChCdWZmZXIuZnJvbShbbm9uY2VdKSk7XG4gICAgICAgICAgICBhZGRyZXNzID0gY3JlYXRlUHJvZ3JhbUFkZHJlc3NTeW5jKHNlZWRzV2l0aE5vbmNlLCBwcm9ncmFtSWQpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGlmIChlcnIgaW5zdGFuY2VvZiBUeXBlRXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBub25jZS0tO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFthZGRyZXNzLCBub25jZV07XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIGZpbmQgYSB2aWFibGUgcHJvZ3JhbSBhZGRyZXNzIG5vbmNlYCk7XG59XG5jb25zdCB0b0J1ZmZlciA9IChhcnIpID0+IHtcbiAgICBpZiAoYXJyIGluc3RhbmNlb2YgQnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBhcnI7XG4gICAgfVxuICAgIGVsc2UgaWYgKGFyciBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGFyci5idWZmZXIsIGFyci5ieXRlT2Zmc2V0LCBhcnIuYnl0ZUxlbmd0aCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oYXJyKTtcbiAgICB9XG59O1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFzc29jaWF0ZWQocHJvZ3JhbUlkLCAuLi5hcmdzKSB7XG4gICAgbGV0IHNlZWRzID0gW0J1ZmZlci5mcm9tKFs5NywgMTEwLCA5OSwgMTA0LCAxMTEsIDExNF0pXTsgLy8gYlwiYW5jaG9yXCIuXG4gICAgYXJncy5mb3JFYWNoKChhcmcpID0+IHtcbiAgICAgICAgc2VlZHMucHVzaChhcmcgaW5zdGFuY2VvZiBCdWZmZXIgPyBhcmcgOiB0cmFuc2xhdGVBZGRyZXNzKGFyZykudG9CdWZmZXIoKSk7XG4gICAgfSk7XG4gICAgY29uc3QgW2Fzc29jXSA9IGF3YWl0IFB1YmxpY0tleS5maW5kUHJvZ3JhbUFkZHJlc3Moc2VlZHMsIHRyYW5zbGF0ZUFkZHJlc3MocHJvZ3JhbUlkKSk7XG4gICAgcmV0dXJuIGFzc29jO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHVia2V5LmpzLm1hcCJdLCJuYW1lcyI6WyJCdWZmZXIiLCJCTiIsInNoYTI1NiIsInNoYTI1NlN5bmMiLCJQdWJsaWNLZXkiLCJ0cmFuc2xhdGVBZGRyZXNzIiwiY3JlYXRlV2l0aFNlZWRTeW5jIiwiZnJvbVB1YmxpY0tleSIsInNlZWQiLCJwcm9ncmFtSWQiLCJidWZmZXIiLCJjb25jYXQiLCJ0b0J1ZmZlciIsImZyb20iLCJoYXNoIiwiZGlnZXN0IiwiY3JlYXRlUHJvZ3JhbUFkZHJlc3NTeW5jIiwic2VlZHMiLCJNQVhfU0VFRF9MRU5HVEgiLCJhbGxvYyIsImZvckVhY2giLCJsZW5ndGgiLCJUeXBlRXJyb3IiLCJVaW50OEFycmF5IiwicHVibGljS2V5Qnl0ZXMiLCJ0b0FycmF5IiwidW5kZWZpbmVkIiwiaXNPbkN1cnZlIiwiRXJyb3IiLCJmaW5kUHJvZ3JhbUFkZHJlc3NTeW5jIiwibm9uY2UiLCJhZGRyZXNzIiwic2VlZHNXaXRoTm9uY2UiLCJlcnIiLCJhcnIiLCJieXRlT2Zmc2V0IiwiYnl0ZUxlbmd0aCIsImFzc29jaWF0ZWQiLCJhcmdzIiwiYXJnIiwicHVzaCIsImFzc29jIiwiZmluZFByb2dyYW1BZGRyZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/pubkey.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/registry.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/utils/registry.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeUpgradeableLoaderState: () => (/* binding */ decodeUpgradeableLoaderState),\n/* harmony export */   fetchData: () => (/* binding */ fetchData),\n/* harmony export */   verifiedBuild: () => (/* binding */ verifiedBuild)\n/* harmony export */ });\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cross-fetch */ \"(ssr)/./node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @coral-xyz/borsh */ \"(ssr)/./node_modules/@coral-xyz/borsh/dist/index.js\");\n\n\n/**\n * Returns a verified build from the anchor registry. null if no such\n * verified build exists, e.g., if the program has been upgraded since the\n * last verified build.\n */ async function verifiedBuild(connection, programId, limit = 5) {\n    const url = `https://api.apr.dev/api/v0/program/${programId.toString()}/latest?limit=${limit}`;\n    const [programData, latestBuildsResp] = await Promise.all([\n        fetchData(connection, programId),\n        cross_fetch__WEBPACK_IMPORTED_MODULE_0___default()(url)\n    ]);\n    // Filter out all non successful builds.\n    const latestBuilds = (await latestBuildsResp.json()).filter((b)=>!b.aborted && b.state === \"Built\" && b.verified === \"Verified\");\n    if (latestBuilds.length === 0) {\n        return null;\n    }\n    // Get the latest build.\n    const build = latestBuilds[0];\n    // Has the program been upgraded since the last build?\n    if (programData.slot.toNumber() !== build.verified_slot) {\n        return null;\n    }\n    // Success.\n    return build;\n}\n/**\n * Returns the program data account for this program, containing the\n * metadata for this program, e.g., the upgrade authority.\n */ async function fetchData(connection, programId) {\n    const accountInfo = await connection.getAccountInfo(programId);\n    if (accountInfo === null) {\n        throw new Error(\"program account not found\");\n    }\n    const { program } = decodeUpgradeableLoaderState(accountInfo.data);\n    const programdataAccountInfo = await connection.getAccountInfo(program.programdataAddress);\n    if (programdataAccountInfo === null) {\n        throw new Error(\"program data account not found\");\n    }\n    const { programData } = decodeUpgradeableLoaderState(programdataAccountInfo.data);\n    return programData;\n}\nconst UPGRADEABLE_LOADER_STATE_LAYOUT = _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.rustEnum([\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.struct([], \"uninitialized\"),\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.struct([\n        _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.option(_coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.publicKey(), \"authorityAddress\")\n    ], \"buffer\"),\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.struct([\n        _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.publicKey(\"programdataAddress\")\n    ], \"program\"),\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.struct([\n        _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.u64(\"slot\"),\n        _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.option(_coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.publicKey(), \"upgradeAuthorityAddress\")\n    ], \"programData\")\n], undefined, _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.u32());\nfunction decodeUpgradeableLoaderState(data) {\n    return UPGRADEABLE_LOADER_STATE_LAYOUT.decode(data);\n} //# sourceMappingURL=registry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3JlZ2lzdHJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFnQztBQUNVO0FBQzFDOzs7O0NBSUMsR0FDTSxlQUFlRSxjQUFjQyxVQUFVLEVBQUVDLFNBQVMsRUFBRUMsUUFBUSxDQUFDO0lBQ2hFLE1BQU1DLE1BQU0sQ0FBQyxtQ0FBbUMsRUFBRUYsVUFBVUcsUUFBUSxHQUFHLGNBQWMsRUFBRUYsTUFBTSxDQUFDO0lBQzlGLE1BQU0sQ0FBQ0csYUFBYUMsaUJBQWlCLEdBQUcsTUFBTUMsUUFBUUMsR0FBRyxDQUFDO1FBQ3REQyxVQUFVVCxZQUFZQztRQUN0Qkosa0RBQUtBLENBQUNNO0tBQ1Q7SUFDRCx3Q0FBd0M7SUFDeEMsTUFBTU8sZUFBZSxDQUFDLE1BQU1KLGlCQUFpQkssSUFBSSxFQUFDLEVBQUdDLE1BQU0sQ0FBQyxDQUFDQyxJQUFNLENBQUNBLEVBQUVDLE9BQU8sSUFBSUQsRUFBRUUsS0FBSyxLQUFLLFdBQVdGLEVBQUVHLFFBQVEsS0FBSztJQUN2SCxJQUFJTixhQUFhTyxNQUFNLEtBQUssR0FBRztRQUMzQixPQUFPO0lBQ1g7SUFDQSx3QkFBd0I7SUFDeEIsTUFBTUMsUUFBUVIsWUFBWSxDQUFDLEVBQUU7SUFDN0Isc0RBQXNEO0lBQ3RELElBQUlMLFlBQVljLElBQUksQ0FBQ0MsUUFBUSxPQUFPRixNQUFNRyxhQUFhLEVBQUU7UUFDckQsT0FBTztJQUNYO0lBQ0EsV0FBVztJQUNYLE9BQU9IO0FBQ1g7QUFDQTs7O0NBR0MsR0FDTSxlQUFlVCxVQUFVVCxVQUFVLEVBQUVDLFNBQVM7SUFDakQsTUFBTXFCLGNBQWMsTUFBTXRCLFdBQVd1QixjQUFjLENBQUN0QjtJQUNwRCxJQUFJcUIsZ0JBQWdCLE1BQU07UUFDdEIsTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0EsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsNkJBQTZCSixZQUFZSyxJQUFJO0lBQ2pFLE1BQU1DLHlCQUF5QixNQUFNNUIsV0FBV3VCLGNBQWMsQ0FBQ0UsUUFBUUksa0JBQWtCO0lBQ3pGLElBQUlELDJCQUEyQixNQUFNO1FBQ2pDLE1BQU0sSUFBSUosTUFBTTtJQUNwQjtJQUNBLE1BQU0sRUFBRW5CLFdBQVcsRUFBRSxHQUFHcUIsNkJBQTZCRSx1QkFBdUJELElBQUk7SUFDaEYsT0FBT3RCO0FBQ1g7QUFDQSxNQUFNeUIsa0NBQWtDaEMsc0RBQWMsQ0FBQztJQUNuREEsb0RBQVksQ0FBQyxFQUFFLEVBQUU7SUFDakJBLG9EQUFZLENBQUM7UUFBQ0Esb0RBQVksQ0FBQ0EsdURBQWUsSUFBSTtLQUFvQixFQUFFO0lBQ3BFQSxvREFBWSxDQUFDO1FBQUNBLHVEQUFlLENBQUM7S0FBc0IsRUFBRTtJQUN0REEsb0RBQVksQ0FBQztRQUNUQSxpREFBUyxDQUFDO1FBQ1ZBLG9EQUFZLENBQUNBLHVEQUFlLElBQUk7S0FDbkMsRUFBRTtDQUNOLEVBQUVzQyxXQUFXdEMsaURBQVM7QUFDaEIsU0FBUzRCLDZCQUE2QkMsSUFBSTtJQUM3QyxPQUFPRyxnQ0FBZ0NRLE1BQU0sQ0FBQ1g7QUFDbEQsRUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3JlZ2lzdHJ5LmpzPzZiZTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZldGNoIGZyb20gXCJjcm9zcy1mZXRjaFwiO1xuaW1wb3J0ICogYXMgYm9yc2ggZnJvbSBcIkBjb3JhbC14eXovYm9yc2hcIjtcbi8qKlxuICogUmV0dXJucyBhIHZlcmlmaWVkIGJ1aWxkIGZyb20gdGhlIGFuY2hvciByZWdpc3RyeS4gbnVsbCBpZiBubyBzdWNoXG4gKiB2ZXJpZmllZCBidWlsZCBleGlzdHMsIGUuZy4sIGlmIHRoZSBwcm9ncmFtIGhhcyBiZWVuIHVwZ3JhZGVkIHNpbmNlIHRoZVxuICogbGFzdCB2ZXJpZmllZCBidWlsZC5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHZlcmlmaWVkQnVpbGQoY29ubmVjdGlvbiwgcHJvZ3JhbUlkLCBsaW1pdCA9IDUpIHtcbiAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly9hcGkuYXByLmRldi9hcGkvdjAvcHJvZ3JhbS8ke3Byb2dyYW1JZC50b1N0cmluZygpfS9sYXRlc3Q/bGltaXQ9JHtsaW1pdH1gO1xuICAgIGNvbnN0IFtwcm9ncmFtRGF0YSwgbGF0ZXN0QnVpbGRzUmVzcF0gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgIGZldGNoRGF0YShjb25uZWN0aW9uLCBwcm9ncmFtSWQpLFxuICAgICAgICBmZXRjaCh1cmwpLFxuICAgIF0pO1xuICAgIC8vIEZpbHRlciBvdXQgYWxsIG5vbiBzdWNjZXNzZnVsIGJ1aWxkcy5cbiAgICBjb25zdCBsYXRlc3RCdWlsZHMgPSAoYXdhaXQgbGF0ZXN0QnVpbGRzUmVzcC5qc29uKCkpLmZpbHRlcigoYikgPT4gIWIuYWJvcnRlZCAmJiBiLnN0YXRlID09PSBcIkJ1aWx0XCIgJiYgYi52ZXJpZmllZCA9PT0gXCJWZXJpZmllZFwiKTtcbiAgICBpZiAobGF0ZXN0QnVpbGRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgLy8gR2V0IHRoZSBsYXRlc3QgYnVpbGQuXG4gICAgY29uc3QgYnVpbGQgPSBsYXRlc3RCdWlsZHNbMF07XG4gICAgLy8gSGFzIHRoZSBwcm9ncmFtIGJlZW4gdXBncmFkZWQgc2luY2UgdGhlIGxhc3QgYnVpbGQ/XG4gICAgaWYgKHByb2dyYW1EYXRhLnNsb3QudG9OdW1iZXIoKSAhPT0gYnVpbGQudmVyaWZpZWRfc2xvdCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgLy8gU3VjY2Vzcy5cbiAgICByZXR1cm4gYnVpbGQ7XG59XG4vKipcbiAqIFJldHVybnMgdGhlIHByb2dyYW0gZGF0YSBhY2NvdW50IGZvciB0aGlzIHByb2dyYW0sIGNvbnRhaW5pbmcgdGhlXG4gKiBtZXRhZGF0YSBmb3IgdGhpcyBwcm9ncmFtLCBlLmcuLCB0aGUgdXBncmFkZSBhdXRob3JpdHkuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaERhdGEoY29ubmVjdGlvbiwgcHJvZ3JhbUlkKSB7XG4gICAgY29uc3QgYWNjb3VudEluZm8gPSBhd2FpdCBjb25uZWN0aW9uLmdldEFjY291bnRJbmZvKHByb2dyYW1JZCk7XG4gICAgaWYgKGFjY291bnRJbmZvID09PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcInByb2dyYW0gYWNjb3VudCBub3QgZm91bmRcIik7XG4gICAgfVxuICAgIGNvbnN0IHsgcHJvZ3JhbSB9ID0gZGVjb2RlVXBncmFkZWFibGVMb2FkZXJTdGF0ZShhY2NvdW50SW5mby5kYXRhKTtcbiAgICBjb25zdCBwcm9ncmFtZGF0YUFjY291bnRJbmZvID0gYXdhaXQgY29ubmVjdGlvbi5nZXRBY2NvdW50SW5mbyhwcm9ncmFtLnByb2dyYW1kYXRhQWRkcmVzcyk7XG4gICAgaWYgKHByb2dyYW1kYXRhQWNjb3VudEluZm8gPT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicHJvZ3JhbSBkYXRhIGFjY291bnQgbm90IGZvdW5kXCIpO1xuICAgIH1cbiAgICBjb25zdCB7IHByb2dyYW1EYXRhIH0gPSBkZWNvZGVVcGdyYWRlYWJsZUxvYWRlclN0YXRlKHByb2dyYW1kYXRhQWNjb3VudEluZm8uZGF0YSk7XG4gICAgcmV0dXJuIHByb2dyYW1EYXRhO1xufVxuY29uc3QgVVBHUkFERUFCTEVfTE9BREVSX1NUQVRFX0xBWU9VVCA9IGJvcnNoLnJ1c3RFbnVtKFtcbiAgICBib3JzaC5zdHJ1Y3QoW10sIFwidW5pbml0aWFsaXplZFwiKSxcbiAgICBib3JzaC5zdHJ1Y3QoW2JvcnNoLm9wdGlvbihib3JzaC5wdWJsaWNLZXkoKSwgXCJhdXRob3JpdHlBZGRyZXNzXCIpXSwgXCJidWZmZXJcIiksXG4gICAgYm9yc2guc3RydWN0KFtib3JzaC5wdWJsaWNLZXkoXCJwcm9ncmFtZGF0YUFkZHJlc3NcIildLCBcInByb2dyYW1cIiksXG4gICAgYm9yc2guc3RydWN0KFtcbiAgICAgICAgYm9yc2gudTY0KFwic2xvdFwiKSxcbiAgICAgICAgYm9yc2gub3B0aW9uKGJvcnNoLnB1YmxpY0tleSgpLCBcInVwZ3JhZGVBdXRob3JpdHlBZGRyZXNzXCIpLFxuICAgIF0sIFwicHJvZ3JhbURhdGFcIiksXG5dLCB1bmRlZmluZWQsIGJvcnNoLnUzMigpKTtcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVVcGdyYWRlYWJsZUxvYWRlclN0YXRlKGRhdGEpIHtcbiAgICByZXR1cm4gVVBHUkFERUFCTEVfTE9BREVSX1NUQVRFX0xBWU9VVC5kZWNvZGUoZGF0YSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWdpc3RyeS5qcy5tYXAiXSwibmFtZXMiOlsiZmV0Y2giLCJib3JzaCIsInZlcmlmaWVkQnVpbGQiLCJjb25uZWN0aW9uIiwicHJvZ3JhbUlkIiwibGltaXQiLCJ1cmwiLCJ0b1N0cmluZyIsInByb2dyYW1EYXRhIiwibGF0ZXN0QnVpbGRzUmVzcCIsIlByb21pc2UiLCJhbGwiLCJmZXRjaERhdGEiLCJsYXRlc3RCdWlsZHMiLCJqc29uIiwiZmlsdGVyIiwiYiIsImFib3J0ZWQiLCJzdGF0ZSIsInZlcmlmaWVkIiwibGVuZ3RoIiwiYnVpbGQiLCJzbG90IiwidG9OdW1iZXIiLCJ2ZXJpZmllZF9zbG90IiwiYWNjb3VudEluZm8iLCJnZXRBY2NvdW50SW5mbyIsIkVycm9yIiwicHJvZ3JhbSIsImRlY29kZVVwZ3JhZGVhYmxlTG9hZGVyU3RhdGUiLCJkYXRhIiwicHJvZ3JhbWRhdGFBY2NvdW50SW5mbyIsInByb2dyYW1kYXRhQWRkcmVzcyIsIlVQR1JBREVBQkxFX0xPQURFUl9TVEFURV9MQVlPVVQiLCJydXN0RW51bSIsInN0cnVjdCIsIm9wdGlvbiIsInB1YmxpY0tleSIsInU2NCIsInVuZGVmaW5lZCIsInUzMiIsImRlY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/registry.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/rpc.js":
/*!******************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/utils/rpc.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMultipleAccounts: () => (/* binding */ getMultipleAccounts),\n/* harmony export */   getMultipleAccountsAndContext: () => (/* binding */ getMultipleAccountsAndContext),\n/* harmony export */   invoke: () => (/* binding */ invoke),\n/* harmony export */   simulateTransaction: () => (/* binding */ simulateTransaction)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _utils_common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/common.js\");\n/* harmony import */ var _program_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../program/common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/common.js\");\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../provider.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/provider.js\");\n/* harmony import */ var superstruct__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! superstruct */ \"(ssr)/./node_modules/superstruct/lib/index.es.js\");\n\n\n\n\n\n/**\n * Sends a transaction to a program with the given accounts and instruction\n * data.\n */ async function invoke(programId, accounts, data, provider) {\n    programId = (0,_program_common_js__WEBPACK_IMPORTED_MODULE_2__.translateAddress)(programId);\n    if (!provider) {\n        provider = (0,_provider_js__WEBPACK_IMPORTED_MODULE_3__.getProvider)();\n    }\n    const tx = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction();\n    tx.add(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({\n        programId,\n        keys: accounts !== null && accounts !== void 0 ? accounts : [],\n        data\n    }));\n    if (provider.sendAndConfirm === undefined) {\n        throw new Error(\"This function requires 'Provider.sendAndConfirm' to be implemented.\");\n    }\n    return await provider.sendAndConfirm(tx, []);\n}\nconst GET_MULTIPLE_ACCOUNTS_LIMIT = 99;\nasync function getMultipleAccounts(connection, publicKeys, commitment) {\n    const results = await getMultipleAccountsAndContext(connection, publicKeys, commitment);\n    return results.map((result)=>{\n        return result ? {\n            publicKey: result.publicKey,\n            account: result.account\n        } : null;\n    });\n}\nasync function getMultipleAccountsAndContext(connection, publicKeys, commitment) {\n    if (publicKeys.length <= GET_MULTIPLE_ACCOUNTS_LIMIT) {\n        return await getMultipleAccountsAndContextCore(connection, publicKeys, commitment);\n    } else {\n        const batches = (0,_utils_common_js__WEBPACK_IMPORTED_MODULE_1__.chunks)(publicKeys, GET_MULTIPLE_ACCOUNTS_LIMIT);\n        const results = await Promise.all(batches.map((batch)=>getMultipleAccountsAndContextCore(connection, batch, commitment)));\n        return results.flat();\n    }\n}\nasync function getMultipleAccountsAndContextCore(connection, publicKeys, commitmentOverride) {\n    const commitment = commitmentOverride !== null && commitmentOverride !== void 0 ? commitmentOverride : connection.commitment;\n    const { value: accountInfos, context } = await connection.getMultipleAccountsInfoAndContext(publicKeys, commitment);\n    const accounts = accountInfos.map((account, idx)=>{\n        if (account === null) {\n            return null;\n        }\n        return {\n            publicKey: publicKeys[idx],\n            account,\n            context\n        };\n    });\n    return accounts;\n}\n// copy from @solana/web3.js that has a commitment param\nasync function simulateTransaction(connection, transaction, signers, commitment, includeAccounts) {\n    if (signers && signers.length > 0) {\n        transaction.sign(...signers);\n    }\n    // @ts-expect-error\n    const message = transaction._compile();\n    const signData = message.serialize();\n    // @ts-expect-error\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString(\"base64\");\n    const config = {\n        encoding: \"base64\",\n        commitment: commitment !== null && commitment !== void 0 ? commitment : connection.commitment\n    };\n    if (includeAccounts) {\n        const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map((key)=>key.toBase58());\n        config[\"accounts\"] = {\n            encoding: \"base64\",\n            addresses\n        };\n    }\n    if (signers) {\n        config.sigVerify = true;\n    }\n    const args = [\n        encodedTransaction,\n        config\n    ];\n    // @ts-expect-error\n    const unsafeRes = await connection._rpcRequest(\"simulateTransaction\", args);\n    const res = (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.create)(unsafeRes, SimulatedTransactionResponseStruct);\n    if (\"error\" in res) {\n        let logs;\n        if (\"data\" in res.error) {\n            logs = res.error.data.logs;\n            if (logs && Array.isArray(logs)) {\n                const traceIndent = \"\\n    \";\n                const logTrace = traceIndent + logs.join(traceIndent);\n                console.error(res.error.message, logTrace);\n            }\n        }\n        throw new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SendTransactionError(\"failed to simulate transaction: \" + res.error.message, logs);\n    }\n    return res.result;\n}\n// copy from @solana/web3.js\nfunction jsonRpcResult(schema) {\n    return (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.coerce)(createRpcResult(schema), UnknownRpcResult, (value)=>{\n        if (\"error\" in value) {\n            return value;\n        } else {\n            return {\n                ...value,\n                result: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.create)(value.result, schema)\n            };\n        }\n    });\n}\n// copy from @solana/web3.js\nconst UnknownRpcResult = createRpcResult((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.unknown)());\n// copy from @solana/web3.js\nfunction createRpcResult(result) {\n    return (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.union)([\n        (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n            jsonrpc: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.literal)(\"2.0\"),\n            id: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)(),\n            result\n        }),\n        (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n            jsonrpc: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.literal)(\"2.0\"),\n            id: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)(),\n            error: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n                code: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.unknown)(),\n                message: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)(),\n                data: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.any)())\n            })\n        })\n    ]);\n}\n// copy from @solana/web3.js\nfunction jsonRpcResultAndContext(value) {\n    return jsonRpcResult((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n        context: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n            slot: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.number)()\n        }),\n        value\n    }));\n}\n// copy from @solana/web3.js\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n    err: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.nullable)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.union)([\n        (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({}),\n        (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)()\n    ])),\n    logs: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.nullable)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)())),\n    accounts: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.nullable)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.nullable)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n        executable: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.boolean)(),\n        owner: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)(),\n        lamports: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.number)(),\n        data: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)()),\n        rentEpoch: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.number)())\n    }))))),\n    unitsConsumed: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.number)())\n})); //# sourceMappingURL=rpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/rpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/sha256.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/utils/sha256.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hash: () => (/* binding */ hash)\n/* harmony export */ });\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction hash(data) {\n    return (0,js_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256)(data);\n} //# sourceMappingURL=sha256.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3NoYTI1Ni5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUM7QUFDNUIsU0FBU0MsS0FBS0MsSUFBSTtJQUNyQixPQUFPRixpREFBTUEsQ0FBQ0U7QUFDbEIsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3NoYTI1Ni5qcz81YjVlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNoYTI1NiB9IGZyb20gXCJqcy1zaGEyNTZcIjtcbmV4cG9ydCBmdW5jdGlvbiBoYXNoKGRhdGEpIHtcbiAgICByZXR1cm4gc2hhMjU2KGRhdGEpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhMjU2LmpzLm1hcCJdLCJuYW1lcyI6WyJzaGEyNTYiLCJoYXNoIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/sha256.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/token.js":
/*!********************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/utils/token.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ASSOCIATED_PROGRAM_ID: () => (/* binding */ ASSOCIATED_PROGRAM_ID),\n/* harmony export */   TOKEN_PROGRAM_ID: () => (/* binding */ TOKEN_PROGRAM_ID),\n/* harmony export */   associatedAddress: () => (/* binding */ associatedAddress)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n\nconst TOKEN_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\");\nconst ASSOCIATED_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\");\nasync function associatedAddress({ mint, owner }) {\n    return (await _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey.findProgramAddress([\n        owner.toBuffer(),\n        TOKEN_PROGRAM_ID.toBuffer(),\n        mint.toBuffer()\n    ], ASSOCIATED_PROGRAM_ID))[0];\n} //# sourceMappingURL=token.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3Rva2VuLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNEM7QUFDckMsTUFBTUMsbUJBQW1CLElBQUlELHNEQUFTQSxDQUFDLCtDQUErQztBQUN0RixNQUFNRSx3QkFBd0IsSUFBSUYsc0RBQVNBLENBQUMsZ0RBQWdEO0FBQzVGLGVBQWVHLGtCQUFrQixFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRztJQUNwRCxPQUFPLENBQUMsTUFBTUwsc0RBQVNBLENBQUNNLGtCQUFrQixDQUFDO1FBQUNELE1BQU1FLFFBQVE7UUFBSU4saUJBQWlCTSxRQUFRO1FBQUlILEtBQUtHLFFBQVE7S0FBRyxFQUFFTCxzQkFBcUIsQ0FBRSxDQUFDLEVBQUU7QUFDM0ksRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2xhbmEtbGlxdWlkaXR5LXBvb2wvLi9ub2RlX21vZHVsZXMvQHByb2plY3Qtc2VydW0vYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3Rva2VuLmpzPzQ3NDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHVibGljS2V5IH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiO1xuZXhwb3J0IGNvbnN0IFRPS0VOX1BST0dSQU1fSUQgPSBuZXcgUHVibGljS2V5KFwiVG9rZW5rZWdRZmVaeWlOd0FKYk5iR0tQRlhDV3VCdmY5U3M2MjNWUTVEQVwiKTtcbmV4cG9ydCBjb25zdCBBU1NPQ0lBVEVEX1BST0dSQU1fSUQgPSBuZXcgUHVibGljS2V5KFwiQVRva2VuR1B2YmRHVnhyMWIyaHZaYnNpcVc1eFdIMjVlZlROc0xKQThrbkxcIik7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYXNzb2NpYXRlZEFkZHJlc3MoeyBtaW50LCBvd25lciwgfSkge1xuICAgIHJldHVybiAoYXdhaXQgUHVibGljS2V5LmZpbmRQcm9ncmFtQWRkcmVzcyhbb3duZXIudG9CdWZmZXIoKSwgVE9LRU5fUFJPR1JBTV9JRC50b0J1ZmZlcigpLCBtaW50LnRvQnVmZmVyKCldLCBBU1NPQ0lBVEVEX1BST0dSQU1fSUQpKVswXTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRva2VuLmpzLm1hcCJdLCJuYW1lcyI6WyJQdWJsaWNLZXkiLCJUT0tFTl9QUk9HUkFNX0lEIiwiQVNTT0NJQVRFRF9QUk9HUkFNX0lEIiwiYXNzb2NpYXRlZEFkZHJlc3MiLCJtaW50Iiwib3duZXIiLCJmaW5kUHJvZ3JhbUFkZHJlc3MiLCJ0b0J1ZmZlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/token.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@project-serum/anchor/dist/esm/workspace.js":
/*!******************************************************************!*\
  !*** ./node_modules/@project-serum/anchor/dist/esm/workspace.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! camelcase */ \"(ssr)/./node_modules/camelcase/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(camelcase__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var toml__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! toml */ \"(ssr)/./node_modules/toml/index.js\");\n/* harmony import */ var toml__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(toml__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _program_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./program/index.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/program/index.js\");\n/* harmony import */ var _utils_common_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/common.js */ \"(ssr)/./node_modules/@project-serum/anchor/dist/esm/utils/common.js\");\n\n\n\n\n\nlet _populatedWorkspace = false;\n/**\n * The `workspace` namespace provides a convenience API to automatically\n * search for and deserialize [[Program]] objects defined by compiled IDLs\n * in an Anchor workspace.\n *\n * This API is for Node only.\n */ const workspace = new Proxy({}, {\n    get (workspaceCache, programName) {\n        if (_utils_common_js__WEBPACK_IMPORTED_MODULE_4__.isBrowser) {\n            throw new Error(\"Workspaces aren't available in the browser\");\n        }\n        const fs = __webpack_require__(/*! fs */ \"fs\");\n        const process = __webpack_require__(/*! process */ \"process\");\n        if (!_populatedWorkspace) {\n            const path = __webpack_require__(/*! path */ \"path\");\n            let projectRoot = process.cwd();\n            while(!fs.existsSync(path.join(projectRoot, \"Anchor.toml\"))){\n                const parentDir = path.dirname(projectRoot);\n                if (parentDir === projectRoot) {\n                    projectRoot = undefined;\n                }\n                projectRoot = parentDir;\n            }\n            if (projectRoot === undefined) {\n                throw new Error(\"Could not find workspace root.\");\n            }\n            const idlFolder = `${projectRoot}/target/idl`;\n            if (!fs.existsSync(idlFolder)) {\n                throw new Error(`${idlFolder} doesn't exist. Did you use \"anchor build\"?`);\n            }\n            const idlMap = new Map();\n            fs.readdirSync(idlFolder).filter((file)=>file.endsWith(\".json\")).forEach((file)=>{\n                const filePath = `${idlFolder}/${file}`;\n                const idlStr = fs.readFileSync(filePath);\n                const idl = JSON.parse(idlStr);\n                idlMap.set(idl.name, idl);\n                const name = camelcase__WEBPACK_IMPORTED_MODULE_0___default()(idl.name, {\n                    pascalCase: true\n                });\n                if (idl.metadata && idl.metadata.address) {\n                    workspaceCache[name] = new _program_index_js__WEBPACK_IMPORTED_MODULE_3__.Program(idl, new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey(idl.metadata.address));\n                }\n            });\n            // Override the workspace programs if the user put them in the config.\n            const anchorToml = toml__WEBPACK_IMPORTED_MODULE_1__.parse(fs.readFileSync(path.join(projectRoot, \"Anchor.toml\"), \"utf-8\"));\n            const clusterId = anchorToml.provider.cluster;\n            if (anchorToml.programs && anchorToml.programs[clusterId]) {\n                attachWorkspaceOverride(workspaceCache, anchorToml.programs[clusterId], idlMap);\n            }\n            _populatedWorkspace = true;\n        }\n        return workspaceCache[programName];\n    }\n});\nfunction attachWorkspaceOverride(workspaceCache, overrideConfig, idlMap) {\n    Object.keys(overrideConfig).forEach((programName)=>{\n        const wsProgramName = camelcase__WEBPACK_IMPORTED_MODULE_0___default()(programName, {\n            pascalCase: true\n        });\n        const entry = overrideConfig[programName];\n        const overrideAddress = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey(typeof entry === \"string\" ? entry : entry.address);\n        let idl = idlMap.get(programName);\n        if (typeof entry !== \"string\" && entry.idl) {\n            idl = JSON.parse((__webpack_require__(/*! fs */ \"fs\").readFileSync)(entry.idl, \"utf-8\"));\n        }\n        if (!idl) {\n            throw new Error(`Error loading workspace IDL for ${programName}`);\n        }\n        workspaceCache[wsProgramName] = new _program_index_js__WEBPACK_IMPORTED_MODULE_3__.Program(idl, overrideAddress);\n    });\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (workspace); //# sourceMappingURL=workspace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@project-serum/anchor/dist/esm/workspace.js\n");

/***/ })

};
;